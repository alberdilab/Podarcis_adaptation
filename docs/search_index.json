[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1,Carlos Cabido2, Kevin Kohl3, Antton Alberdi4 and Ostaizka Aizpurua5 Last update: 2025-02-22 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Pittsburgh, kkohl78@gmail.com↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering 4 samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;, &quot;AC85&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) %&gt;% filter(Tube_code != &quot;AC85&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;, &quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;,&quot;AC85&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) ##Removal of samples of individual LI1_2nd_6 #Counts_raw columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AFV13&quot;) %&gt;% filter(Tube_code != &quot;AD06&quot;) %&gt;% filter(Tube_code != &quot;AD31&quot;) %&gt;% filter(Tube_code != &quot;AE03&quot;) %&gt;% filter(Tube_code != &quot;AF12&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db3,genomecol=2,annotcol=c(9,10,19)) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats_nofmt$raw_reads %&gt;% sum() [1] 3470249934 data_stats_nofmt$raw_reads %&gt;% mean() [1] 30710176 data_stats_nofmt$raw_reads %&gt;% sd() [1] 14502253 3.2 DNA fractions #Overall data_stats_nofmt %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.460 0.147 data_stats_nofmt %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats_nofmt %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats_nofmt %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, species, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_zbhaaetfurp1m1dc1nv2, .table th.tinytable_css_zbhaaetfurp1m1dc1nv2 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_yjlij15msp82ml4ct4p2, .table th.tinytable_css_yjlij15msp82ml4ct4p2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point species type AC79 1.0000000 1_Acclimation Podarcis_muralis Control AC80 1.0000000 1_Acclimation Podarcis_muralis Treatment AC81 0.9813013 1_Acclimation Podarcis_muralis Treatment AC82 0.7490771 1_Acclimation Podarcis_muralis Treatment AC83 1.0000000 1_Acclimation Podarcis_muralis Control AC84 1.0000000 1_Acclimation Podarcis_muralis Control AC86 0.8800275 1_Acclimation Podarcis_muralis Control AC87 0.9672854 1_Acclimation Podarcis_muralis Treatment AC88 0.3142108 1_Acclimation Podarcis_muralis Control AC89 0.9338962 1_Acclimation Podarcis_muralis Treatment AC90 1.0000000 1_Acclimation Podarcis_muralis Control AC91 1.0000000 1_Acclimation Podarcis_muralis Control AC92 1.0000000 1_Acclimation Podarcis_muralis Control AC93 1.0000000 1_Acclimation Podarcis_muralis Treatment AC94 0.9159348 1_Acclimation Podarcis_muralis Treatment AC95 0.9239904 1_Acclimation Podarcis_muralis Treatment AC96 0.9425962 1_Acclimation Podarcis_muralis Treatment AC97 0.9394886 1_Acclimation Podarcis_liolepis Hot_control AC98 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AC99 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD01 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD02 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD03 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD04 0.8896057 1_Acclimation Podarcis_liolepis Hot_control AD05 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD07 0.9515379 1_Acclimation Podarcis_liolepis Hot_control AD74 0.9017271 5_Post-FMT1 Podarcis_muralis Control AD75 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD76 0.9862581 5_Post-FMT1 Podarcis_muralis Treatment AD77 0.8963376 5_Post-FMT1 Podarcis_muralis Treatment AD78 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD79 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD80 0.8808155 5_Post-FMT1 Podarcis_muralis Treatment AD81 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD82 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD83 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD84 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD85 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD86 0.9889084 5_Post-FMT1 Podarcis_muralis Control AD87 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD88 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD89 0.9562489 5_Post-FMT1 Podarcis_muralis Control AD90 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD93 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AD94 0.7947750 5_Post-FMT1 Podarcis_liolepis Hot_control AD95 0.9506977 5_Post-FMT1 Podarcis_liolepis Hot_control AD96 0.9171413 5_Post-FMT1 Podarcis_liolepis Hot_control AD97 0.9257685 5_Post-FMT1 Podarcis_liolepis Hot_control AD98 0.9048349 5_Post-FMT1 Podarcis_liolepis Hot_control AD99 0.9966152 5_Post-FMT1 Podarcis_liolepis Hot_control AE01 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE02 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE04 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE05 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE06 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE07 0.7797794 6_Post-FMT2 Podarcis_muralis Control AE08 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE09 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE91 0.9259146 6_Post-FMT2 Podarcis_muralis Treatment AE92 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE93 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE94 0.9152960 6_Post-FMT2 Podarcis_muralis Treatment AE95 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE96 0.7786112 6_Post-FMT2 Podarcis_muralis Treatment AE97 0.9365037 6_Post-FMT2 Podarcis_muralis Control AE98 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE99 0.8513354 6_Post-FMT2 Podarcis_muralis Treatment AF01 0.9046369 6_Post-FMT2 Podarcis_muralis Treatment AF02 1.0000000 6_Post-FMT2 Podarcis_muralis Control AF03 0.9030087 6_Post-FMT2 Podarcis_muralis Treatment AF04 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF05 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF06 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF07 0.9526443 6_Post-FMT2 Podarcis_liolepis Hot_control AF08 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF09 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF10 0.9716162 6_Post-FMT2 Podarcis_liolepis Hot_control AF11 0.9654152 6_Post-FMT2 Podarcis_liolepis Hot_control AF13 0.8818742 6_Post-FMT2 Podarcis_liolepis Hot_control AFU87 0.8810513 0_Wild Podarcis_muralis Control AFU88 0.8317800 0_Wild Podarcis_muralis Treatment AFU91 0.8923699 0_Wild Podarcis_muralis Treatment AFU92 0.8094776 0_Wild Podarcis_muralis Treatment AFU93 0.8517368 0_Wild Podarcis_muralis Control AFU94 0.8325385 0_Wild Podarcis_muralis Treatment AFU95 0.8419270 0_Wild Podarcis_muralis Treatment AFU96 0.8326820 0_Wild Podarcis_muralis Control AFU97 0.8107271 0_Wild Podarcis_muralis Treatment AFU98 0.7506522 0_Wild Podarcis_muralis Control AFU99 0.8582371 0_Wild Podarcis_muralis Treatment AFV01 0.9331539 0_Wild Podarcis_muralis Treatment AFV02 0.8316460 0_Wild Podarcis_muralis Treatment AFV03 0.8752591 0_Wild Podarcis_muralis Control AFV04 0.9180285 0_Wild Podarcis_muralis Control AFV05 1.0000000 0_Wild Podarcis_muralis Control AFV06 1.0000000 0_Wild Podarcis_muralis Control AFV07 0.8460805 0_Wild Podarcis_muralis Control AFV08 0.7497043 0_Wild Podarcis_liolepis Hot_control AFV09 0.5412999 0_Wild Podarcis_liolepis Hot_control AFV10 0.8002499 0_Wild Podarcis_liolepis Hot_control AFV11 0.8225298 0_Wild Podarcis_liolepis Hot_control AFV12 0.7925988 0_Wild Podarcis_liolepis Hot_control AFV14 0.8106269 0_Wild Podarcis_liolepis Hot_control AFV15 0.9691106 0_Wild Podarcis_liolepis Hot_control AFV16 0.8218990 0_Wild Podarcis_liolepis Hot_control AFV17 0.8091152 0_Wild Podarcis_liolepis Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db3) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample transplants_metadata&lt;-sample_metadata%&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, &quot;_&quot;, transplants_metadata$individual) merged_data&lt;-genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., transplants_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes(x=newID,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ time_point + type , scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text(angle = 45, hjust = 1, size=0)) 5.1.1.1 Wild samples merged_data %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% ggplot(aes(x=newID,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Population, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text(angle = 45, hjust = 1, size=0), strip.text.x = element_text(size = 12) ) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_vebrn2t0qeyxmg107q2o, .table th.tinytable_css_vebrn2t0qeyxmg107q2o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1lkzq5vg3q5vgvycicgk, .table th.tinytable_css_1lkzq5vg3q5vgvycicgk { border-bottom: solid #d3d8dc 0.1em; } phylum total p__Bacteroidota 38.99±19.77 p__Bacillota_A 24.93±15.66 p__Bacillota 11.41±13.11 p__Pseudomonadota 9.47±15.89 p__Campylobacterota 5.52±9.44 p__Verrucomicrobiota 2.8±6.71 p__Desulfobacterota 2.39±3.68 p__Chlamydiota 1.1±6.09 p__Fusobacteriota 1.06±2.87 p__Cyanobacteriota 0.93±1.67 p__Bacillota_C 0.48±0.67 p__Spirochaetota 0.41±1.25 p__Bacillota_B 0.26±0.5 p__Actinomycetota 0.13±0.65 p__Elusimicrobiota 0.11±0.63 5.1.2.1 Wild samples #Cold and wet population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Cold_wet&quot;) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total, Population) %&gt;% tt() .table td.tinytable_css_t79thdl6jh93gb4nvqm3, .table th.tinytable_css_t79thdl6jh93gb4nvqm3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_mba0i22g9ryh96z61aak, .table th.tinytable_css_mba0i22g9ryh96z61aak { border-bottom: solid #d3d8dc 0.1em; } phylum total Population p__Bacteroidota 41.93±15.4 Cold_wet p__Bacillota_A 33.96±16.7 Cold_wet p__Bacillota 5.73±4.73 Cold_wet p__Campylobacterota 5.39±4.64 Cold_wet p__Verrucomicrobiota 4.36±3.06 Cold_wet p__Pseudomonadota 3.75±3.76 Cold_wet p__Desulfobacterota 2.31±1.6 Cold_wet p__Bacillota_C 0.85±0.82 Cold_wet p__Cyanobacteriota 0.64±0.83 Cold_wet p__Bacillota_B 0.5±0.77 Cold_wet p__Fusobacteriota 0.37±1.28 Cold_wet p__Spirochaetota 0.12±0.35 Cold_wet p__Actinomycetota 0.09±0.22 Cold_wet p__Chlamydiota 0±0 Cold_wet p__Elusimicrobiota 0±0 Cold_wet #Hot and dry population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Hot_dry&quot;)%&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total, Population) %&gt;% tt() .table td.tinytable_css_w7gbo7armp6d7ee1sd06, .table th.tinytable_css_w7gbo7armp6d7ee1sd06 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_34zfapqtuyrgoq6m4bwr, .table th.tinytable_css_34zfapqtuyrgoq6m4bwr { border-bottom: solid #d3d8dc 0.1em; } phylum total Population p__Bacillota_A 33.9±16.17 Hot_dry p__Bacteroidota 27.63±17.64 Hot_dry p__Campylobacterota 13.53±20.98 Hot_dry p__Pseudomonadota 10.92±9.94 Hot_dry p__Bacillota 6.09±7.66 Hot_dry p__Spirochaetota 2.66±2.78 Hot_dry p__Desulfobacterota 1.69±1.85 Hot_dry p__Fusobacteriota 1.34±1.73 Hot_dry p__Bacillota_B 0.76±0.73 Hot_dry p__Bacillota_C 0.73±0.5 Hot_dry p__Cyanobacteriota 0.52±0.65 Hot_dry p__Chlamydiota 0.12±0.18 Hot_dry p__Verrucomicrobiota 0.06±0.1 Hot_dry p__Elusimicrobiota 0.05±0.14 Hot_dry p__Actinomycetota 0±0 Hot_dry phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() .table td.tinytable_css_xaix2k517bwsxz1hc5j0, .table th.tinytable_css_xaix2k517bwsxz1hc5j0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qk8kfbreswr9rr4yht9y, .table th.tinytable_css_qk8kfbreswr9rr4yht9y { border-bottom: solid #d3d8dc 0.1em; } family mean sd f__Bacteroidaceae 2.274097e-01 0.1377460191 f__Lachnospiraceae 1.419542e-01 0.1060400609 f__Tannerellaceae 1.052113e-01 0.0798105552 f__Helicobacteraceae 5.482179e-02 0.0939198894 f__Mycoplasmoidaceae 3.779760e-02 0.0769702163 f__Erysipelotrichaceae 3.558116e-02 0.0452679859 f__UBA3700 3.477932e-02 0.0566589931 f__Marinifilaceae 2.811614e-02 0.0272424787 f__Rikenellaceae 2.742025e-02 0.0472707261 f__Enterobacteriaceae 2.703916e-02 0.0931893598 f__ 2.480299e-02 0.0783192466 f__Desulfovibrionaceae 2.388423e-02 0.0368380673 f__DTU072 2.196482e-02 0.0377935560 f__Coprobacillaceae 2.026761e-02 0.0485853374 f__Ruminococcaceae 1.843403e-02 0.0429198382 f__Rhizobiaceae 1.589430e-02 0.0782006108 f__LL51 1.566201e-02 0.0618746114 f__UBA3830 1.521452e-02 0.0443064571 f__Akkermansiaceae 1.231722e-02 0.0318491868 f__Chlamydiaceae 1.102955e-02 0.0609324876 f__Fusobacteriaceae 1.062243e-02 0.0287150702 f__CAG-239 9.195095e-03 0.0152792343 f__Enterococcaceae 8.489685e-03 0.0475329243 f__Gastranaerophilaceae 7.896804e-03 0.0146615354 f__Oscillospiraceae 6.665614e-03 0.0075340215 f__UBA1997 6.654018e-03 0.0316037124 f__Streptococcaceae 6.641534e-03 0.0349271274 f__UBA1242 4.292811e-03 0.0148188416 f__Brevinemataceae 4.124163e-03 0.0125408501 f__Acutalibacteraceae 3.520363e-03 0.0111685520 f__RUG11792 2.939483e-03 0.0256458772 f__Clostridiaceae 2.872976e-03 0.0174679306 f__UBA660 2.616700e-03 0.0118496658 f__Peptococcaceae 2.571997e-03 0.0050061894 f__Acidaminococcaceae 1.992656e-03 0.0051179550 f__CAG-508 1.886101e-03 0.0065442473 f__MGBC116941 1.794711e-03 0.0078030434 f__Moraxellaceae 1.549600e-03 0.0099492135 f__RUG14156 1.436968e-03 0.0045798317 f__Staphylococcaceae 1.420548e-03 0.0051876026 f__Anaerovoracaceae 1.419448e-03 0.0027940501 f__Elusimicrobiaceae 1.094926e-03 0.0062968979 f__CAG-288 9.900964e-04 0.0061460292 f__Anaerotignaceae 9.378191e-04 0.0041295557 f__CALVMC01 7.841648e-04 0.0044518921 f__Eggerthellaceae 6.684766e-04 0.0021680955 f__Massilibacillaceae 6.361650e-04 0.0016604868 f__Mycobacteriaceae 6.206608e-04 0.0061686116 f__UBA1820 4.734674e-04 0.0013114043 f__CAG-274 4.715044e-04 0.0022481665 f__Arcobacteraceae 3.952837e-04 0.0050311403 f__Burkholderiaceae_C 3.859282e-04 0.0049120644 f__Muribaculaceae 3.530205e-04 0.0009551303 f__UBA932 3.315540e-04 0.0011440466 f__Hepatoplasmataceae 3.118266e-04 0.0039689042 f__Rhodobacteraceae 3.086954e-04 0.0039290509 f__Weeksellaceae 2.891388e-04 0.0032147979 f__Eubacteriaceae 1.717981e-04 0.0006864841 f__Sphingobacteriaceae 1.570839e-04 0.0012723965 f__Devosiaceae 1.554377e-04 0.0015415699 f__Pumilibacteraceae 1.332615e-04 0.0007806480 f__WRAU01 1.001832e-04 0.0012751239 f__Peptostreptococcaceae 2.386174e-05 0.0003037103 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() .table td.tinytable_css_pzd9521nt42g22rnify3, .table th.tinytable_css_pzd9521nt42g22rnify3 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_90mm3et2n509fvwrgp6b, .table th.tinytable_css_90mm3et2n509fvwrgp6b { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } genus mean sd g__Bacteroides 1.382926e-01 0.0920032571 g__Parabacteroides 9.904133e-02 0.0802542390 g__Phocaeicola 7.153404e-02 0.0800482312 g__Helicobacter_J 3.134971e-02 0.0604401831 g__Mycoplasmoides 3.134532e-02 0.0767612590 g__Odoribacter 2.621752e-02 0.0268768229 g__Roseburia 2.440315e-02 0.0568479592 g__NHYM01 2.347208e-02 0.0812680260 g__Alistipes 2.238431e-02 0.0287773461 g__Agrobacterium 1.589430e-02 0.0782006108 g__Coprobacillus 1.465604e-02 0.0453169437 g__Akkermansia 1.231722e-02 0.0318491868 g__Fusobacterium_A 1.052530e-02 0.0287210281 g__Kineothrix 9.164130e-03 0.0417447130 g__Proteus 9.032094e-03 0.0696251911 g__Dielma 8.740983e-03 0.0090734943 g__CAG-95 8.288926e-03 0.0208473803 g__JAAYNV01 7.310639e-03 0.0179633321 g__Desulfovibrio 7.263839e-03 0.0215581255 g__UBA866 7.060080e-03 0.0296008336 g__Enterococcus 7.009138e-03 0.0465118216 g__Lactococcus 6.641534e-03 0.0349271274 g__Ureaplasma 6.452284e-03 0.0139607378 g__Parabacteroides_B 6.170012e-03 0.0101743409 g__Lacrimispora 6.065624e-03 0.0098256761 g__CALXRO01 6.014865e-03 0.0314920783 g__Citrobacter 5.933110e-03 0.0341557798 g__NSJ-61 5.781249e-03 0.0202810699 g__Breznakia 5.564284e-03 0.0241428306 g__Clostridium_AQ 5.556334e-03 0.0123793796 g__Bilophila 5.075640e-03 0.0089747581 g__Hungatella_A 4.994779e-03 0.0097142374 g__Escherichia 4.369344e-03 0.0271677429 g__Salmonella 4.345679e-03 0.0149191799 g__UMGS1251 4.339588e-03 0.0073750520 g__MGBC136627 4.332069e-03 0.0165008605 g__Hungatella 4.176005e-03 0.0194642338 g__Clostridium_Q 4.172364e-03 0.0052636284 g__Brevinema 4.124163e-03 0.0125408501 g__Thomasclavelia 4.071210e-03 0.0111076756 g__Scatousia 3.775236e-03 0.0104685258 g__Mailhella 3.768157e-03 0.0104391636 g__Copromonas 3.665999e-03 0.0050570070 g__Enterocloster 3.636009e-03 0.0047554262 g__Ventrimonas 3.588185e-03 0.0072099736 g__Fournierella 3.333548e-03 0.0063334555 g__Limenecus 3.250445e-03 0.0066883504 g__Mucinivorans 3.025408e-03 0.0381170508 g__Lawsonia 2.934617e-03 0.0103982739 g__MGBC133411 2.920704e-03 0.0074528633 g__Caccovivens 2.905297e-03 0.0112986180 g__Sarcina 2.872976e-03 0.0174679306 g__Eisenbergiella 2.813967e-03 0.0069564511 g__Bacteroides_G 2.798642e-03 0.0353549161 g__CAJLXD01 2.747625e-03 0.0089201436 g__Acetatifactor 2.670592e-03 0.0055417916 g__Blautia 2.614831e-03 0.0062528952 g__Velocimicrobium 2.249786e-03 0.0067935472 g__C-19 2.249403e-03 0.0048413627 g__CAZU01 2.203235e-03 0.0066553126 g__Negativibacillus 2.158482e-03 0.0056150748 g__Intestinimonas 2.016185e-03 0.0035627866 g__Rikenella 2.010528e-03 0.0037405656 g__Phascolarctobacterium 1.992656e-03 0.0051179550 g__Butyricimonas 1.898622e-03 0.0042589185 g__RGIG6463 1.867182e-03 0.0040356672 g__MGBC116941 1.794711e-03 0.0078030434 g__JALFVM01 1.723146e-03 0.0038766038 g__Oscillibacter 1.555776e-03 0.0025322746 g__Acinetobacter 1.549600e-03 0.0099492135 g__Pseudoflavonifractor 1.498479e-03 0.0027084903 g__Citrobacter_A 1.453111e-03 0.0061575430 g__Staphylococcus 1.420548e-03 0.0051876026 g__14-2 1.235831e-03 0.0098338188 g__RGIG4733 1.233222e-03 0.0038377464 g__Beduini 1.224676e-03 0.0025560979 g__Scatocola 1.169639e-03 0.0045880797 g__Enterococcus_A 1.130830e-03 0.0101256721 g__UBA1436 1.094926e-03 0.0062968979 g__Faecisoma 1.064489e-03 0.0056211048 g__RGIG9287 1.005532e-03 0.0095211414 g__CAG-345 9.900964e-04 0.0061460292 g__Lachnotalea 9.652241e-04 0.0034087639 g__Blautia_A 9.605906e-04 0.0029643005 g__Ruthenibacterium 8.656067e-04 0.0024886030 g__CAG-269 8.327368e-04 0.0048161518 g__Marseille-P3106 8.281280e-04 0.0017918195 g__WRHT01 6.707384e-04 0.0027526059 g__Eggerthella 6.684766e-04 0.0021680955 g__CHH4-2 6.410569e-04 0.0020385755 g__Corynebacterium 6.206608e-04 0.0061686116 g__Serratia_A 6.113853e-04 0.0077816639 g__Anaerotruncus 6.096001e-04 0.0016491604 g__RUG14156 5.771083e-04 0.0021932785 g__RGIG1896 5.718490e-04 0.0051950321 g__IOR16 5.609254e-04 0.0016463276 g__Faecimonas 5.178376e-04 0.0054675942 g__CAG-56 5.127827e-04 0.0016660597 g__MGBC140009 4.881527e-04 0.0024564749 g__CALURL01 4.835577e-04 0.0017068950 g__Merdimorpha 4.734674e-04 0.0013114043 g__RGIG8482 4.589147e-04 0.0030379482 g__Enterobacter 4.249450e-04 0.0042197469 g__Klebsiella 4.229631e-04 0.0049955361 g__Caccenecus 4.111497e-04 0.0018165880 g__Aliarcobacter 3.952837e-04 0.0050311403 g__Scatenecus 3.875653e-04 0.0018336672 g__Alcaligenes 3.859282e-04 0.0049120644 g__Plesiomonas 3.790241e-04 0.0027677213 g__JAHHSE01 3.551378e-04 0.0015042772 g__HGM05232 3.530205e-04 0.0009551303 g__Enterococcus_B 3.497169e-04 0.0022734615 g__Egerieousia 3.315540e-04 0.0011440466 g__Stoquefichus 3.156829e-04 0.0020935047 g__Hepatoplasma 3.118266e-04 0.0039689042 g__Paracoccus 3.086954e-04 0.0039290509 g__Moheibacter 2.891388e-04 0.0032147979 g__Scatomorpha 2.755133e-04 0.0010388166 g__Emergencia 2.617388e-04 0.0013338324 g__UBA7185 2.539515e-04 0.0014862267 g__Eubacterium 1.717981e-04 0.0006864841 g__Sphingobacterium 1.570839e-04 0.0012723965 g__Devosia 1.554377e-04 0.0015415699 g__Anaerosporobacter 1.516944e-04 0.0013017745 g__Caccomorpha 1.442887e-04 0.0010763279 g__UBA2658 1.363946e-04 0.0007354659 g__Protoclostridium 1.332615e-04 0.0007806480 g__Angelakisella 1.323289e-04 0.0009415961 g__Cetobacterium_A 9.712510e-05 0.0008903885 g__Rahnella 6.750303e-05 0.0008591734 g__Peptostreptococcus 2.386174e-05 0.0003037103 genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["diversity-analysis.html", "Chapter 6 Diversity analysis 6.1 Alpha diversity 6.2 Beta diversity 6.3 Permanovas", " Chapter 6 Diversity analysis 6.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db3) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) 6.1.1 Wild samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 6.1.2 Acclimation samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 6.1.3 Post-Transplant_1 samples bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) 6.1.4 Post-Transplant_2 samples bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) 6.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) beta_q1f &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, dist = dist) 6.3 Permanovas 6.3.0.1 Load required data 6.3.1 1. Are the wild populations similar? 6.3.1.1 Wild: cold vs warm adapted lizards 6.3.1.1.1 Number of samples used [1] 27 6.3.1.2 Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.978 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.98 Hot_dry 0.97302 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wem4qvbkjerx6qr4iysw, .table th.tinytable_css_wem4qvbkjerx6qr4iysw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_qua1l10n9qhub2h26qe6, .table th.tinytable_css_qua1l10n9qhub2h26qe6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA 6.3.1.3 Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.951 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.954 Hot_dry 0.94763 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_shyl6pxlyjf51cyls3ke, .table th.tinytable_css_shyl6pxlyjf51cyls3ke { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_i31t7wi7684ah9wwatab, .table th.tinytable_css_i31t7wi7684ah9wwatab { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA 6.3.1.4 Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.133 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.126 Hot_dry 0.12705 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ahwrxiip0w668t283i62, .table th.tinytable_css_ahwrxiip0w668t283i62 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8dksht4jro8bcj0wve6w, .table th.tinytable_css_8dksht4jro8bcj0wve6w { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA 6.3.1.5 Functional func &lt;- as.matrix(beta_q1f$S) func &lt;- as.dist(func[rownames(func) %in% samples_to_keep, colnames(func) %in% samples_to_keep]) betadisper(func, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.019387 0.019387 1.653 999 0.199 Residuals 25 0.293200 0.011728 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.205 Hot_dry 0.21033 adonis2(func ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(func))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ljjn83zy0vgxa6j7fmqi, .table th.tinytable_css_ljjn83zy0vgxa6j7fmqi { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8aie2aa0imnx2qoukjpr, .table th.tinytable_css_8aie2aa0imnx2qoukjpr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.0831048 0.1680538 5.05002 0.067 Residual 25 0.4114083 0.8319462 NA NA Total 26 0.4945131 1.0000000 NA NA beta_q0n_nmds_wild &lt;- richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) beta_q1n_nmds_wild &lt;- neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) beta_q1p_nmds_wild &lt;- phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) beta_q1f_nmds_wild &lt;- func %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) 6.3.2 2. Effect of acclimation 6.3.2.0.1 Number of samples used [1] 26 6.3.2.1 Richness richness_accli &lt;- as.matrix(beta_q0n$S) richness_accli &lt;- as.dist(richness_accli[rownames(richness_accli) %in% samples_to_keep_accli, colnames(richness_accli) %in% samples_to_keep_accli]) betadisper(richness_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.093187 0.093187 11.812 999 0.002 ** Residuals 24 0.189340 0.007889 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.002 Hot_dry 0.0021532 adonis2(richness_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(richness_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_d8drboji9sn2vj1iy4mf, .table th.tinytable_css_d8drboji9sn2vj1iy4mf { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5pqyss8eavt4hy0r4h1h, .table th.tinytable_css_5pqyss8eavt4hy0r4h1h { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.639630 0.1929088 5.736415 0.001 Residual 24 6.859879 0.8070912 NA NA Total 25 8.499509 1.0000000 NA NA 6.3.2.2 Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.05603 0.056026 4.1918 999 0.049 * Residuals 24 0.32077 0.013365 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.051 Hot_dry 0.051717 adonis2(neutral_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_l721uxi8meiw4hn3sx58, .table th.tinytable_css_l721uxi8meiw4hn3sx58 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_e1pwxyz42u0jcu83lile, .table th.tinytable_css_e1pwxyz42u0jcu83lile { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.961192 0.2493171 7.970889 0.001 Residual 24 5.905063 0.7506829 NA NA Total 25 7.866255 1.0000000 NA NA 6.3.2.3 Phylogenetic phylo_accli &lt;- as.matrix(beta_q1p$S) phylo_accli &lt;- as.dist(phylo_accli[rownames(phylo_accli) %in% samples_to_keep_accli, colnames(phylo_accli) %in% samples_to_keep_accli]) betadisper(phylo_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03637 0.036365 2.3087 999 0.136 Residuals 24 0.37804 0.015752 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.133 Hot_dry 0.14172 adonis2(phylo_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(phylo_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ga7drn3gz4mzfm4q1s7n, .table th.tinytable_css_ga7drn3gz4mzfm4q1s7n { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_72dc4tswhcwt7wz84hn9, .table th.tinytable_css_72dc4tswhcwt7wz84hn9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2113395 0.1379515 3.84066 0.007 Residual 24 1.3206449 0.8620485 NA NA Total 25 1.5319844 1.0000000 NA NA 6.3.2.4 Functional func_accli &lt;- as.matrix(beta_q1f$S) func_accli &lt;- as.dist(func_accli[rownames(func_accli) %in% samples_to_keep_accli, colnames(func_accli) %in% samples_to_keep_accli]) betadisper(func_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00409 0.004087 0.1789 999 0.673 Residuals 24 0.54821 0.022842 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.68 Hot_dry 0.67607 adonis2(func_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(func_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_mzi8ydut4sqpq2drfcuw, .table th.tinytable_css_mzi8ydut4sqpq2drfcuw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_mw6rd0s080q8v76zzan4, .table th.tinytable_css_mw6rd0s080q8v76zzan4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.00401769 0.005973179 0.1442177 0.636 Residual 24 0.66860401 0.994026821 NA NA Total 25 0.67262170 1.000000000 NA NA beta_q0n_nmds_accli &lt;- richness_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code)) beta_q1n_nmds_accli &lt;- neutral_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code)) beta_q1p_nmds_accli &lt;- phylo_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code)) beta_q1f_nmds_accli &lt;- func_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code)) 6.3.3 3. Comparison between Wild and Acclimation 6.3.3.0.1 Number of samples used [1] 53 6.3.3.0.2 Richness richness_accli1 &lt;- as.matrix(beta_q0n$S) richness_accli1 &lt;- as.dist(richness_accli1[rownames(richness_accli1) %in% samples_to_keep_accli1, colnames(richness_accli1) %in% samples_to_keep_accli1]) betadisper(richness_accli1, subset_meta_accli1$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03286 0.032865 2.9698 999 0.097 . Residuals 51 0.56438 0.011066 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.089 Hot_dry 0.09089 adonis2(richness_accli1 ~ Population*time_point, data = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(richness_accli1))), permutations = 999, strata = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(richness_accli1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_vpzupj2e1eljq0djjati, .table th.tinytable_css_vpzupj2e1eljq0djjati { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_af43mwlue71dql3y6s02, .table th.tinytable_css_af43mwlue71dql3y6s02 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 3.762933 0.2288365 4.846784 0.001 Residual 49 12.680830 0.7711635 NA NA Total 52 16.443763 1.0000000 NA NA #Arrange of metadata dataframe subset_meta_accli1_arrange &lt;- column_to_rownames(subset_meta_accli1, &quot;Tube_code&quot;) subset_meta_accli1_arrange&lt;-subset_meta_accli1_arrange[labels(richness_accli1),] pairwise&lt;-pairwise.adonis(richness_accli1,subset_meta_accli1_arrange$Population_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_4xf3muh2kyn1393njy5a, .table th.tinytable_css_4xf3muh2kyn1393njy5a { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3hs9vsqnimff439ylfxb, .table th.tinytable_css_3hs9vsqnimff439ylfxb { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet.1_Acclimation vs Hot_dry.1_Acclimation 1 1.6396299 5.736415 0.19290877 0.001 0.006 * Cold_wet.1_Acclimation vs Cold_wet.0_Wild 1 0.5273732 1.906862 0.05462715 0.008 0.048 . Cold_wet.1_Acclimation vs Hot_dry.0_Wild 1 1.5558412 5.190707 0.17782052 0.001 0.006 * Hot_dry.1_Acclimation vs Cold_wet.0_Wild 1 1.8259388 8.319131 0.24968031 0.001 0.006 * Hot_dry.1_Acclimation vs Hot_dry.0_Wild 1 0.3856333 1.736034 0.09788177 0.008 0.048 . Cold_wet.0_Wild vs Hot_dry.0_Wild 1 1.5427188 6.625717 0.20950408 0.001 0.006 * 6.3.3.0.3 Neutral neutral_accli1 &lt;- as.matrix(beta_q1n$S) neutral_accli1 &lt;- as.dist(neutral_accli1[rownames(neutral_accli1) %in% samples_to_keep_accli1, colnames(neutral_accli1) %in% samples_to_keep_accli1]) betadisper(neutral_accli1, subset_meta_accli1$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01431 0.014310 1.1177 999 0.324 Residuals 51 0.65296 0.012803 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.312 Hot_dry 0.29539 adonis2(neutral_accli1 ~ Population*time_point, data = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(neutral_accli1))), permutations = 999, strata = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(neutral_accli1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_a7os51gaq3t38peued6j, .table th.tinytable_css_a7os51gaq3t38peued6j { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_15gmdtcjzxdwmyy755su, .table th.tinytable_css_15gmdtcjzxdwmyy755su { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 4.735485 0.2945657 6.820252 0.001 Residual 49 11.340673 0.7054343 NA NA Total 52 16.076158 1.0000000 NA NA pairwise&lt;-pairwise.adonis(neutral_accli1,subset_meta_accli1_arrange$Population_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qw154zv05hmz1kdsyk7c, .table th.tinytable_css_qw154zv05hmz1kdsyk7c { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_838toon0m08s045gc0sz, .table th.tinytable_css_838toon0m08s045gc0sz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet.1_Acclimation vs Hot_dry.1_Acclimation 1 1.9611917 7.970889 0.24931708 0.001 0.006 * Cold_wet.1_Acclimation vs Cold_wet.0_Wild 1 0.7466371 3.064914 0.08498327 0.001 0.006 * Cold_wet.1_Acclimation vs Hot_dry.0_Wild 1 2.1421077 8.176866 0.25412251 0.001 0.006 * Hot_dry.1_Acclimation vs Cold_wet.0_Wild 1 2.0371666 10.078295 0.28730857 0.001 0.006 * Hot_dry.1_Acclimation vs Hot_dry.0_Wild 1 0.6314393 3.060027 0.16054681 0.001 0.006 * Cold_wet.0_Wild vs Hot_dry.0_Wild 1 1.9182663 8.822682 0.26085105 0.001 0.006 * 6.3.3.0.4 Phylogenetic phylo_accli1 &lt;- as.matrix(beta_q1p$S) phylo_accli1 &lt;- as.dist(phylo_accli1[rownames(phylo_accli1) %in% samples_to_keep_accli1, colnames(phylo_accli1) %in% samples_to_keep_accli1]) betadisper(phylo_accli1, subset_meta_accli1$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00001 0.0000111 6e-04 999 0.981 Residuals 51 0.89017 0.0174543 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.982 Hot_dry 0.97998 adonis2(phylo_accli1 ~ Population*time_point, data = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(phylo_accli1))), permutations = 999, strata = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(phylo_accli1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_h1f8jph0xhztgbf1ac2o, .table th.tinytable_css_h1f8jph0xhztgbf1ac2o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_67lvjt4ctq1ehsmg85pr, .table th.tinytable_css_67lvjt4ctq1ehsmg85pr { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 0.7622566 0.2345983 5.006223 0.001 Residual 49 2.4869430 0.7654017 NA NA Total 52 3.2491997 1.0000000 NA NA pairwise&lt;-pairwise.adonis(phylo_accli1,subset_meta_accli1_arrange$Population_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xjdl22mrtiyjd1s5plz6, .table th.tinytable_css_xjdl22mrtiyjd1s5plz6 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_d494igm02uyfxii8gv06, .table th.tinytable_css_d494igm02uyfxii8gv06 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet.1_Acclimation vs Hot_dry.1_Acclimation 1 0.2113395 3.840660 0.1379515 0.011 0.066 Cold_wet.1_Acclimation vs Cold_wet.0_Wild 1 0.2076830 4.216762 0.1133028 0.002 0.012 . Cold_wet.1_Acclimation vs Hot_dry.0_Wild 1 0.3635093 4.799786 0.1666605 0.001 0.006 * Hot_dry.1_Acclimation vs Cold_wet.0_Wild 1 0.2121479 7.924059 0.2406769 0.002 0.012 . Hot_dry.1_Acclimation vs Hot_dry.0_Wild 1 0.2092433 3.885515 0.1953942 0.001 0.006 * Cold_wet.0_Wild vs Hot_dry.0_Wild 1 0.3218613 6.899207 0.2162815 0.001 0.006 * 6.3.3.0.5 Functional func_accli1 &lt;- as.matrix(beta_q1f$S) func_accli1 &lt;- as.dist(func_accli1[rownames(func_accli1) %in% samples_to_keep_accli1, colnames(func_accli1) %in% samples_to_keep_accli1]) betadisper(func_accli1, subset_meta_accli1$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.01374 0.013738 0.7923 999 0.399 Residuals 51 0.88435 0.017340 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.4 Hot_dry 0.3776 adonis2(func_accli1 ~ Population*time_point, data = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(func_accli1))), permutations = 999, strata = subset_meta_accli1 %&gt;% arrange(match(Tube_code,labels(func_accli1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_o1z1cqzxuuiou448rkqz, .table th.tinytable_css_o1z1cqzxuuiou448rkqz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_i7ptpw6ee3dz8i82son8, .table th.tinytable_css_i7ptpw6ee3dz8i82son8 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 0.1024301 0.08662587 1.54908 0.194 Residual 49 1.0800123 0.91337413 NA NA Total 52 1.1824424 1.00000000 NA NA pairwise&lt;-pairwise.adonis(func_accli1,subset_meta_accli1_arrange$Population_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_2a74yzy2n3fhvyhldgwd, .table th.tinytable_css_2a74yzy2n3fhvyhldgwd { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0r8pdrv7e1453fgg2t3m, .table th.tinytable_css_0r8pdrv7e1453fgg2t3m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_wet.1_Acclimation vs Hot_dry.1_Acclimation 1 0.0040176901 0.144217742 0.0059731793 0.634 1.000 Cold_wet.1_Acclimation vs Cold_wet.0_Wild 1 0.0002775823 0.009969841 0.0003020251 0.704 1.000 Cold_wet.1_Acclimation vs Hot_dry.0_Wild 1 0.0871206378 3.762920746 0.1355376396 0.079 0.474 Hot_dry.1_Acclimation vs Cold_wet.0_Wild 1 0.0025235151 0.120315257 0.0047895600 0.606 1.000 Hot_dry.1_Acclimation vs Hot_dry.0_Wild 1 0.0409732757 4.066330477 0.2026444487 0.092 0.552 Cold_wet.0_Wild vs Hot_dry.0_Wild 1 0.0831047968 5.050019518 0.1680537849 0.060 0.360 beta_richness_nmds_accli1 &lt;- richness_accli1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli1, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_neutral_nmds_accli1 &lt;- neutral_accli1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli1, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_phylo_nmds_accli1 &lt;- phylo_accli1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli1, by = join_by(sample == Tube_code)) beta_func_nmds_accli1 &lt;- func_accli1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli1, by = join_by(sample == Tube_code)) 6.3.4 4. Effect of FMT on microbiota community 6.3.4.1 Comparison between Acclimation vs Post-FMT1 6.3.4.1.1 Number of samples used [1] 52 6.3.4.1.2 Richness richness_post3 &lt;- as.matrix(beta_q0n$S) richness_post3 &lt;- as.dist(richness_post3[rownames(richness_post3) %in% samples_to_keep_post3, colnames(richness_post3) %in% samples_to_keep_post3]) betadisper(richness_post3, subset_meta_post3$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.10843 0.108427 25.578 999 0.001 *** Residuals 50 0.21195 0.004239 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.001 Hot_dry 6.0928e-06 adonis2(richness_post3 ~ Population*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ewsveyg7e1skfaj7snqs, .table th.tinytable_css_ewsveyg7e1skfaj7snqs { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_c5oy6lk50dkrukjxjxq3, .table th.tinytable_css_c5oy6lk50dkrukjxjxq3 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 3.472191 0.193401 3.836375 0.001 Residual 48 14.481131 0.806599 NA NA Total 51 17.953321 1.000000 NA NA #Arrange of metadata dataframe subset_meta_post3_arrange &lt;- column_to_rownames(subset_meta_post3, &quot;Tube_code&quot;) subset_meta_post3_arrange&lt;-subset_meta_post3_arrange[labels(richness_post3),] pairwise &lt;- pairwise.adonis(richness_post3, subset_meta_post3_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_i6tiss69ddz06cqhx8fz, .table th.tinytable_css_i6tiss69ddz06cqhx8fz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e07wysz39muynq7icih3, .table th.tinytable_css_e07wysz39muynq7icih3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.3657243 1.123239 0.06966584 0.235 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 1.2605860 4.943717 0.24788342 0.001 0.015 . Control.1_Acclimation vs Control.5_Post-FMT1 1 0.6804988 2.100611 0.12283837 0.002 0.030 . Control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.8481258 2.673290 0.16033371 0.001 0.015 . Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.1180661 3.809275 0.20252111 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 1.3606630 5.087152 0.24124415 0.001 0.015 . Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.7216200 2.172734 0.11956009 0.001 0.015 . Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 0.9551308 2.926054 0.16322910 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.2263345 4.039487 0.20157637 0.001 0.015 . Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 1.4319792 5.384836 0.25180628 0.001 0.015 . Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.8172413 3.194690 0.17558364 0.001 0.015 . Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.5796135 2.441615 0.13239702 0.001 0.015 . Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.5615418 1.729004 0.10335366 0.014 0.210 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.8438429 2.793772 0.14865413 0.001 0.015 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.3734921 1.268929 0.07799710 0.100 1.000 6.3.4.1.3 Neutral neutral_post3 &lt;- as.matrix(beta_q1n$S) neutral_post3 &lt;- as.dist(neutral_post3[rownames(neutral_post3) %in% samples_to_keep_post3, colnames(neutral_post3) %in% samples_to_keep_post3]) betadisper(neutral_post3, subset_meta_post3$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.09089 0.090889 12.898 999 0.002 ** Residuals 50 0.35233 0.007047 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.001 Hot_dry 0.00074926 adonis2(neutral_post3 ~ Population*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yipioyvyv5olw4v31luz, .table th.tinytable_css_yipioyvyv5olw4v31luz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qmr7ui5ltwonk5c5sd1p, .table th.tinytable_css_qmr7ui5ltwonk5c5sd1p { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 4.443476 0.2628643 5.705637 0.001 Residual 48 12.460591 0.7371357 NA NA Total 51 16.904067 1.0000000 NA NA pairwise &lt;- pairwise.adonis(neutral_post3, subset_meta_post3_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_z4ev7bn5a1njueaoosgx, .table th.tinytable_css_z4ev7bn5a1njueaoosgx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fsn3v3scmu6ey7yzyz33, .table th.tinytable_css_fsn3v3scmu6ey7yzyz33 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.2759858 0.9928976 0.06208366 0.457 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 1.4146464 6.5078325 0.30257965 0.001 0.015 . Control.1_Acclimation vs Control.5_Post-FMT1 1 0.8153894 3.0970603 0.17113610 0.001 0.015 . Control.1_Acclimation vs Treatment.5_Post-FMT1 1 1.1809241 4.4856470 0.24265567 0.001 0.015 . Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.4321524 5.7774260 0.27806264 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 1.6347704 6.8326887 0.29925029 0.001 0.015 . Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.9517634 3.3715700 0.17404733 0.001 0.015 . Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 1.3127773 4.6298256 0.23585668 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.6713369 6.2395460 0.28056085 0.001 0.015 . Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 1.5409781 6.8338056 0.29928456 0.001 0.015 . Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.9133614 4.0964534 0.21451383 0.001 0.015 . Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.6954835 3.2951234 0.17077493 0.001 0.015 . Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.6051778 2.2508491 0.13047758 0.016 0.240 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 1.0528902 4.1436369 0.20570451 0.001 0.015 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.4150076 1.6372683 0.09840968 0.058 0.870 6.3.4.1.4 Phylogenetic phylo_post3 &lt;- as.matrix(beta_q1p$S) phylo_post3 &lt;- as.dist(phylo_post3[rownames(phylo_post3) %in% samples_to_keep_post3, colnames(phylo_post3) %in% samples_to_keep_post3]) betadisper(phylo_post3, subset_meta_post3$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04088 0.040882 2.9254 999 0.102 Residuals 50 0.69874 0.013975 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.093 Hot_dry 0.093394 adonis2(phylo_post3 ~ Population*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yqzu7o7fvxkl7vsyuyfh, .table th.tinytable_css_yqzu7o7fvxkl7vsyuyfh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2ctu6f48quyyb5lqxdtd, .table th.tinytable_css_2ctu6f48quyyb5lqxdtd { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 0.6468577 0.2180259 4.461035 0.004 Residual 48 2.3200272 0.7819741 NA NA Total 51 2.9668849 1.0000000 NA NA pairwise &lt;- pairwise.adonis(phylo_post3, subset_meta_post3_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_sdylopoqsamj14b9j1x9, .table th.tinytable_css_sdylopoqsamj14b9j1x9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_pjt96btggkp41bcmgvri, .table th.tinytable_css_pjt96btggkp41bcmgvri { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.05690611 0.7893300 0.04999136 0.559 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 0.10866997 3.0547314 0.16919285 0.010 0.150 Control.1_Acclimation vs Control.5_Post-FMT1 1 0.11760287 2.9988032 0.16661126 0.018 0.270 Control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.09624422 1.7247115 0.10968160 0.134 1.000 Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.18586788 4.1904227 0.21836011 0.004 0.060 Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 0.23108846 4.0521838 0.20208192 0.002 0.030 . Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.26358465 4.3608960 0.21417997 0.005 0.075 Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 0.25319427 3.2738422 0.17915456 0.045 0.675 Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.39050120 5.9837393 0.27218933 0.001 0.015 . Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 0.14203376 5.4200212 0.25303529 0.001 0.015 . Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.09666753 2.3682173 0.13635351 0.020 0.300 Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.09252600 2.9824958 0.15711821 0.006 0.090 Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.01842535 0.4144162 0.02688498 0.774 1.000 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.05987967 1.7387847 0.09802164 0.095 1.000 Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.03212966 0.6477782 0.04139746 0.708 1.000 6.3.4.1.5 Functional func_post3 &lt;- as.matrix(beta_q1f$S) func_post3 &lt;- as.dist(func_post3[rownames(func_post3) %in% samples_to_keep_post3, colnames(func_post3) %in% samples_to_keep_post3]) betadisper(func_post3, subset_meta_post3$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00116 0.0011552 0.0615 999 0.798 Residuals 50 0.93946 0.0187892 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.791 Hot_dry 0.80518 adonis2(func_post3 ~ Population*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(func_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(func_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_srlbywf6zq3nahnk84vj, .table th.tinytable_css_srlbywf6zq3nahnk84vj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_996l0lcmn4jriph55h80, .table th.tinytable_css_996l0lcmn4jriph55h80 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 0.02861503 0.01961684 0.3201497 0.424 Residual 48 1.43008228 0.98038316 NA NA Total 51 1.45869731 1.00000000 NA NA pairwise &lt;- pairwise.adonis(func_post3, subset_meta_post3_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_z3ek24d2o7swcsms454i, .table th.tinytable_css_z3ek24d2o7swcsms454i { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_f1u4f6803u1ustqlgqp4, .table th.tinytable_css_f1u4f6803u1ustqlgqp4 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.022076664 0.65002192 0.041534889 0.400 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 0.016749605 0.52091146 0.033561912 0.475 1.000 Control.1_Acclimation vs Control.5_Post-FMT1 1 -0.008325555 -0.22800110 -0.015434681 0.902 1.000 Control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.126527918 3.45550519 0.197960767 0.065 0.975 Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.051008429 1.23951838 0.076327287 0.316 1.000 Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 0.001022590 0.05430389 0.003382513 0.639 1.000 Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.002157067 0.09411569 0.005847832 0.619 1.000 Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 0.056602363 2.56037069 0.145803909 0.148 1.000 Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.009569124 0.35095521 0.021463896 0.506 1.000 Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 -0.001745663 -0.08225018 -0.005167199 0.703 1.000 Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.057758674 2.84545622 0.159449901 0.157 1.000 Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.005575266 0.21803560 0.013444020 0.557 1.000 Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.119540855 4.84764704 0.244242909 0.076 1.000 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.052587837 1.77308932 0.099762584 0.212 1.000 Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.012980354 0.44307662 0.028690955 0.464 1.000 beta_richness_nmds_post3 &lt;- richness_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_neutral_nmds_post3 &lt;- neutral_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_phylo_nmds_post3 &lt;- phylo_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = join_by(sample == Tube_code)) beta_func_nmds_post3 &lt;- func_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = join_by(sample == Tube_code)) 6.3.4.2 Comparison between Acclimation vs Post-FMT2 6.3.4.2.1 Number of samples used [1] 53 6.3.4.2.2 Richness richness_post4 &lt;- as.matrix(beta_q0n$S) richness_post4 &lt;- as.dist(richness_post4[rownames(richness_post4) %in% samples_to_keep_post4, colnames(richness_post4) %in% samples_to_keep_post4]) betadisper(richness_post4, subset_meta_post4$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07832 0.078322 11.371 999 0.001 *** Residuals 51 0.35129 0.006888 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.001 Hot_dry 0.0014303 adonis2(richness_post4 ~ Population*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nqowjqzwzduy7gsqgt5o, .table th.tinytable_css_nqowjqzwzduy7gsqgt5o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1w2ssdssyp9gi2ia8p07, .table th.tinytable_css_1w2ssdssyp9gi2ia8p07 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 3.279021 0.1937289 3.924535 0.001 Residual 49 13.646799 0.8062711 NA NA Total 52 16.925820 1.0000000 NA NA #Arrange of metadata dataframe subset_meta_post4_arrange &lt;- column_to_rownames(subset_meta_post4, &quot;Tube_code&quot;) subset_meta_post4_arrange&lt;-subset_meta_post4_arrange[labels(richness_post4),] pairwise &lt;- pairwise.adonis(richness_post4, subset_meta_post4_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_i4ph6hs2azj9je7dkk3a, .table th.tinytable_css_i4ph6hs2azj9je7dkk3a { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fpfb06t3sari428x9n3x, .table th.tinytable_css_fpfb06t3sari428x9n3x { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.3657243 1.123239 0.06966584 0.246 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 1.2605860 4.943717 0.24788342 0.001 0.015 . Control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.8072604 2.940901 0.16392161 0.001 0.015 . Control.1_Acclimation vs Control.6_Post-FMT2 1 0.4817387 1.660775 0.09968176 0.028 0.420 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.1179704 3.885459 0.20573812 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 1.3606630 5.087152 0.24124415 0.001 0.015 . Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 0.9130048 3.195028 0.16645080 0.001 0.015 . Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.5959230 1.984036 0.11032208 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.2747787 4.275366 0.21086503 0.001 0.015 . Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.6397330 2.913695 0.15405213 0.001 0.015 . Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 1.4575447 6.224524 0.28007456 0.002 0.030 . Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.3276169 1.412318 0.08111028 0.037 0.555 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 0.6463814 2.560441 0.13795154 0.001 0.015 . Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.4796256 1.916520 0.10696943 0.001 0.015 . Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 1.1305044 4.268317 0.21059061 0.001 0.015 . 6.3.4.2.3 Neutral neutral_post4 &lt;- as.matrix(beta_q1n$S) neutral_post4 &lt;- as.dist(neutral_post4[rownames(neutral_post4) %in% samples_to_keep_post4, colnames(neutral_post4) %in% samples_to_keep_post4]) betadisper(neutral_post4, subset_meta_post4$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07811 0.078108 9.6342 999 0.001 *** Residuals 51 0.41347 0.008107 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.002 Hot_dry 0.0031133 adonis2(neutral_post4 ~ Population*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_npli37gwtgs2xpt36csn, .table th.tinytable_css_npli37gwtgs2xpt36csn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_223trqxe1jbtpu50vu23, .table th.tinytable_css_223trqxe1jbtpu50vu23 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 3.823089 0.2357666 5.038847 0.001 Residual 49 12.392477 0.7642334 NA NA Total 52 16.215567 1.0000000 NA NA pairwise &lt;- pairwise.adonis(neutral_post4, subset_meta_post4_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_13xwzyynzgoorhw1ehq3, .table th.tinytable_css_13xwzyynzgoorhw1ehq3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_01x2fmvlfdk1nyrazp33, .table th.tinytable_css_01x2fmvlfdk1nyrazp33 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.2759858 0.9928976 0.06208366 0.453 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 1.4146464 6.5078325 0.30257965 0.001 0.015 . Control.1_Acclimation vs Treatment.6_Post-FMT2 1 1.1524353 4.9536068 0.24825621 0.001 0.015 . Control.1_Acclimation vs Control.6_Post-FMT2 1 0.4748999 1.9609749 0.11561688 0.002 0.030 . Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.3503168 5.4081420 0.26499923 0.001 0.015 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 1.6347704 6.8326887 0.29925029 0.001 0.015 . Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 1.3540292 5.3398081 0.25022756 0.001 0.015 . Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.6311089 2.4041625 0.13063146 0.002 0.030 . Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.6125755 5.9825981 0.27215155 0.001 0.015 . Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.6202327 3.1519868 0.16457754 0.001 0.015 . Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 1.5701179 7.6327037 0.32297209 0.001 0.015 . Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.3634438 1.7083388 0.09647087 0.035 0.525 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 1.0227481 4.6483346 0.22511910 0.001 0.015 . Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.5010202 2.2065321 0.12119453 0.001 0.015 . Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 1.3619424 5.7710313 0.26507845 0.001 0.015 . 6.3.4.2.4 Phylogenetic phylo_post4 &lt;- as.matrix(beta_q1p$S) phylo_post4 &lt;- as.dist(phylo_post4[rownames(phylo_post4) %in% samples_to_keep_post4, colnames(phylo_post4) %in% samples_to_keep_post4]) betadisper(phylo_post4, subset_meta_post4$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03098 0.030984 2.885 999 0.089 . Residuals 51 0.54772 0.010740 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.08 Hot_dry 0.0955 adonis2(phylo_post4 ~ Population*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_rvhlsf3uo407eyt3zy9c, .table th.tinytable_css_rvhlsf3uo407eyt3zy9c { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_qu0o2r03987mxbvdn1ns, .table th.tinytable_css_qu0o2r03987mxbvdn1ns { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 0.6466392 0.2442162 5.277784 0.001 Residual 49 2.0011759 0.7557838 NA NA Total 52 2.6478151 1.0000000 NA NA pairwise &lt;- pairwise.adonis(phylo_post4, subset_meta_post4_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ui6asrto4fwqch1t5m3c, .table th.tinytable_css_ui6asrto4fwqch1t5m3c { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dmjww2n4bbl07y0qfb0q, .table th.tinytable_css_dmjww2n4bbl07y0qfb0q { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.05690611 0.789330 0.04999136 0.542 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 0.10866997 3.054731 0.16919285 0.010 0.150 Control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.15591805 4.379209 0.22597458 0.006 0.090 Control.1_Acclimation vs Control.6_Post-FMT2 1 0.07099742 1.879364 0.11134092 0.111 1.000 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.18682367 4.878754 0.24542555 0.002 0.030 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 0.23108846 4.052184 0.20208192 0.007 0.105 Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 0.36496892 6.396667 0.28560797 0.001 0.015 . Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.22628210 3.829222 0.19311005 0.024 0.360 Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.34830814 5.846334 0.26761166 0.001 0.015 . Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.10002871 4.383624 0.21505615 0.001 0.015 . Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 0.12577510 5.060129 0.24027055 0.001 0.015 . Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.06334378 2.499774 0.13512455 0.022 0.330 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 0.05927454 2.382025 0.12958449 0.021 0.315 Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.06906280 2.722460 0.14541146 0.005 0.075 Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.11081709 4.043656 0.20174244 0.001 0.015 . 6.3.4.2.5 Functional func_post4 &lt;- as.matrix(beta_q1f$S) func_post4 &lt;- as.dist(func_post4[rownames(func_post4) %in% samples_to_keep_post4, colnames(func_post4) %in% samples_to_keep_post4]) betadisper(func_post4, subset_meta_post4$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00006 0.0000601 0.003 999 0.966 Residuals 51 1.03808 0.0203544 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.965 Hot_dry 0.95688 adonis2(func_post4 ~ Population*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(func_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(func_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ka2urspkbbb2mnzckq1e, .table th.tinytable_css_ka2urspkbbb2mnzckq1e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_61s4blq6jq5ezm85l6lz, .table th.tinytable_css_61s4blq6jq5ezm85l6lz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 0.02585374 0.01884827 0.313769 0.537 Residual 49 1.34582345 0.98115173 NA NA Total 52 1.37167719 1.00000000 NA NA pairwise &lt;- pairwise.adonis(func_post4, subset_meta_post4_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_w77vx2i40uaczx8t92y8, .table th.tinytable_css_w77vx2i40uaczx8t92y8 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_po38xykfuqge0mh4z8tb, .table th.tinytable_css_po38xykfuqge0mh4z8tb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.0220766636 0.650021923 0.0415348890 0.439 1 Control.1_Acclimation vs Hot_control.1_Acclimation 1 0.0167496054 0.520911459 0.0335619117 0.457 1 Control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.0376809680 1.119650309 0.0694587220 0.298 1 Control.1_Acclimation vs Control.6_Post-FMT2 1 0.0292200956 0.920511083 0.0578191917 0.386 1 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.0133433458 0.270473784 0.0177122064 0.496 1 Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 0.0010225901 0.054303886 0.0033825127 0.676 1 Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 -0.0005177706 -0.025585400 -0.0016016487 0.724 1 Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.0013301207 0.072110871 0.0044867082 0.610 1 Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.0060959077 0.174487757 0.0107878382 0.576 1 Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.0010345754 0.055797964 0.0034752533 0.629 1 Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 -0.0001056284 -0.006306177 -0.0003942915 0.706 1 Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.0017235602 0.051851181 0.0032302306 0.773 1 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 -0.0080428882 -0.442986255 -0.0284750185 0.848 1 Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 -0.0011796256 -0.034047378 -0.0021324990 0.889 1 Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.0036300838 0.110487573 0.0068581148 0.706 1 beta_richness_nmds_post4 &lt;- richness_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_neutral_nmds_post4 &lt;- neutral_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_phylo_nmds_post4 &lt;- phylo_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = join_by(sample == Tube_code)) beta_func_nmds_post4 &lt;- func_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = join_by(sample == Tube_code)) 6.3.4.3 Comparison between Acclimation vs Post-FMT1 and Post-FMT2 6.3.4.3.1 Number of samples used [1] 79 6.3.4.3.2 Richness richness_post6 &lt;- as.matrix(beta_q0n$S) richness_post6 &lt;- as.dist(richness_post6[rownames(richness_post6) %in% samples_to_keep_post6, colnames(richness_post6) %in% samples_to_keep_post6]) betadisper(richness_post6, subset_meta_post6$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.09792 0.097923 18.607 999 0.002 ** Residuals 77 0.40523 0.005263 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.001 Hot_dry 4.714e-05 adonis2(richness_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_sqrb8hg5ltsj2cmfksok, .table th.tinytable_css_sqrb8hg5ltsj2cmfksok { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_f4dh870vx09dqtppxb6c, .table th.tinytable_css_f4dh870vx09dqtppxb6c { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 8 6.395467 0.2451322 2.841433 0.001 Residual 70 19.694403 0.7548678 NA NA Total 78 26.089870 1.0000000 NA NA #Arrange of metadata dataframe subset_meta_post6_arrange &lt;- column_to_rownames(subset_meta_post6, &quot;Tube_code&quot;) subset_meta_post6_arrange&lt;-subset_meta_post6_arrange[labels(richness_post6),] pairwise &lt;- pairwise.adonis(richness_post6, subset_meta_post6_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_hbwdikodnlz2g615dmda, .table th.tinytable_css_hbwdikodnlz2g615dmda { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3257vy3cu7pkgisk9c46, .table th.tinytable_css_3257vy3cu7pkgisk9c46 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.3657243 1.123239 0.06966584 0.248 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 1.2605860 4.943717 0.24788342 0.001 0.036 . Control.1_Acclimation vs Control.5_Post-FMT1 1 0.6804988 2.100611 0.12283837 0.001 0.036 . Control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.8481258 2.673290 0.16033371 0.001 0.036 . Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.1180661 3.809275 0.20252111 0.001 0.036 . Control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.8072604 2.940901 0.16392161 0.001 0.036 . Control.1_Acclimation vs Control.6_Post-FMT2 1 0.4817387 1.660775 0.09968176 0.026 0.936 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.1179704 3.885459 0.20573812 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 1.3606630 5.087152 0.24124415 0.001 0.036 . Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.7216200 2.172734 0.11956009 0.001 0.036 . Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 0.9551308 2.926054 0.16322910 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.2263345 4.039487 0.20157637 0.001 0.036 . Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 0.9130048 3.195028 0.16645080 0.001 0.036 . Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.5959230 1.984036 0.11032208 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.2747787 4.275366 0.21086503 0.001 0.036 . Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 1.4319792 5.384836 0.25180628 0.002 0.072 Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.8172413 3.194690 0.17558364 0.001 0.036 . Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.5796135 2.441615 0.13239702 0.001 0.036 . Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.6397330 2.913695 0.15405213 0.001 0.036 . Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 1.4575447 6.224524 0.28007456 0.001 0.036 . Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.3276169 1.412318 0.08111028 0.038 1.000 Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.5615418 1.729004 0.10335366 0.010 0.360 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.8438429 2.793772 0.14865413 0.001 0.036 . Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.7628135 2.683925 0.14364890 0.002 0.072 Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.3432605 1.148733 0.06698647 0.236 1.000 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 1.1269580 3.799256 0.19188884 0.001 0.036 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.3734921 1.268929 0.07799710 0.122 1.000 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.3571397 1.297184 0.07959561 0.139 1.000 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.7769467 2.670898 0.15114670 0.001 0.036 . Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.6502360 2.253407 0.13060650 0.002 0.072 Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.4132091 1.616138 0.09174188 0.013 0.468 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 1.0163992 3.760571 0.19030682 0.001 0.036 . Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.2732563 1.019281 0.05988979 0.416 1.000 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 0.6463814 2.560441 0.13795154 0.001 0.036 . Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.4796256 1.916520 0.10696943 0.001 0.036 . Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 1.1305044 4.268317 0.21059061 0.001 0.036 . 6.3.4.3.3 Neutral neutral_post6 &lt;- as.matrix(beta_q1n$S) neutral_post6 &lt;- as.dist(neutral_post6[rownames(neutral_post6) %in% samples_to_keep_post6, colnames(neutral_post6) %in% samples_to_keep_post6]) betadisper(neutral_post6, subset_meta_post6$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.09524 0.095237 15.396 999 0.001 *** Residuals 77 0.47632 0.006186 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.001 Hot_dry 0.00018818 adonis2(neutral_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ea3la6ro3cg6woxq1xfb, .table th.tinytable_css_ea3la6ro3cg6woxq1xfb { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_by4taxh9cgrp4ku376dm, .table th.tinytable_css_by4taxh9cgrp4ku376dm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 8 7.736408 0.3121974 3.971673 0.001 Residual 70 17.044094 0.6878026 NA NA Total 78 24.780501 1.0000000 NA NA pairwise &lt;- pairwise.adonis(neutral_post6, subset_meta_post6_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ne7bh4ezk4qbq4it3ayt, .table th.tinytable_css_ne7bh4ezk4qbq4it3ayt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5o0l0zgixdemtth0mw5q, .table th.tinytable_css_5o0l0zgixdemtth0mw5q { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.2759858 0.9928976 0.06208366 0.460 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 1.4146464 6.5078325 0.30257965 0.001 0.036 . Control.1_Acclimation vs Control.5_Post-FMT1 1 0.8153894 3.0970603 0.17113610 0.001 0.036 . Control.1_Acclimation vs Treatment.5_Post-FMT1 1 1.1809241 4.4856470 0.24265567 0.001 0.036 . Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.4321524 5.7774260 0.27806264 0.001 0.036 . Control.1_Acclimation vs Treatment.6_Post-FMT2 1 1.1524353 4.9536068 0.24825621 0.001 0.036 . Control.1_Acclimation vs Control.6_Post-FMT2 1 0.4748999 1.9609749 0.11561688 0.006 0.216 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.3503168 5.4081420 0.26499923 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 1.6347704 6.8326887 0.29925029 0.002 0.072 Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.9517634 3.3715700 0.17404733 0.001 0.036 . Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 1.3127773 4.6298256 0.23585668 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 1.6713369 6.2395460 0.28056085 0.001 0.036 . Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 1.3540292 5.3398081 0.25022756 0.001 0.036 . Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.6311089 2.4041625 0.13063146 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 1.6125755 5.9825981 0.27215155 0.001 0.036 . Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 1.5409781 6.8338056 0.29928456 0.001 0.036 . Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.9133614 4.0964534 0.21451383 0.001 0.036 . Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.6954835 3.2951234 0.17077493 0.001 0.036 . Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.6202327 3.1519868 0.16457754 0.001 0.036 . Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 1.5701179 7.6327037 0.32297209 0.001 0.036 . Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.3634438 1.7083388 0.09647087 0.035 1.000 Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.6051778 2.2508491 0.13047758 0.013 0.468 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 1.0528902 4.1436369 0.20570451 0.001 0.036 . Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.8908158 3.7146920 0.18842252 0.001 0.036 . Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.3860927 1.5521758 0.08843210 0.081 1.000 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 1.3122237 5.1302726 0.24279254 0.001 0.036 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.4150076 1.6372683 0.09840968 0.061 1.000 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.3157079 1.3252026 0.08117526 0.157 1.000 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 1.0579520 4.2700097 0.22158835 0.001 0.036 . Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.7454015 2.9200493 0.16294873 0.002 0.072 Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.4377161 1.9421261 0.10824392 0.003 0.108 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 1.3766597 5.8752789 0.26858075 0.001 0.036 . Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.3176516 1.3161367 0.07600637 0.184 1.000 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 1.0227481 4.6483346 0.22511910 0.001 0.036 . Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.5010202 2.2065321 0.12119453 0.002 0.072 Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 1.3619424 5.7710313 0.26507845 0.001 0.036 . 6.3.4.3.4 Phylogenetic phylo_post6 &lt;- as.matrix(beta_q1p$S) phylo_post6 &lt;- as.dist(phylo_post6[rownames(phylo_post6) %in% samples_to_keep_post6, colnames(phylo_post6) %in% samples_to_keep_post6]) betadisper(phylo_post6, subset_meta_post6$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02554 0.025541 2.1633 999 0.153 Residuals 77 0.90909 0.011806 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.153 Hot_dry 0.14542 adonis2(phylo_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ay4t92c7pj31x3wdmv0k, .table th.tinytable_css_ay4t92c7pj31x3wdmv0k { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_478iw8yditwmvao4jw9k, .table th.tinytable_css_478iw8yditwmvao4jw9k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 8 1.055866 0.2692287 3.223651 0.001 Residual 70 2.865952 0.7307713 NA NA Total 78 3.921818 1.0000000 NA NA pairwise &lt;- pairwise.adonis(phylo_post6, subset_meta_post6_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_kiwuvpfo5885ps3eshha, .table th.tinytable_css_kiwuvpfo5885ps3eshha { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8y625wmnyl900x2x69tq, .table th.tinytable_css_8y625wmnyl900x2x69tq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.05690611 0.7893300 0.04999136 0.506 1.000 Control.1_Acclimation vs Hot_control.1_Acclimation 1 0.10866997 3.0547314 0.16919285 0.012 0.432 Control.1_Acclimation vs Control.5_Post-FMT1 1 0.11760287 2.9988032 0.16661126 0.022 0.792 Control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.09624422 1.7247115 0.10968160 0.161 1.000 Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.18586788 4.1904227 0.21836011 0.006 0.216 Control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.15591805 4.3792085 0.22597458 0.002 0.072 Control.1_Acclimation vs Control.6_Post-FMT2 1 0.07099742 1.8793639 0.11134092 0.101 1.000 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.18682367 4.8787543 0.24542555 0.001 0.036 . Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 0.23108846 4.0521838 0.20208192 0.005 0.180 Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.26358465 4.3608960 0.21417997 0.009 0.324 Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 0.25319427 3.2738422 0.17915456 0.041 1.000 Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.39050120 5.9837393 0.27218933 0.002 0.072 Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 0.36496892 6.3966666 0.28560797 0.002 0.072 Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.22628210 3.8292220 0.19311005 0.019 0.684 Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.34830814 5.8463335 0.26761166 0.001 0.036 . Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 0.14203376 5.4200212 0.25303529 0.001 0.036 . Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.09666753 2.3682173 0.13635351 0.019 0.684 Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.09252600 2.9824958 0.15711821 0.009 0.324 Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.10002871 4.3836237 0.21505615 0.001 0.036 . Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 0.12577510 5.0601287 0.24027055 0.001 0.036 . Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.06334378 2.4997737 0.13512455 0.015 0.540 Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.01842535 0.4144162 0.02688498 0.791 1.000 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.05987967 1.7387847 0.09802164 0.107 1.000 Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.07917244 3.0180046 0.15869197 0.010 0.360 Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.04335491 1.5335604 0.08746429 0.179 1.000 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.10783045 3.7500438 0.18987521 0.001 0.036 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.03212966 0.6477782 0.04139746 0.707 1.000 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.06393539 1.5651817 0.09448624 0.147 1.000 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.05265949 1.2240203 0.07544494 0.293 1.000 Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.09753501 2.2402429 0.12994265 0.012 0.432 Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.07228545 2.3279593 0.12701683 0.036 1.000 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.11759094 3.5538444 0.18174658 0.001 0.036 . Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.06667255 1.9859527 0.11041687 0.108 1.000 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 0.05927454 2.3820253 0.12958449 0.026 0.936 Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.06906280 2.7224602 0.14541146 0.005 0.180 Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.11081709 4.0436561 0.20174244 0.002 0.072 6.3.4.3.5 Functional func_post6 &lt;- as.matrix(beta_q1f$S) func_post6 &lt;- as.dist(func_post6[rownames(func_post6) %in% samples_to_keep_post6, colnames(func_post6) %in% samples_to_keep_post6]) betadisper(func_post6, subset_meta_post6$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.00018 0.000175 0.0093 999 0.926 Residuals 77 1.45162 0.018852 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.921 Hot_dry 0.92349 adonis2(func_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(func_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(func_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_y01yyhsenvkwppdtn3xi, .table th.tinytable_css_y01yyhsenvkwppdtn3xi { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_bzyuncjajyq7z0pnvkhi, .table th.tinytable_css_bzyuncjajyq7z0pnvkhi { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 8 0.1632318 0.07638509 0.7236452 0.56 Residual 70 1.9737271 0.92361491 NA NA Total 78 2.1369589 1.00000000 NA NA pairwise &lt;- pairwise.adonis(func_post6, subset_meta_post6_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xo2v4n0n07ajqax9egwn, .table th.tinytable_css_xo2v4n0n07ajqax9egwn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_bwycai86n7tj5z0wxo6p, .table th.tinytable_css_bwycai86n7tj5z0wxo6p { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.1_Acclimation vs Treatment.1_Acclimation 1 0.0220766636 0.650021923 0.0415348890 0.400 1 Control.1_Acclimation vs Hot_control.1_Acclimation 1 0.0167496054 0.520911459 0.0335619117 0.448 1 Control.1_Acclimation vs Control.5_Post-FMT1 1 -0.0083255553 -0.228001097 -0.0154346814 0.888 1 Control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.1265279179 3.455505193 0.1979607668 0.082 1 Control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.0510084290 1.239518381 0.0763272870 0.286 1 Control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.0376809680 1.119650309 0.0694587220 0.305 1 Control.1_Acclimation vs Control.6_Post-FMT2 1 0.0292200956 0.920511083 0.0578191917 0.379 1 Control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.0133433458 0.270473784 0.0177122064 0.507 1 Treatment.1_Acclimation vs Hot_control.1_Acclimation 1 0.0010225901 0.054303886 0.0033825127 0.651 1 Treatment.1_Acclimation vs Control.5_Post-FMT1 1 0.0021570675 0.094115687 0.0058478321 0.635 1 Treatment.1_Acclimation vs Treatment.5_Post-FMT1 1 0.0566023632 2.560370692 0.1458039091 0.185 1 Treatment.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.0095691236 0.350955208 0.0214638964 0.495 1 Treatment.1_Acclimation vs Treatment.6_Post-FMT2 1 -0.0005177706 -0.025585400 -0.0016016487 0.750 1 Treatment.1_Acclimation vs Control.6_Post-FMT2 1 0.0013301207 0.072110871 0.0044867082 0.606 1 Treatment.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.0060959077 0.174487757 0.0107878382 0.576 1 Hot_control.1_Acclimation vs Control.5_Post-FMT1 1 -0.0017456629 -0.082250179 -0.0051671989 0.703 1 Hot_control.1_Acclimation vs Treatment.5_Post-FMT1 1 0.0577586745 2.845456220 0.1594499006 0.172 1 Hot_control.1_Acclimation vs Hot_control.5_Post-FMT1 1 0.0055752661 0.218035597 0.0134440201 0.530 1 Hot_control.1_Acclimation vs Treatment.6_Post-FMT2 1 0.0010345754 0.055797964 0.0034752533 0.671 1 Hot_control.1_Acclimation vs Control.6_Post-FMT2 1 -0.0001056284 -0.006306177 -0.0003942915 0.693 1 Hot_control.1_Acclimation vs Hot_control.6_Post-FMT2 1 0.0017235602 0.051851181 0.0032302306 0.746 1 Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.1195408549 4.847647043 0.2442429086 0.063 1 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.0525878365 1.773089316 0.0997625840 0.206 1 Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.0265995825 1.175418056 0.0684360667 0.335 1 Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.0145818992 0.699759916 0.0419023938 0.420 1 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 -0.0080695208 -0.216173226 -0.0136958691 0.916 1 Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.0129803540 0.443076619 0.0286909552 0.460 1 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.0267162134 1.225605811 0.0755352882 0.311 1 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.0384388433 1.932815819 0.1141461550 0.220 1 Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.0553988290 1.478193905 0.0897060633 0.258 1 Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 -0.0040061386 -0.148504693 -0.0093684974 0.726 1 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.0024023972 0.095389804 0.0059265296 0.612 1 Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 -0.0004960759 -0.011903277 -0.0007445087 0.855 1 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 -0.0080428882 -0.442986255 -0.0284750185 0.859 1 Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 -0.0011796256 -0.034047378 -0.0021324990 0.897 1 Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.0036300838 0.110487573 0.0068581148 0.707 1 beta_richness_nmds_post6 &lt;- richness_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_neutral_nmds_post6 &lt;- neutral_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_phylo_nmds_post6 &lt;- phylo_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = join_by(sample == Tube_code)) beta_func_nmds_post6 &lt;- func_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = join_by(sample == Tube_code)) 6.3.5 5. Are there differences between the control and the treatment group? 6.3.5.1 After 1 week –&gt; Post-FMT1 6.3.5.1.1 Number of samples used [1] 26 6.3.5.1.2 Richness richness_post1 &lt;- as.matrix(beta_q0n$S) richness_post1 &lt;- as.dist(richness_post1[rownames(richness_post1) %in% samples_to_keep_post1, colnames(richness_post1) %in% samples_to_keep_post1]) betadisper(richness_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.017675 0.0088373 2.3825 999 0.105 Residuals 23 0.085312 0.0037092 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.0040000 0.668 Hot_control 0.0068795 0.213 Treatment 0.6248469 0.2084296 adonis2(richness_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))), permutations = 999, strata = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_yk7f045qjcaq8rg5stdm, .table th.tinytable_css_yk7f045qjcaq8rg5stdm { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6wrbjt6x3c5v9izc4s7b, .table th.tinytable_css_6wrbjt6x3c5v9izc4s7b { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.195567 0.1448246 1.947534 1 Residual 23 7.059710 0.8551754 NA NA Total 25 8.255277 1.0000000 NA NA #Arrange of metadata dataframe subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(richness_post1),] pairwise &lt;- pairwise.adonis(richness_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_m23x2c2ub3zvoh7uaq7i, .table th.tinytable_css_m23x2c2ub3zvoh7uaq7i { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0nd698w2apbuw823akkz, .table th.tinytable_css_0nd698w2apbuw823akkz { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.5615418 1.729004 0.1033537 0.020 0.060 Control vs Hot_control 1 0.8438429 2.793772 0.1486541 0.001 0.003 * Treatment vs Hot_control 1 0.3734921 1.268929 0.0779971 0.129 0.387 6.3.5.1.3 Neutral neutral_post1 &lt;- as.matrix(beta_q1n$S) neutral_post1 &lt;- as.dist(neutral_post1[rownames(neutral_post1) %in% samples_to_keep_post1, colnames(neutral_post1) %in% samples_to_keep_post1]) betadisper(neutral_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.011001 0.0055005 0.6303 999 0.572 Residuals 23 0.200714 0.0087267 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.22500 0.955 Hot_control 0.21166 0.446 Treatment 0.95468 0.43604 adonis2(neutral_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))), permutations = 999, strata = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w0edd4mz15rjx852tu37, .table th.tinytable_css_w0edd4mz15rjx852tu37 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1fcxajfss091m1uobcap, .table th.tinytable_css_1fcxajfss091m1uobcap { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.395968 0.1900228 2.697931 1 Residual 23 5.950350 0.8099772 NA NA Total 25 7.346318 1.0000000 NA NA pairwise &lt;- pairwise.adonis(neutral_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qdfkxhx1oaralvfn0g16, .table th.tinytable_css_qdfkxhx1oaralvfn0g16 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_bx13wmef7zqnft7p82e2, .table th.tinytable_css_bx13wmef7zqnft7p82e2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6051778 2.250849 0.13047758 0.013 0.039 . Control vs Hot_control 1 1.0528902 4.143637 0.20570451 0.002 0.006 * Treatment vs Hot_control 1 0.4150076 1.637268 0.09840968 0.050 0.150 6.3.5.1.4 Phylogenetic phylo_post1 &lt;- as.matrix(beta_q1p$S) phylo_post1 &lt;- as.dist(phylo_post1[rownames(phylo_post1) %in% samples_to_keep_post1, colnames(phylo_post1) %in% samples_to_keep_post1]) betadisper(phylo_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00440 0.0021994 0.1369 999 0.908 Residuals 23 0.36941 0.0160614 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.93200 0.698 Hot_control 0.91505 0.776 Treatment 0.63312 0.73046 adonis2(phylo_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))), permutations = 999, strata = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ry3rwq516bf42xirovkh, .table th.tinytable_css_ry3rwq516bf42xirovkh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_it0zy5xppq1vzsahtg48, .table th.tinytable_css_it0zy5xppq1vzsahtg48 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.07451036 0.07059466 0.8735033 1 Residual 23 0.98095695 0.92940534 NA NA Total 25 1.05546731 1.00000000 NA NA pairwise &lt;- pairwise.adonis(phylo_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_wsej8bxxoro0h2qly1l1, .table th.tinytable_css_wsej8bxxoro0h2qly1l1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9drejxvfuq1rms9bbrgh, .table th.tinytable_css_9drejxvfuq1rms9bbrgh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.01842535 0.4144162 0.02688498 0.791 1.000 Control vs Hot_control 1 0.05987967 1.7387847 0.09802164 0.122 0.366 Treatment vs Hot_control 1 0.03212966 0.6477782 0.04139746 0.712 1.000 6.3.5.1.5 Functional func_post1 &lt;- as.matrix(beta_q1f$S) func_post1 &lt;- as.dist(func_post1[rownames(func_post1) %in% samples_to_keep_post1, colnames(func_post1) %in% samples_to_keep_post1]) betadisper(func_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00400 0.0019999 0.1431 999 0.88 Residuals 23 0.32135 0.0139717 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.61100 0.766 Hot_control 0.60188 0.845 Treatment 0.74597 0.84473 adonis2(func_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(func_post1))), permutations = 999, strata = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(func_post1))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nrdthkqprflkcn27lckw, .table th.tinytable_css_nrdthkqprflkcn27lckw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ftdm8proqs7jjw9osptc, .table th.tinytable_css_ftdm8proqs7jjw9osptc { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.1230554 0.1608583 2.204479 1 Residual 23 0.6419374 0.8391417 NA NA Total 25 0.7649929 1.0000000 NA NA pairwise &lt;- pairwise.adonis(func_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_rwgqul9we9c1adt3but7, .table th.tinytable_css_rwgqul9we9c1adt3but7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9w2p2447ah4vw8k17o2q, .table th.tinytable_css_9w2p2447ah4vw8k17o2q { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.11954085 4.8476470 0.24424291 0.086 0.258 Control vs Hot_control 1 0.05258784 1.7730893 0.09976258 0.245 0.735 Treatment vs Hot_control 1 0.01298035 0.4430766 0.02869096 0.452 1.000 beta_richness_nmds_post1 &lt;- richness_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) beta_neutral_nmds_post1 &lt;- neutral_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post1 &lt;- phylo_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) beta_functional_nmds_post1 &lt;- func_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 6.3.5.2 After 2 weeks –&gt;Post-FMT2 post2 &lt;- meta %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;) post2.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(post2))] identical(sort(colnames(post2.counts)),sort(as.character(rownames(post2)))) post2_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;) 6.3.5.2.1 Number of samples used [1] 27 6.3.5.2.2 Richness richness_post2 &lt;- as.matrix(beta_q0n$S) richness_post2 &lt;- as.dist(richness_post2[rownames(richness_post2) %in% samples_to_keep_post2, colnames(richness_post2) %in% samples_to_keep_post2]) betadisper(richness_post2, subset_meta_post2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002011 0.0010056 0.1982 999 0.826 Residuals 24 0.121775 0.0050740 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.70400 0.801 Hot_control 0.67789 0.645 Treatment 0.79246 0.59820 adonis2(richness_post2 ~ type, data = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(richness_post2))), permutations = 999, strata = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(richness_post2))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xfue4oaa0jckd7a9rk25, .table th.tinytable_css_xfue4oaa0jckd7a9rk25 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_a2zef39lqm20yl3ms9z4, .table th.tinytable_css_a2zef39lqm20yl3ms9z4 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.504341 0.1967776 2.939822 1 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA #Arrange of metadata dataframe subset_meta_post2_arrange &lt;- column_to_rownames(subset_meta_post2, &quot;Tube_code&quot;) subset_meta_post2_arrange&lt;-subset_meta_post2_arrange[labels(richness_post2),] pairwise &lt;- pairwise.adonis(richness_post2, subset_meta_post2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_egeu54v0htpldjrfwomd, .table th.tinytable_css_egeu54v0htpldjrfwomd { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3u20mdxc18a46y5ajel7, .table th.tinytable_css_3u20mdxc18a46y5ajel7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Control 1 0.6463814 2.560441 0.1379515 0.002 0.006 * Treatment vs Hot_control 1 0.4796256 1.916520 0.1069694 0.001 0.003 * Control vs Hot_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * 6.3.5.2.3 Neutral neutral_post2 &lt;- as.matrix(beta_q1n$S) neutral_post2 &lt;- as.dist(neutral_post2[rownames(neutral_post2) %in% samples_to_keep_post2, colnames(neutral_post2) %in% samples_to_keep_post2]) betadisper(neutral_post2, subset_meta_post2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.008262 0.0041311 0.8024 999 0.443 Residuals 24 0.123559 0.0051483 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.44400 0.676 Hot_control 0.44675 0.238 Treatment 0.65989 0.25095 adonis2(neutral_post2 ~ type, data = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(neutral_post2))), permutations = 999, strata = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(neutral_post2))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_d2mpx49h1rafz3p7ipr2, .table th.tinytable_css_d2mpx49h1rafz3p7ipr2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_13ewi2negj57djptggdd, .table th.tinytable_css_13ewi2negj57djptggdd { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.923807 0.2603795 4.224537 1 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA pairwise &lt;- pairwise.adonis(neutral_post2, subset_meta_post2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_fend964wnt9yfjt4ql4b, .table th.tinytable_css_fend964wnt9yfjt4ql4b { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_a9xy0tupjafr4a9wdq6w, .table th.tinytable_css_a9xy0tupjafr4a9wdq6w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Control 1 1.0227481 4.648335 0.2251191 0.001 0.003 * Treatment vs Hot_control 1 0.5010202 2.206532 0.1211945 0.002 0.006 * Control vs Hot_control 1 1.3619424 5.771031 0.2650785 0.001 0.003 * 6.3.5.2.4 Phylogenetic phylo_post2 &lt;- as.matrix(beta_q1p$S) phylo_post2 &lt;- as.dist(phylo_post2[rownames(phylo_post2) %in% samples_to_keep_post2, colnames(phylo_post2) %in% samples_to_keep_post2]) betadisper(phylo_post2, subset_meta_post2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.000407 0.0002034 0.0487 999 0.961 Residuals 24 0.100305 0.0041794 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.93700 0.852 Hot_control 0.93765 0.757 Treatment 0.83933 0.76015 adonis2(phylo_post2 ~ type, data = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(phylo_post2))), permutations = 999, strata = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(phylo_post2))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xpgkqu2feeyltskc3dea, .table th.tinytable_css_xpgkqu2feeyltskc3dea { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ez4uan1jq25dj6lntxwr, .table th.tinytable_css_ez4uan1jq25dj6lntxwr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 0.1594363 0.2042241 3.079623 1 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA pairwise &lt;- pairwise.adonis(phylo_post2, subset_meta_post2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_zucjl4rzdpfbnxwhuepr, .table th.tinytable_css_zucjl4rzdpfbnxwhuepr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_m98wycod2kbmktr72t14, .table th.tinytable_css_m98wycod2kbmktr72t14 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Control 1 0.05927454 2.382025 0.1295845 0.032 0.096 Treatment vs Hot_control 1 0.06906280 2.722460 0.1454115 0.005 0.015 . Control vs Hot_control 1 0.11081709 4.043656 0.2017424 0.001 0.003 * 6.3.5.2.5 Functional func_post2 &lt;- as.matrix(beta_q1f$S) func_post2 &lt;- as.dist(func_post2[rownames(func_post2) %in% samples_to_keep_post2, colnames(func_post2) %in% samples_to_keep_post2]) betadisper(func_post2, subset_meta_post2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01259 0.0062962 0.3249 999 0.79 Residuals 24 0.46507 0.0193778 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.53000 0.638 Hot_control 0.45381 0.774 Treatment 0.57452 0.74365 adonis2(func_post2 ~ type, data = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(func_post2))), permutations = 999, strata = subset_meta_post2 %&gt;% arrange(match(Tube_code,labels(func_post2))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_qvpqvfixf1x2b0rl34g7, .table th.tinytable_css_qvpqvfixf1x2b0rl34g7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8bfq610ndqneaktgvpf4, .table th.tinytable_css_8bfq610ndqneaktgvpf4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 -0.003728287 -0.005470434 -0.06528805 1 Residual 24 0.685262325 1.005470434 NA NA Total 26 0.681534039 1.000000000 NA NA pairwise &lt;- pairwise.adonis(func_post2, subset_meta_post2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qnzonfp1swkn5c6eg1ar, .table th.tinytable_css_qnzonfp1swkn5c6eg1ar { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_aubqwsgg3vso7vk6o0xe, .table th.tinytable_css_aubqwsgg3vso7vk6o0xe { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Control 1 -0.008042888 -0.44298625 -0.028475019 0.829 1 Treatment vs Hot_control 1 -0.001179626 -0.03404738 -0.002132499 0.890 1 Control vs Hot_control 1 0.003630084 0.11048757 0.006858115 0.693 1 beta_richness_nmds_post2 &lt;- richness_post2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post2, by = join_by(sample == Tube_code)) beta_neutral_nmds_post2 &lt;- neutral_post2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post2, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post2 &lt;- phylo_post2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post2, by = join_by(sample == Tube_code)) beta_functional_nmds_post2 &lt;- func_post2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post2, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 6.3.5.3 Post1 vs Post2 post5 &lt;- meta %&gt;% filter(time_point == &quot;6_Post-FMT2&quot; | time_point == &quot;5_Post-FMT1&quot;) post5.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(post5))] identical(sort(colnames(post5.counts)),sort(as.character(rownames(post5)))) post5_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;| time_point == &quot;5_Post-FMT1&quot;) 6.3.5.3.1 Number of samples used [1] 53 6.3.5.3.2 Richness richness_post5 &lt;- as.matrix(beta_q0n$S) richness_post5 &lt;- as.dist(richness_post5[rownames(richness_post5) %in% samples_to_keep_post5, colnames(richness_post5) %in% samples_to_keep_post5]) betadisper(richness_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01841 0.0092048 1.7364 999 0.19 Residuals 50 0.26505 0.0053010 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.037000 0.712 Hot_control 0.039117 0.227 Treatment 0.716358 0.218648 adonis2(richness_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_v247n12drx2f6c08d4nw, .table th.tinytable_css_v247n12drx2f6c08d4nw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_uae62mv52tbzxtgas0uu, .table th.tinytable_css_uae62mv52tbzxtgas0uu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 5 3.261916 0.1981463 2.322836 0.001 Residual 47 13.200248 0.8018537 NA NA Total 52 16.462164 1.0000000 NA NA #Arrange of metadata dataframe subset_meta_post5_arrange &lt;- column_to_rownames(subset_meta_post5, &quot;Tube_code&quot;) subset_meta_post5_arrange&lt;-subset_meta_post5_arrange[labels(richness_post5),] pairwise &lt;- pairwise.adonis(richness_post5, subset_meta_post5_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_61kbrd0boao3x2qwzlp9, .table th.tinytable_css_61kbrd0boao3x2qwzlp9 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0a2zvapiqjvxgox7urwm, .table th.tinytable_css_0a2zvapiqjvxgox7urwm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.5615418 1.729004 0.10335366 0.015 0.225 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.8438429 2.793772 0.14865413 0.001 0.015 . Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.7628135 2.683925 0.14364890 0.001 0.015 . Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.3432605 1.148733 0.06698647 0.264 1.000 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 1.1269580 3.799256 0.19188884 0.001 0.015 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.3734921 1.268929 0.07799710 0.097 1.000 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.3571397 1.297184 0.07959561 0.137 1.000 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.7769467 2.670898 0.15114670 0.001 0.015 . Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.6502360 2.253407 0.13060650 0.002 0.030 . Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.4132091 1.616138 0.09174188 0.012 0.180 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 1.0163992 3.760571 0.19030682 0.001 0.015 . Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.2732563 1.019281 0.05988979 0.433 1.000 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 0.6463814 2.560441 0.13795154 0.001 0.015 . Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.4796256 1.916520 0.10696943 0.001 0.015 . Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 1.1305044 4.268317 0.21059061 0.001 0.015 . 6.3.5.3.3 Neutral neutral_post5 &lt;- as.matrix(beta_q1n$S) neutral_post5 &lt;- as.dist(neutral_post5[rownames(neutral_post5) %in% samples_to_keep_post5, colnames(neutral_post5) %in% samples_to_keep_post5]) betadisper(neutral_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01992 0.0099587 1.565 999 0.212 Residuals 50 0.31818 0.0063636 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.11400 0.876 Hot_control 0.10701 0.165 Treatment 0.87156 0.17449 adonis2(neutral_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_i5y86y0xj0cfkxqd86gj, .table th.tinytable_css_i5y86y0xj0cfkxqd86gj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_73m9rvciiwh8iyb07y34, .table th.tinytable_css_73m9rvciiwh8iyb07y34 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 5 3.947979 0.2569798 3.251069 0.001 Residual 47 11.415016 0.7430202 NA NA Total 52 15.362995 1.0000000 NA NA pairwise &lt;- pairwise.adonis(neutral_post5, subset_meta_post5_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_khx0j9q0cjdvisigr3n5, .table th.tinytable_css_khx0j9q0cjdvisigr3n5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_imn4bt8ye36r309rh0q3, .table th.tinytable_css_imn4bt8ye36r309rh0q3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.6051778 2.250849 0.13047758 0.019 0.285 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 1.0528902 4.143637 0.20570451 0.001 0.015 . Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.8908158 3.714692 0.18842252 0.002 0.030 . Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.3860927 1.552176 0.08843210 0.094 1.000 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 1.3122237 5.130273 0.24279254 0.002 0.030 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.4150076 1.637268 0.09840968 0.056 0.840 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.3157079 1.325203 0.08117526 0.152 1.000 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 1.0579520 4.270010 0.22158835 0.002 0.030 . Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.7454015 2.920049 0.16294873 0.001 0.015 . Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.4377161 1.942126 0.10824392 0.006 0.090 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 1.3766597 5.875279 0.26858075 0.001 0.015 . Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.3176516 1.316137 0.07600637 0.199 1.000 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 1.0227481 4.648335 0.22511910 0.002 0.030 . Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.5010202 2.206532 0.12119453 0.001 0.015 . Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 1.3619424 5.771031 0.26507845 0.001 0.015 . 6.3.5.3.4 Phylogenetic phylo_post5 &lt;- as.matrix(beta_q1p$S) phylo_post5 &lt;- as.dist(phylo_post5[rownames(phylo_post5) %in% samples_to_keep_post5, colnames(phylo_post5) %in% samples_to_keep_post5]) betadisper(phylo_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00051 0.0002543 0.0265 999 0.973 Residuals 50 0.47996 0.0095993 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.88500 0.837 Hot_control 0.88926 0.926 Treatment 0.82391 0.91902 adonis2(phylo_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_gcrbgucb3fwz4q1y26dh, .table th.tinytable_css_gcrbgucb3fwz4q1y26dh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_flk708zfpqlovhln6kcy, .table th.tinytable_css_flk708zfpqlovhln6kcy { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 5 0.3518222 0.180049 2.0641 0.001 Residual 47 1.6022134 0.819951 NA NA Total 52 1.9540356 1.000000 NA NA pairwise &lt;- pairwise.adonis(phylo_post5, subset_meta_post5_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_6spvv0qpbygme3aham4i, .table th.tinytable_css_6spvv0qpbygme3aham4i { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_56uy3ymtbijh0ak8yf8f, .table th.tinytable_css_56uy3ymtbijh0ak8yf8f { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.01842535 0.4144162 0.02688498 0.768 1.000 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.05987967 1.7387847 0.09802164 0.134 1.000 Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.07917244 3.0180046 0.15869197 0.010 0.150 Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.04335491 1.5335604 0.08746429 0.196 1.000 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.10783045 3.7500438 0.18987521 0.002 0.030 . Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.03212966 0.6477782 0.04139746 0.689 1.000 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.06393539 1.5651817 0.09448624 0.131 1.000 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.05265949 1.2240203 0.07544494 0.295 1.000 Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.09753501 2.2402429 0.12994265 0.016 0.240 Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.07228545 2.3279593 0.12701683 0.031 0.465 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.11759094 3.5538444 0.18174658 0.001 0.015 . Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.06667255 1.9859527 0.11041687 0.097 1.000 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 0.05927454 2.3820253 0.12958449 0.025 0.375 Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.06906280 2.7224602 0.14541146 0.003 0.045 . Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.11081709 4.0436561 0.20174244 0.002 0.030 . 6.3.5.3.5 Functional func_post5 &lt;- as.matrix(beta_q1f$S) func_post5 &lt;- as.dist(func_post5[rownames(func_post5) %in% samples_to_keep_post5, colnames(func_post5) %in% samples_to_keep_post5]) betadisper(func_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00785 0.0039232 0.2322 999 0.818 Residuals 50 0.84483 0.0168966 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.57000 0.599 Hot_control 0.52384 0.860 Treatment 0.58787 0.85068 adonis2(func_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(func_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(func_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_vonsrgq673gdc92mi4wu, .table th.tinytable_css_vonsrgq673gdc92mi4wu { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_d1uus0ux9ybv3oex4pa0, .table th.tinytable_css_d1uus0ux9ybv3oex4pa0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 5 0.1076682 0.07503698 0.7625685 0.499 Residual 47 1.3271997 0.92496302 NA NA Total 52 1.4348679 1.00000000 NA NA pairwise &lt;- pairwise.adonis(func_post5, subset_meta_post5_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_kfaogtjvmwk5ltmjm4re, .table th.tinytable_css_kfaogtjvmwk5ltmjm4re { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7lzoz0t5ctro9762ze0i, .table th.tinytable_css_7lzoz0t5ctro9762ze0i { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.5_Post-FMT1 vs Treatment.5_Post-FMT1 1 0.1195408549 4.84764704 0.2442429086 0.072 1 Control.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.0525878365 1.77308932 0.0997625840 0.218 1 Control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.0265995825 1.17541806 0.0684360667 0.303 1 Control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.0145818992 0.69975992 0.0419023938 0.437 1 Control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 -0.0080695208 -0.21617323 -0.0136958691 0.921 1 Treatment.5_Post-FMT1 vs Hot_control.5_Post-FMT1 1 0.0129803540 0.44307662 0.0286909552 0.480 1 Treatment.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 0.0267162134 1.22560581 0.0755352882 0.338 1 Treatment.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.0384388433 1.93281582 0.1141461550 0.239 1 Treatment.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 0.0553988290 1.47819391 0.0897060633 0.260 1 Hot_control.5_Post-FMT1 vs Treatment.6_Post-FMT2 1 -0.0040061386 -0.14850469 -0.0093684974 0.735 1 Hot_control.5_Post-FMT1 vs Control.6_Post-FMT2 1 0.0024023972 0.09538980 0.0059265296 0.604 1 Hot_control.5_Post-FMT1 vs Hot_control.6_Post-FMT2 1 -0.0004960759 -0.01190328 -0.0007445087 0.849 1 Treatment.6_Post-FMT2 vs Control.6_Post-FMT2 1 -0.0080428882 -0.44298625 -0.0284750185 0.832 1 Treatment.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 -0.0011796256 -0.03404738 -0.0021324990 0.913 1 Control.6_Post-FMT2 vs Hot_control.6_Post-FMT2 1 0.0036300838 0.11048757 0.0068581148 0.703 1 beta_richness_nmds_post5 &lt;- richness_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code)) beta_neutral_nmds_post5 &lt;- neutral_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post5 &lt;- phylo_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code)) beta_functional_nmds_post5 &lt;- func_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post5 %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_post5 %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post5 %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post5 %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) "],["functional-differences.html", "Chapter 7 Functional differences 7.1 Data preparation 7.2 Genomes GIFT profiles 7.3 Function level 7.4 Element level 7.5 Comparison of samples from the 0 Time_point (0_Wild) 7.6 Comparison of samples from the 1st Time_point (1_Acclimation) 7.7 Comparison of samples from the 5th Time_point (5_Post-FMT1) 7.8 Comparison of samples from the 6th Time_point (6_Post-FMT2) 7.9 Domain level", " Chapter 7 Functional differences load(&quot;data/data.Rdata&quot;) 7.1 Data preparation # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db3) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db3) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db3) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db3) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db3) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db3) uniqueGIFT_db&lt;- unique(GIFT_db3[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) 7.2 Genomes GIFT profiles GIFTs_elements %&gt;% as_tibble(., rownames = &quot;MAG&quot;) %&gt;% reshape2::melt() %&gt;% rename(Code_element = variable, GIFT = value) %&gt;% inner_join(GIFT_db3,by=&quot;Code_element&quot;) %&gt;% ggplot(., aes(x=Code_element, y=MAG, fill=GIFT, group=Code_function))+ geom_tile()+ scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+ scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(. ~ Code_function, scales = &quot;free&quot;, space = &quot;free&quot;)+ theme_grey(base_size=8)+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),strip.text.x = element_text(angle = 90)) 7.3 Function level GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sample&quot;) %&gt;% filter(sample!=&quot;AD69&quot;) %&gt;% pivot_longer(!sample,names_to=&quot;trait&quot;,values_to=&quot;gift&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% ggplot(aes(x=trait,y=time_point,fill=gift)) + geom_tile(colour=&quot;white&quot;, size=0.2)+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(type ~ ., scales=&quot;free&quot;,space=&quot;free&quot;) 7.4 Element level GIFTs_elements_community_merged&lt;-GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sample&quot;) %&gt;% filter(sample!=&quot;AD69&quot;) %&gt;% pivot_longer(!sample,names_to=&quot;trait&quot;,values_to=&quot;gift&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code))%&gt;% mutate(functionid = substr(trait, 1, 3)) %&gt;% mutate(trait = case_when( trait %in% GIFT_db3$Code_element ~ GIFT_db3$Element[match(trait, GIFT_db3$Code_element)], TRUE ~ trait )) %&gt;% mutate(functionid = case_when( functionid %in% GIFT_db3$Code_function ~ GIFT_db3$Function[match(functionid, GIFT_db3$Code_function)], TRUE ~ functionid )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db3$Element))) %&gt;% mutate(functionid=factor(functionid,levels=unique(GIFT_db3$Function))) # Create an interaction variable for time_point and sample GIFTs_elements_community_merged$interaction_var &lt;- interaction(GIFTs_elements_community_merged$sample, GIFTs_elements_community_merged$time_point) ggplot(GIFTs_elements_community_merged,aes(x=interaction_var,y=trait,fill=gift)) + geom_tile(colour=&quot;white&quot;, linewidth=0.2)+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(functionid ~ type, scales=&quot;free&quot;,space=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size=5), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Time_point&quot;,fill=&quot;GIFT&quot;)+ scale_x_discrete(labels = function(x) gsub(&quot;.*\\\\.&quot;, &quot;&quot;, x)) 7.5 Comparison of samples from the 0 Time_point (0_Wild) 7.5.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.271 0.0203 2 Podarcis_muralis 0.281 0.0146 7.5.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% select(c(1:30, 33)) %&gt;% pivot_longer(-c(sample,Population),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db3$Code_function ~ GIFT_db3$Function[match(trait, GIFT_db3$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db3$Function))) %&gt;% ggplot(aes(x=value, y=Population, group=Population, fill=Population, color=Population)) + geom_boxplot() + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 7.5.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.283 0.0162 2 Podarcis_muralis 0.289 0.0184 7.5.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.241 0.0239 2 Podarcis_muralis 0.260 0.0163 sample_metadata_wild &lt;- sample_metadata%&gt;% filter(time_point == &quot;0_Wild&quot;) element_gift_wild &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_wild[c(1,3)], by=&quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_wild, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_wild[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_wild[, !numeric_cols | colnames(element_gift_wild) %in% nonzero_numeric_cols] significant_elements_wild &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,species), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ species, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_wild %&gt;% dplyr::select(-c(species)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_wild$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_wild[c(1,3)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(species) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-species)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_wild[c(1,4)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:72] #always check names(element_gift_names) first to know where your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=Population, y=.data[[i]], color = Population)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.6 Comparison of samples from the 1st Time_point (1_Acclimation) 7.6.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.284 0.0148 2 Podarcis_muralis 0.271 0.0249 7.6.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% select(c(1:30, 33)) %&gt;% pivot_longer(-c(sample,Population),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db3$Code_function ~ GIFT_db3$Function[match(trait, GIFT_db3$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db3$Function))) %&gt;% ggplot(aes(x=value, y=Population, group=Population, fill=Population, color=Population)) + geom_boxplot() + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 7.6.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.286 0.0130 2 Podarcis_muralis 0.275 0.0301 7.6.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.264 0.0182 2 Podarcis_muralis 0.252 0.0263 sample_metadata_accli &lt;- sample_metadata%&gt;% filter(time_point == &quot;1_Acclimation&quot;) element_gift_accli &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_accli[c(1,3)], by=&quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_accli, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_accli[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_accli[, !numeric_cols | colnames(element_gift_accli) %in% nonzero_numeric_cols] significant_elements_accli &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,species), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ species, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_accli %&gt;% dplyr::select(-c(species)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_accli$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_accli[c(1,3)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(species) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-species)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_accli[c(1,4)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:51] #always check names(element_gift_names) first to know where your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=Population, y=.data[[i]], color = Population)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.7 Comparison of samples from the 5th Time_point (5_Post-FMT1) 7.7.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.308 0.0247 2 Hot_control 0.309 0.0464 3 Treatment 0.291 0.0120 7.7.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% select(c(1:30, 36)) %&gt;% pivot_longer(-c(sample,type),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db3$Code_function ~ GIFT_db3$Function[match(trait, GIFT_db3$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db3$Function))) %&gt;% ggplot(aes(x=value, y=type, group=type, fill=type, color=type)) + geom_boxplot() + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 7.7.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.305 0.0230 2 Hot_control 0.307 0.0447 3 Treatment 0.287 0.0141 7.7.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.293 0.0303 2 Hot_control 0.293 0.0467 3 Treatment 0.275 0.0137 sample_metadata_tm5 &lt;- sample_metadata%&gt;% filter(time_point == &quot;5_Post-FMT1&quot;)%&gt;% filter(type != &quot;Hot_control&quot;) element_gift_tm5 &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(sample_metadata_tm5 %&gt;% select(1, 7), by = &quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_tm5, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_tm5[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_tm5[, !numeric_cols | colnames(element_gift_tm5) %in% nonzero_numeric_cols] significant_elements_tm5 &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_value &lt; 0.05) %&gt;% #take into account that p_value is used and not p_adjust left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_tm5 %&gt;% dplyr::select(-c(type)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_tm5$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_tm5[c(1,7)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(type) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-type)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_tm5[c(1,7)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:14] #always check names(element_gift_names) first to now where your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=type, y=.data[[i]], color = type)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.8 Comparison of samples from the 6th Time_point (6_Post-FMT2) 7.8.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.287 0.0157 2 Hot_control 0.285 0.0294 3 Treatment 0.280 0.0197 MCI_tm6 &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) shapiro.test(MCI_tm6$value)#normality test Shapiro-Wilk normality test data: MCI_tm6$value W = 0.95761, p-value = 0.3256 res.aov&lt;-aov(value ~ type, data=MCI_tm6)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.000195 0.0000974 0.195 0.824 Residuals 24 0.011994 0.0004998 7.8.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% select(c(1:30, 36)) %&gt;% pivot_longer(-c(sample,type),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db3$Code_function ~ GIFT_db3$Function[match(trait, GIFT_db3$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db3$Function))) %&gt;% ggplot(aes(x=value, y=type, group=type, fill=type, color=type)) + geom_boxplot() + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 7.8.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.290 0.0210 2 Hot_control 0.292 0.0310 3 Treatment 0.282 0.0190 MCI_domains_tm6 &lt;- GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) shapiro.test(MCI_domains_tm6$value)#normality test Shapiro-Wilk normality test data: MCI_domains_tm6$value W = 0.9498, p-value = 0.2119 res.aov&lt;-aov(value ~ type, data=MCI_domains_tm6)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00057 0.0002851 0.485 0.622 Residuals 24 0.01411 0.0005878 7.8.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.268 0.0169 2 Hot_control 0.263 0.0314 3 Treatment 0.261 0.0219 MCI_ele_tm6 &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) shapiro.test(MCI_ele_tm6$value) #normality test Shapiro-Wilk normality test data: MCI_ele_tm6$value W = 0.9806, p-value = 0.8757 res.aov&lt;-aov(value ~ type, data=MCI_ele_tm6) #anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.000291 0.0001453 0.249 0.782 Residuals 24 0.014001 0.0005834 7.8.3.1 CI vs CC sample_metadata_TM6 &lt;- sample_metadata%&gt;% filter(time_point == &quot;6_Post-FMT2&quot;)%&gt;% filter(type != &quot;Hot_control&quot;) element_gift_TM6 &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(sample_metadata_TM6 %&gt;% select(1, 7), by = &quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_TM6, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_TM6[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_TM6[, !numeric_cols | colnames(element_gift_TM6) %in% nonzero_numeric_cols] significant_elements_TM6 &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_value &lt; 0.05) %&gt;% #take into account that p_value is used and not p_adjust left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_TM6 %&gt;% dplyr::select(-c(type)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_TM6$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM6[c(1,7)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(type) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-type)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM6[c(1,7)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:20] #always check names(element_gift_names) first to now where your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=type, y=.data[[i]], color = type)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.8.3.2 CI vs WC sample_metadata_TM8 &lt;- sample_metadata%&gt;% filter(time_point == &quot;6_Post-FMT2&quot;)%&gt;% filter(type != &quot;Control&quot;) element_gift_TM8 &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(sample_metadata_TM8 %&gt;% select(1, 7), by = &quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_TM8, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_TM8[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_TM8[, !numeric_cols | colnames(element_gift_TM8) %in% nonzero_numeric_cols] significant_elements_TM8 &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_value &lt; 0.05) %&gt;% #take into account that p_value is used and not p_adjust left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_TM8 %&gt;% dplyr::select(-c(type)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_TM8$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM8[c(1,7)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(type) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-type)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM8[c(1,7)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:13] #always check names(element_gift_names) first to now where your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=type, y=.data[[i]], color = type)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.9 Domain level 7.9.1 Comparison of samples from the 0 Time_point (0_Wild) #Merge the functional domains with the metadata merge_gift_wild&lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_wild, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Biosynthesis,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Degradation p2 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Degradation,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.45, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Structure p3 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Structure,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Transport p4 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Transport,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) 7.9.2 Comparison of samples from the 1st Time_point (1_Acclimation) #Merge the functional domains with the metadata merge_gift_accli&lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_accli, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_accli %&gt;% ggplot(aes(x=species,y=Biosynthesis,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Degradation p2 &lt;-merge_gift_accli %&gt;% ggplot(aes(x=species,y=Degradation,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.45, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Structure p3 &lt;-merge_gift_accli %&gt;% ggplot(aes(x=species,y=Structure,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Transport p4 &lt;-merge_gift_accli %&gt;% ggplot(aes(x=species,y=Transport,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) 7.9.3 Comparison of samples from the 5th Time_point (5_Post-FMT1) #Merge the functional domains with the metadata merge_gift_tm5&lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_tm5, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_tm5 %&gt;% ggplot(aes(x=type,y=Biosynthesis,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Degradation p2 &lt;-merge_gift_tm5 %&gt;% ggplot(aes(x=type,y=Degradation,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.45, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Structure p3 &lt;-merge_gift_tm5 %&gt;% ggplot(aes(x=type,y=Structure,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Transport p4 &lt;-merge_gift_tm5 %&gt;% ggplot(aes(x=species,y=Transport,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) 7.9.4 Comparison of samples from the 6th Time_point (6_Post-FMT2) 7.9.4.1 CI vs CC #Merge the functional domains with the metadata merge_gift_TM6 &lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_TM6, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Biosynthesis,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Type&quot;) #Degradation p2 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Degradation,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Structure p3 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Structure,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Transport p4 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Transport,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) 7.9.4.2 CI vs WC #Merge the functional domains with the metadata merge_gift_TM8 &lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_TM8, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_TM8 %&gt;% ggplot(aes(x=type,y=Biosynthesis,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Type&quot;) #Degradation p2 &lt;-merge_gift_TM8 %&gt;% ggplot(aes(x=type,y=Degradation,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Structure p3 &lt;-merge_gift_TM8 %&gt;% ggplot(aes(x=type,y=Structure,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Transport p4 &lt;-merge_gift_TM8 %&gt;% ggplot(aes(x=species,y=Transport,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) "],["differential-abundance-functional.html", "Chapter 8 Differential abundance functional 8.1 Wilcoxon comparison", " Chapter 8 Differential abundance functional 8.1 Wilcoxon comparison 8.1.1 Comparison of both population in wild samples 8.1.2 Comparison of both population in acclimation samples 8.1.3 Comparison of CC and CI in post1 samples 8.1.4 Comparison of CI and WC in post1 samples 8.1.5 Comparison of CI in accli and post1 samples 8.1.6 Comparison of CC in accli and post1 samples 8.1.7 Comparison of CI and WC in post2 samples 8.1.8 Comparison of CI and CC in post2 samples 8.1.9 Community elements differences: in CC acclimation vs post2 8.1.10 Community elements differences: in CI acclimation vs post2 8.1.11 Community elements differences: in WC acclimation vs post2 "],["physiological-measurements.html", "Chapter 9 Physiological measurements 9.1 Respirometry 9.2 PHA test", " Chapter 9 Physiological measurements 9.1 Respirometry load(&quot;data/data.Rdata&quot;) respirometry_resp2 &lt;- read_excel(&quot;data/respirometry_resp2.xlsx&quot;) respirometry_resp2$individual&lt;-as.factor(respirometry_resp2$individual) respirometry_resp2$cage&lt;-as.factor(respirometry_resp2$cage) respirometry_resp2$time_point&lt;-as.factor(respirometry_resp2$time_point) respirometry_resp2$type&lt;-as.factor(respirometry_resp2$type) respirometry_resp2$population&lt;-as.factor(respirometry_resp2$population) respirometry_resp2$QC_normalized&lt;-as.numeric(respirometry_resp2$QC_normalized) respirometry_resp2$r2&lt;-as.numeric(respirometry_resp2$r2) #Filter NA values respirometry_resp2&lt;-respirometry_resp2 %&gt;% filter(QC_normalized!=&quot;NA&quot;) 9.1.1 Acclimation oxygen consumption respirometry_resp2 %&gt;% filter(time_point==&quot;0&quot;)%&gt;% filter(individual!=&quot;AH1_2nd_8&quot;) %&gt;% filter(individual!=&quot;LI1_2nd_4&quot;) %&gt;% filter(individual!=&quot;LI1_2nd_3&quot;) %&gt;% #lizard doesn&#39;t stop moving during the whole measurement, increasing the value and making it and outlier filter(individual!=&quot;LI1_2nd_10&quot;) %&gt;% ggplot(aes(x = population, y = QC_normalized, color=population, fill=population, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ #geom_text(aes(label = individual), hjust = 0, nudge_x = 0.05) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+ stat_compare_means(size=3,vjust = 3, hjust=1 )+ theme(legend.position=&quot;none&quot;, panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme_minimal()+ labs(x = &quot;Population&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;) 9.1.2 Time-point oxygen consumption respirometry_resp2 %&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% #r2 low ggplot(aes(x = time_point, y = QC_normalized, color=time_point, fill=time_point, alpha=0.2, label=cage)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;, &quot;#6E5244&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;,&quot;#6E524450&quot;))+ geom_text()+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;) respirometry_resp2 %&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% ggplot(aes(x = time_point, y = QC_normalized, color=time_point, fill=time_point, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;, &quot;#6E5244&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;,&quot;#6E524450&quot;))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;)+ geom_signif(comparisons = list(c(&quot;0&quot;, &quot;1&quot;), c(&quot;0&quot;, &quot;2&quot;), c(&quot;1&quot;, &quot;2&quot;)), map_signif_level = TRUE) 9.1.3 Data modelling 9.1.3.1 Raw data modelling (LMM) #subset all the wrong measurements respirometry_resp2_subset&lt;-respirometry_resp2%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728)#r2 low #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point*type, data = respirometry_resp2_subset, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subset AIC BIC logLik -841.4285 -818.9549 431.7142 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.88221e-05 9.643251e-05 Fixed effects: QC_normalized ~ time_point * type Value Std.Error DF t-value p-value (Intercept) 0.0003606272 3.602904e-05 34 10.009347 0.0000 time_point1 -0.0000164018 5.511468e-05 34 -0.297593 0.7678 time_point2 -0.0001625558 4.713812e-05 34 -3.448499 0.0015 typeCI 0.0000501031 5.241657e-05 23 0.955863 0.3491 typeWC -0.0000805159 5.978353e-05 23 -1.346790 0.1912 time_point1:typeCI -0.0000962543 7.672243e-05 34 -1.254579 0.2182 time_point2:typeCI -0.0000239312 6.663191e-05 34 -0.359156 0.7217 time_point1:typeWC 0.0000440266 7.860064e-05 34 0.560131 0.5791 time_point2:typeWC 0.0001550516 7.322865e-05 34 2.117363 0.0416 Correlation: (Intr) tm_pn1 tm_pn2 typeCI typeWC t_1:CI t_2:CI t_1:WC time_point1 -0.520 time_point2 -0.608 0.408 typeCI -0.687 0.358 0.418 typeWC -0.603 0.314 0.367 0.414 time_point1:typeCI 0.374 -0.718 -0.293 -0.555 -0.225 time_point2:typeCI 0.430 -0.289 -0.707 -0.635 -0.259 0.441 time_point1:typeWC 0.365 -0.701 -0.286 -0.251 -0.641 0.504 0.202 time_point2:typeWC 0.392 -0.263 -0.644 -0.269 -0.688 0.189 0.455 0.528 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.7050043 -0.5235835 -0.2048466 0.5819121 2.1120317 Number of Observations: 66 Number of Groups: 26 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.2721954 0.4206863 9.1.3.2 Raw data modelling (LM) without random effect #Create linear model formula formula1 &lt;- formula(QC_normalized ~ time_point*type) #QC_normalized=o2 consumption normalized (ml/s) #Fit the linear model model1 &lt;- lm(formula1, data = respirometry_resp2) #Print the model summary summary(model1) Call: lm(formula = formula1, data = respirometry_resp2) Residuals: Min 1Q Median 3Q Max -2.311e-04 -8.424e-05 -2.930e-05 6.706e-05 9.164e-04 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.606e-04 5.767e-05 6.253 3.92e-08 *** time_point1 -9.907e-06 9.650e-05 -0.103 0.9186 time_point2 -1.619e-04 8.407e-05 -1.926 0.0587 . typeCI 1.661e-04 8.156e-05 2.037 0.0459 * typeWC -4.257e-05 8.407e-05 -0.506 0.6144 time_point1:typeCI -2.559e-04 1.280e-04 -2.000 0.0499 * time_point2:typeCI -1.406e-04 1.171e-04 -1.201 0.2344 time_point1:typeWC -4.166e-07 1.296e-04 -0.003 0.9974 time_point2:typeWC 1.164e-04 1.206e-04 0.965 0.3381 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.000173 on 63 degrees of freedom Multiple R-squared: 0.2561, Adjusted R-squared: 0.1616 F-statistic: 2.711 on 8 and 63 DF, p-value: 0.01244 9.1.4 Data modeling without WC 9.1.4.1 Raw data modelling (LMM) #Filter out WC from the dataframe and create a subset respirometry_resp2_cold&lt;-respirometry_resp2%&gt;% filter(type!=&quot;WC&quot;)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) #r2 low model4 &lt;- lme(fixed = QC_normalized ~ time_point*type, data = respirometry_resp2_cold, random = ~ 1 | individual) #Print the model summary summary(model4) Linear mixed-effects model fit by REML Data: respirometry_resp2_cold AIC BIC logLik -548.3695 -534.8585 282.1848 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.579366e-08 0.0001796569 Fixed effects: QC_normalized ~ time_point * type Value Std.Error DF t-value p-value (Intercept) 0.0003606272 5.988564e-05 24 6.021930 0.0000 time_point1 -0.0000099066 1.002079e-04 24 -0.098861 0.9221 time_point2 -0.0001618864 8.729758e-05 24 -1.854420 0.0760 typeCI 0.0001661186 8.469109e-05 16 1.961465 0.0675 time_point1:typeCI -0.0002240079 1.378671e-04 24 -1.624811 0.1173 time_point2:typeCI -0.0001406162 1.216283e-04 24 -1.156114 0.2590 Correlation: (Intr) tm_pn1 tm_pn2 typeCI t_1:CI time_point1 -0.598 time_point2 -0.686 0.410 typeCI -0.707 0.423 0.485 time_point1:typeCI 0.434 -0.727 -0.298 -0.614 time_point2:typeCI 0.492 -0.294 -0.718 -0.696 0.428 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1046888 -0.4339569 -0.1464952 0.3025721 5.1009117 Number of Observations: 46 Number of Groups: 18 MuMIn::r.squaredGLMM(model4) R2m R2c [1,] 0.2942692 0.2942692 9.1.4.2 Raw data modelling (LM) without random effect #Create linear model formula formula5 &lt;- formula(QC_normalized ~ time_point*type) #Fit the linear model model5 &lt;- lm(formula5, data = respirometry_resp2_cold) #Print the model summary summary(model5) Call: lm(formula = formula5, data = respirometry_resp2_cold) Residuals: Min 1Q Median 3Q Max -1.985e-04 -7.796e-05 -2.632e-05 5.436e-05 9.164e-04 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 3.606e-04 5.989e-05 6.022 4.4e-07 *** time_point1 -9.907e-06 1.002e-04 -0.099 0.9217 time_point2 -1.619e-04 8.730e-05 -1.854 0.0711 . typeCI 1.661e-04 8.469e-05 1.961 0.0568 . time_point1:typeCI -2.240e-04 1.379e-04 -1.625 0.1121 time_point2:typeCI -1.406e-04 1.216e-04 -1.156 0.2545 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.0001797 on 40 degrees of freedom Multiple R-squared: 0.3193, Adjusted R-squared: 0.2342 F-statistic: 3.753 on 5 and 40 DF, p-value: 0.007029 9.2 PHA test pha_rep2 &lt;- read_tsv(&quot;data/Fito_2023.tsv&quot;) pha_rep2$Individual&lt;-as.factor(pha_rep2$Individual) pha_rep2$Cage&lt;-as.factor(pha_rep2$Cage) pha_rep2$time_point&lt;-as.factor(pha_rep2$time_point) pha_rep2$Type&lt;-as.factor(pha_rep2$Type) 9.2.1 PHA measurements pha_rep2 %&gt;% ggplot(aes(x = Weight, y = Mean_value)) + geom_point() + geom_smooth(method = lm, formula = y ~ x) + stat_poly_eq()+ facet_nested(~ time_point+Type)+ labs(x = &quot;Weight (g)&quot;, y=&quot;Measurement (mm)&quot;) 9.2.1.1 Average PHA measurements pha_rep2 %&gt;% rowwise() %&gt;% mutate( mean = round(mean(c(Value1, Value2, Value3, Value4, Value5)), 2), sd = round(sd(c(Value1, Value2, Value3, Value4, Value5)), 2) ) %&gt;% unite(&quot;Average&quot;, mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% select(Individual, time_point, Average) %&gt;% tt() .table td.tinytable_css_84ucj9abr6fgf5pxjjze, .table th.tinytable_css_84ucj9abr6fgf5pxjjze { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3fowqiylkkyzzx8pcibg, .table th.tinytable_css_3fowqiylkkyzzx8pcibg { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Individual time_point Average AH1_2nd_8 0 1.08 ± 0.01 AH1_2nd_5 0 0.99 ± 0.01 AH1_2nd_9 0 1.04 ± 0.02 AH1_2nd_14 0 1.1 ± 0.03 AH1_2nd_19 0 1.08 ± 0.01 AH1_2nd_7 0 1.02 ± 0.01 AH1_2nd_1 0 1.01 ± 0.01 AH1_2nd_2 0 0.97 ± 0.01 AH1_2nd_12 0 0.96 ± 0.02 AH1_2nd_11 0 1 ± 0.01 AH1_2nd_10 0 0.9 ± 0.01 AH1_2nd_13 0 0.87 ± 0.01 AH1_2nd_15 0 0.92 ± 0.01 AH1_2nd_17 0 0.94 ± 0.01 AH1_2nd_6 0 1.07 ± 0.02 AH1_2nd_16 0 0.82 ± 0.01 AH1_2nd_20 0 0.9 ± 0.01 AH1_2nd_18 0 1.02 ± 0.02 LI1_2nd_10 0 1 ± 0.01 LI1_2nd_9 0 1.06 ± 0.01 LI1_2nd_1 0 1 ± 0.01 LI1_2nd_4 0 1.02 ± 0.01 LI1_2nd_2 0 1.03 ± 0.02 LI1_2nd_7 0 0.91 ± 0.01 LI1_2nd_3 0 1.03 ± 0.01 LI1_2nd_8 0 1 ± 0.01 LI1_2nd_5 0 1.02 ± 0.01 LI1_2nd_6 0 1.03 ± 0.02 AH1_2nd_8 1 1.3 ± 0.02 AH1_2nd_5 1 1.3 ± 0.01 AH1_2nd_9 1 1.33 ± 0.02 AH1_2nd_14 1 1.29 ± 0.01 AH1_2nd_2 1 1.3 ± 0.01 AH1_2nd_1 1 1.18 ± 0.02 AH1_2nd_7 1 1.18 ± 0.01 AH1_2nd_19 1 1.24 ± 0.01 AH1_2nd_12 1 1.17 ± 0.01 AH1_2nd_11 1 1.19 ± 0.02 AH1_2nd_10 1 0.96 ± 0.03 AH1_2nd_13 1 1.17 ± 0.01 AH1_2nd_15 1 1.27 ± 0.01 AH1_2nd_17 1 1.27 ± 0.01 AH1_2nd_6 1 1.59 ± 0.01 AH1_2nd_16 1 0.96 ± 0.02 LI1_2nd_10 1 1.5 ± 0.02 LI1_2nd_9 1 1.4 ± 0.01 AH1_2nd_20 1 1.15 ± 0.02 AH1_2nd_18 1 1.38 ± 0.01 LI1_2nd_7 1 1.37 ± 0.03 LI1_2nd_4 1 1.4 ± 0.01 LI1_2nd_2 1 1.28 ± 0.02 LI1_2nd_1 1 1.21 ± 0.05 LI1_2nd_6 1 1.3 ± 0.01 LI1_2nd_3 1 1.18 ± 0.01 LI1_2nd_8 1 1.3 ± 0.01 LI1_2nd_5 1 1.31 ± 0.02 9.2.2 Time-point measurements pha_rep2 %&gt;% ggplot(aes(x = time_point, y = normalized, color=time_point, fill=time_point, alpha=0.2 )) + geom_boxplot()+ geom_jitter() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;))+ facet_wrap(~ factor(Type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized measurement (mm/g)&quot;) 9.2.3 Time-point measurements, linking individuals pha_rep2 %&gt;% ggplot(aes(x = interaction(time_point, Individual), y = normalized, color=time_point, fill=time_point, alpha=0.2 )) + geom_boxplot()+ geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ geom_line(aes(group=Individual)) + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;))+ facet_wrap(~ factor(Type),scales = &quot;free&quot;)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized measurement (mm/g)&quot;) 9.2.4 Data modelling 9.2.4.1 Raw data modelling (LMM) #Create linear model formula model6 &lt;- lme(fixed = normalized ~ time_point*Type, data = pha_rep2, random = ~ 1 | Individual) #Print the model summary summary(model6) Linear mixed-effects model fit by REML Data: pha_rep2 AIC BIC logLik -179.2493 -163.9531 97.62463 Random effects: Formula: ~1 | Individual (Intercept) Residual StdDev: 0.03592694 0.01685279 Fixed effects: normalized ~ time_point * Type Value Std.Error DF t-value p-value (Intercept) 0.21051532 0.013227757 25 15.914665 0.0000 time_point1 0.05232865 0.007944483 25 6.586791 0.0000 TypeCI 0.03197587 0.018706873 25 1.709312 0.0998 TypeWC -0.01288531 0.018233204 25 -0.706695 0.4863 time_point1:TypeCI 0.00988802 0.011235195 25 0.880094 0.3872 time_point1:TypeWC 0.00919483 0.010950714 25 0.839655 0.4091 Correlation: (Intr) tm_pn1 TypeCI TypeWC t_1:TC time_point1 -0.300 TypeCI -0.707 0.212 TypeWC -0.725 0.218 0.513 time_point1:TypeCI 0.212 -0.707 -0.300 -0.154 time_point1:TypeWC 0.218 -0.725 -0.154 -0.300 0.513 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.11959410 -0.53372045 -0.09031554 0.45767238 1.76747080 Number of Observations: 56 Number of Groups: 28 MuMIn::r.squaredGLMM(model6) R2m R2c [1,] 0.4474354 0.9003421 9.2.4.2 Raw data modelling (LM) without random effect #Create linear model formula formula7 &lt;- formula(normalized ~ time_point*Type) #Fit the linear model model7 &lt;- lm(formula7, data = pha_rep2) #Print the model summary summary(model7) Call: lm(formula = formula7, data = pha_rep2) Residuals: Min 1Q Median 3Q Max -0.077837 -0.023166 -0.004332 0.024254 0.109477 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 0.210515 0.013228 15.915 &lt;2e-16 *** time_point1 0.052329 0.018707 2.797 0.0073 ** TypeCI 0.031976 0.018707 1.709 0.0936 . TypeWC -0.012885 0.018233 -0.707 0.4830 time_point1:TypeCI 0.009888 0.026456 0.374 0.7102 time_point1:TypeWC 0.009195 0.025786 0.357 0.7229 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.03968 on 50 degrees of freedom Multiple R-squared: 0.4711, Adjusted R-squared: 0.4182 F-statistic: 8.907 on 5 and 50 DF, p-value: 4.235e-06 9.2.5 Data modeling without WC 9.2.5.1 Raw data modelling (LMM) #Filter out WC measurements pha_rep2_cold&lt;-pha_rep2 %&gt;% filter(Type!=&quot;WC&quot;) #Create linear model formula model8 &lt;- lme(fixed = normalized ~ time_point*Type, data = pha_rep2_cold, random = ~ 1 | Individual) #Print the model summary summary(model8) Linear mixed-effects model fit by REML Data: pha_rep2_cold AIC BIC logLik -105.8477 -97.05328 58.92385 Random effects: Formula: ~1 | Individual (Intercept) Residual StdDev: 0.04285079 0.01772373 Fixed effects: normalized ~ time_point * Type Value Std.Error DF t-value p-value (Intercept) 0.21051532 0.015457185 16 13.619254 0.0000 time_point1 0.05232865 0.008355044 16 6.263120 0.0000 TypeCI 0.03197587 0.021859760 16 1.462773 0.1629 time_point1:TypeCI 0.00988802 0.011815817 16 0.836846 0.4150 Correlation: (Intr) tm_pn1 TypeCI time_point1 -0.270 TypeCI -0.707 0.191 time_point1:TypeCI 0.191 -0.707 -0.270 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.05423257 -0.64335101 -0.09689866 0.45912524 1.57921682 Number of Observations: 36 Number of Groups: 18 MuMIn::r.squaredGLMM(model8) R2m R2c [1,] 0.3582245 0.906246 9.2.5.2 Raw data modelling (LM) without random effect #Create linear model formula formula9 &lt;- formula(normalized ~ time_point*Type) #Fit the linear model model9 &lt;- lm(formula9, data = pha_rep2_cold) #Print the model summary summary(model9) Call: lm(formula = formula9, data = pha_rep2_cold) Residuals: Min 1Q Median 3Q Max -0.07784 -0.02913 -0.01037 0.03610 0.10948 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 0.210515 0.015457 13.619 7.28e-15 *** time_point1 0.052329 0.021860 2.394 0.0227 * TypeCI 0.031976 0.021860 1.463 0.1533 time_point1:TypeCI 0.009888 0.030914 0.320 0.7512 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.04637 on 32 degrees of freedom Multiple R-squared: 0.3791, Adjusted R-squared: 0.3209 F-statistic: 6.512 on 3 and 32 DF, p-value: 0.001452 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
