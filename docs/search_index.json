<<<<<<< HEAD
[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1,Carlos Cabido2, Kevin Kohl3, Antton Alberdi4 and Ostaizka Aizpurua5 Last update: 2025-03-08 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(lme4) library(emmeans) library(UpSetR) library(ANCOMBC) #library(MASS) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Pittsburgh, kkohl78@gmail.com↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!time_point %in% c(&quot;Antibiotics&quot;,&quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) %&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw)%&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Two samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD91&quot;, &quot;AC85&quot;) # Columns to exclude (&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, ) read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Coverage_table genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code %in% colnames(read_counts)) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats &lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data_27022025.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data_27022025.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 3335496930 data_stats$raw_reads %&gt;% mean() [1] 31466952 data_stats$raw_reads %&gt;% sd() [1] 14473977 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.471 0.140 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata[c(1,7, 10)], by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_u62mtp08pbz9ho76owsk, .table th.tinytable_css_u62mtp08pbz9ho76owsk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eob8tddhzp1zjvfjv5wd, .table th.tinytable_css_eob8tddhzp1zjvfjv5wd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point type AC79 1.0000000 Acclimation Control AC80 1.0000000 Acclimation Treatment AC81 0.9813013 Acclimation Treatment AC82 0.7490771 Acclimation Treatment AC83 1.0000000 Acclimation Control AC84 1.0000000 Acclimation Control AC86 0.8800275 Acclimation Control AC87 0.9672854 Acclimation Treatment AC88 0.3142108 Acclimation Control AC89 0.9338962 Acclimation Treatment AC90 1.0000000 Acclimation Control AC91 1.0000000 Acclimation Control AC92 1.0000000 Acclimation Control AC93 1.0000000 Acclimation Treatment AC94 0.9159348 Acclimation Treatment AC95 0.9239904 Acclimation Treatment AC96 0.9425962 Acclimation Treatment AC97 0.9394886 Acclimation Hot_control AC98 1.0000000 Acclimation Hot_control AC99 1.0000000 Acclimation Hot_control AD01 1.0000000 Acclimation Hot_control AD02 1.0000000 Acclimation Hot_control AD03 1.0000000 Acclimation Hot_control AD04 0.8896057 Acclimation Hot_control AD05 1.0000000 Acclimation Hot_control AD07 0.9515379 Acclimation Hot_control AD74 0.9017271 FMT1 Control AD75 1.0000000 FMT1 Treatment AD76 0.9862581 FMT1 Treatment AD77 0.8963376 FMT1 Treatment AD78 1.0000000 FMT1 Treatment AD79 1.0000000 FMT1 Control AD80 0.8808155 FMT1 Treatment AD81 1.0000000 FMT1 Control AD82 1.0000000 FMT1 Control AD83 1.0000000 FMT1 Treatment AD84 1.0000000 FMT1 Treatment AD85 1.0000000 FMT1 Control AD86 0.9889084 FMT1 Control AD87 1.0000000 FMT1 Control AD88 1.0000000 FMT1 Treatment AD89 0.9562489 FMT1 Control AD90 1.0000000 FMT1 Control AD93 1.0000000 FMT1 Hot_control AD94 0.7947750 FMT1 Hot_control AD95 0.9506977 FMT1 Hot_control AD96 0.9171413 FMT1 Hot_control AD97 0.9257685 FMT1 Hot_control AD98 0.9048349 FMT1 Hot_control AD99 0.9966152 FMT1 Hot_control AE01 1.0000000 FMT1 Hot_control AE02 1.0000000 FMT1 Hot_control AE04 1.0000000 FMT2 Treatment AE05 1.0000000 FMT2 Treatment AE06 1.0000000 FMT2 Control AE07 0.7797794 FMT2 Control AE08 1.0000000 FMT2 Control AE09 1.0000000 FMT2 Control AE91 0.9259146 FMT2 Treatment AE92 1.0000000 FMT2 Control AE93 1.0000000 FMT2 Control AE94 0.9152960 FMT2 Treatment AE95 1.0000000 FMT2 Treatment AE96 0.7786112 FMT2 Treatment AE97 0.9365037 FMT2 Control AE98 1.0000000 FMT2 Control AE99 0.8513354 FMT2 Treatment AF01 0.9046369 FMT2 Treatment AF02 1.0000000 FMT2 Control AF03 0.9030087 FMT2 Treatment AF04 1.0000000 FMT2 Hot_control AF05 1.0000000 FMT2 Hot_control AF06 1.0000000 FMT2 Hot_control AF07 0.9526443 FMT2 Hot_control AF08 1.0000000 FMT2 Hot_control AF09 1.0000000 FMT2 Hot_control AF10 0.9716162 FMT2 Hot_control AF11 0.9654152 FMT2 Hot_control AF13 0.8818742 FMT2 Hot_control AFU87 0.8810513 Wild Control AFU88 0.8317800 Wild Treatment AFU91 0.8923699 Wild Treatment AFU92 0.8094776 Wild Treatment AFU93 0.8517368 Wild Control AFU94 0.8325385 Wild Treatment AFU95 0.8419270 Wild Treatment AFU96 0.8326820 Wild Control AFU97 0.8107271 Wild Treatment AFU98 0.7506522 Wild Control AFU99 0.8582371 Wild Treatment AFV01 0.9331539 Wild Treatment AFV02 0.8316460 Wild Treatment AFV03 0.8752591 Wild Control AFV04 0.9180285 Wild Control AFV05 1.0000000 Wild Control AFV06 1.0000000 Wild Control AFV07 0.8460805 Wild Control AFV08 0.7497043 Wild Hot_control AFV09 0.5412999 Wild Hot_control AFV10 0.8002499 Wild Hot_control AFV11 0.8225298 Wild Hot_control AFV12 0.7925988 Wild Hot_control AFV14 0.8106269 Wild Hot_control AFV15 0.9691106 Wild Hot_control AFV16 0.8218990 Wild Hot_control AFV17 0.8091152 Wild Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data_27022025.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample # transplants_metadata &lt;- sample_metadata %&gt;% # mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) # transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, # &quot;_&quot;, # transplants_metadata$individual) merged_data &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome), ~ . / sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes( x = sample, y = count, fill = phylum, group = phylum )) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat = &quot;identity&quot;, colour = &quot;white&quot;, linewidth = 0.1) + #plot stacked bars with white borders scale_fill_manual(values = phylum_colors) + facet_nested(. ~ time_point + type , scales = &quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill = &quot;Phylum&quot;, y = &quot;Relative abundance&quot;, x = &quot;Sample&quot;) + theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), strip.background = element_rect(fill =&quot;lightgrey&quot;), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.1.1 Wild samples merged_data %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% ggplot(aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Population, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), strip.background = element_rect(fill =&quot;lightgrey&quot;), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) 5.1.2.1 Cold and wet population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_ivs4ynuo9u430z0p4ikp, .table th.tinytable_css_ivs4ynuo9u430z0p4ikp { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7o8eya06s5xmc1c72h1q, .table th.tinytable_css_7o8eya06s5xmc1c72h1q { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum total p__Bacteroidota 41.93±15.4 p__Bacillota_A 33.96±16.7 p__Bacillota 5.73±4.73 p__Campylobacterota 5.39±4.64 p__Verrucomicrobiota 4.36±3.06 p__Pseudomonadota 3.75±3.76 p__Desulfobacterota 2.31±1.6 p__Bacillota_C 0.85±0.82 p__Cyanobacteriota 0.64±0.83 p__Bacillota_B 0.5±0.77 p__Fusobacteriota 0.37±1.28 p__Spirochaetota 0.12±0.35 p__Actinomycetota 0.09±0.22 5.1.2.2 Hot and dry population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_tu304oqxfhig7pnf0i89, .table th.tinytable_css_tu304oqxfhig7pnf0i89 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9j21xh93udcuhl4zhx1i, .table th.tinytable_css_9j21xh93udcuhl4zhx1i { border-bottom: solid #d3d8dc 0.1em; } phylum total p__Bacillota_A 33.9±16.17 p__Bacteroidota 27.63±17.64 p__Campylobacterota 13.53±20.98 p__Pseudomonadota 10.92±9.94 p__Bacillota 6.09±7.66 p__Spirochaetota 2.66±2.78 p__Desulfobacterota 1.69±1.85 p__Fusobacteriota 1.34±1.73 p__Bacillota_B 0.76±0.73 p__Bacillota_C 0.73±0.5 p__Cyanobacteriota 0.52±0.65 p__Chlamydiota 0.12±0.18 p__Verrucomicrobiota 0.06±0.1 p__Elusimicrobiota 0.05±0.14 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["calculations.html", "Chapter 6 Calculations 6.1 Alpha diversity 6.2 Beta diversity 6.3 Phyloseq object 6.4 Functional data", " Chapter 6 Calculations load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/beta_27022025.Rdata&quot;) 6.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) 6.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) 6.3 Phyloseq object #Phyloseq object count_phy &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% otu_table(., taxa_are_rows=T) sample_info_tab_phy &lt;- sample_metadata%&gt;% column_to_rownames(var=&quot;Tube_code&quot;)%&gt;% sample_data() TAX &lt;- genome_metadata%&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% select(1:7)%&gt;% as.matrix()%&gt;% tax_table() tree &lt;- phy_tree(genome_tree) physeq_all = phyloseq(count_phy, TAX, sample_info_tab_phy, tree) 6.4 Functional data # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) uniqueGIFT_db &lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% left_join(sample_metadata[c(1, 7, 10)], by = &quot;Tube_code&quot;) save(richness, neutral, phylogenetic, alpha_div, physeq_all, beta_q0n, beta_q1n, beta_q1p, GIFTs_elements_filtered, GIFTs_elements_community, GIFTs_functions_community, GIFTs_domains_community, element_gift, uniqueGIFT_db, file = &quot;data/calculations_28022025.Rdata&quot;) "],["is-the-gm-of-cold--vs-warm-adapted-populations-similar-in-the-wild.html", "Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? 7.1 Shared and unique MAGs 7.2 Shapiro test 7.3 Alpha diversity 7.4 Beta diversity 7.5 Differential abundance 7.6 Functional capacity", " Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) load(&quot;data/ancombc_04032025.Rdata&quot;) 7.1 Shared and unique MAGs 7.2 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.03999359 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2966492 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.5784544 7.3 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;))) %&gt;% filter(metric==&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;wilcox.test&quot;, size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 7.4 Beta diversity Number of samples used samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) length(samples_to_keep) [1] 27 Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.974 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.972 Hot_dry 0.97302 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_x1id8px5c4kprpzaweyu, .table th.tinytable_css_x1id8px5c4kprpzaweyu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ubt92mn0bkyhdcju335z, .table th.tinytable_css_ubt92mn0bkyhdcju335z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.945 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.945 Hot_dry 0.94763 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_edpjoj3el2chcytyn2r9, .table th.tinytable_css_edpjoj3el2chcytyn2r9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8qc5nle60ond2htsn5hx, .table th.tinytable_css_8qc5nle60ond2htsn5hx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.129 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.132 Hot_dry 0.12705 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_iikub25ehkl40rnvgr7k, .table th.tinytable_css_iikub25ehkl40rnvgr7k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ew1jl6ddi5a3tw87cilo, .table th.tinytable_css_ew1jl6ddi5a3tw87cilo { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA NMDS beta_q0n_nmds_wild &lt;- richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1n_nmds_wild &lt;- neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1p_nmds_wild &lt;- phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_q0n_nmds_wild, beta_q1n_nmds_wild, beta_q1p_nmds_wild, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 7.5 Differential abundance physeq_wild &lt;- subset_samples(physeq_all, time_point == &quot;Wild&quot;) physeq_wild &lt;- prune_taxa(taxa_sums(physeq_wild)&gt;0, physeq_wild) 7.5.1 Phylum ancom_rand_output_wild_phylum$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) 7.5.2 MAG level Structural zeros # Extract structural zeros structural_zeros &lt;- ancom_rand_output$zero_ind # Convert to a data frame for better readability structural_zeros_df &lt;- as.data.frame(structural_zeros) %&gt;% column_to_rownames(., &quot;taxon&quot;) # Find taxa that are structural zeros in at least one group structural_zero_taxa &lt;- rownames(structural_zeros_df)[apply(structural_zeros_df, 1, any)] length(structural_zero_taxa) Differentially abundant MAGs Phyla of the significant MAGs in warm ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) Phyla of the significant MAGs in cold ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) 7.6 Functional capacity 7.6.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.346 0.0194 2 Hot_dry 0.327 0.0244 MCI_element_wild &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) shapiro.test(MCI_element_wild$value) #normality test Shapiro-Wilk normality test data: MCI_element_wild$value W = 0.96385, p-value = 0.4503 var.test(value ~ Population, data = MCI_element_wild) F test to compare two variances data: value by Population F = 0.63604, num df = 17, denom df = 8, p-value = 0.4114 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.1569001 1.9468860 sample estimates: ratio of variances 0.636035 t.test(value ~ Population, data=MCI_element_wild, var.equal = TRUE) Two Sample t-test data: value by Population t = 2.2416, df = 25, p-value = 0.03411 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: 0.001570698 0.037107300 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3461279 0.3267889 7.6.2 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_wet-Hot_dry)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Hot&quot;,&quot;Cold&quot;)) difference_table_wild %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["what-is-the-effect-of-acclimation.html", "Chapter 8 What is the effect of acclimation? 8.1 Functional capacity", " Chapter 8 What is the effect of acclimation? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 8.0.1 Do populations mantain a different GM after acclimation? 8.0.1.1 Shaprio test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2445285 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.4803302 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3335912 8.0.1.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.0.1.3 Beta diversity Number of samples used samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) length(samples_to_keep_accli) [1] 26 Richness richness_accli &lt;- as.matrix(beta_q0n$S) richness_accli &lt;- as.dist(richness_accli[rownames(richness_accli) %in% samples_to_keep_accli, colnames(richness_accli) %in% samples_to_keep_accli]) betadisper(richness_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.093187 0.093187 11.812 999 0.004 ** Residuals 24 0.189340 0.007889 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.003 Hot_dry 0.0021532 adonis2(richness_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(richness_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.639630 0.1929088 5.736415 0.001 Residual 24 6.859879 0.8070912 NA NA Total 25 8.499509 1.0000000 NA NA Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.05603 0.056026 4.1918 999 0.05 * Residuals 24 0.32077 0.013365 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.042 Hot_dry 0.051717 adonis2(neutral_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nmvce8fw40ditobn0t5e, .table th.tinytable_css_nmvce8fw40ditobn0t5e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9219ensdmx0dk9hm8ftj, .table th.tinytable_css_9219ensdmx0dk9hm8ftj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.961192 0.2493171 7.970889 0.001 Residual 24 5.905063 0.7506829 NA NA Total 25 7.866255 1.0000000 NA NA Phylogenetic phylo_accli &lt;- as.matrix(beta_q1p$S) phylo_accli &lt;- as.dist(phylo_accli[rownames(phylo_accli) %in% samples_to_keep_accli, colnames(phylo_accli) %in% samples_to_keep_accli]) betadisper(phylo_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03637 0.036365 2.3087 999 0.147 Residuals 24 0.37804 0.015752 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.137 Hot_dry 0.14172 adonis2(phylo_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(phylo_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_k810rky4s5ugx6j7ykr1, .table th.tinytable_css_k810rky4s5ugx6j7ykr1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eij79dsx7oaprbxzfovk, .table th.tinytable_css_eij79dsx7oaprbxzfovk { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2113395 0.1379515 3.84066 0.017 Residual 24 1.3206449 0.8620485 NA NA Total 25 1.5319844 1.0000000 NA NA NMDS beta_q0n_nmds_accli &lt;- richness_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1n_nmds_accli &lt;- neutral_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1p_nmds_accli &lt;- phylo_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange( beta_q0n_nmds_accli, beta_q1n_nmds_accli, beta_q1p_nmds_accli, ncol = 2, nrow = 2, common.legend = TRUE, legend = &quot;right&quot; ) 8.1 Functional capacity 8.1.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.329 0.0319 2 Hot_dry 0.348 0.0158 MCI_element_acclimation&lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) shapiro.test(MCI_element_acclimation$value) #normality test Shapiro-Wilk normality test data: MCI_element_acclimation$value W = 0.92832, p-value = 0.0707 var.test(value ~ Population, data = MCI_element_acclimation) F test to compare two variances data: value by Population F = 4.0687, num df = 16, denom df = 8, p-value = 0.05027 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.9981905 12.7140279 sample estimates: ratio of variances 4.06872 t.test(value ~ Population, data=MCI_element_acclimation, var.equal = TRUE) Two Sample t-test data: value by Population t = -1.633, df = 24, p-value = 0.1155 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: -0.042021638 0.004897661 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3292377 0.3477997 8.1.2 Differences in functional pathways element_gift_acclimation&lt;- element_gift %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_acclimation &lt;- element_gift_acclimation %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_acclimation &lt;- element_gift_acclimation %&gt;% select(Tube_code, all_of(intersect( significant_elements_acclimation$trait, colnames(element_gift_acclimation) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_acclimation &lt;- element_gift_sig_acclimation %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_wet-Hot_dry)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Hot&quot;,&quot;Cold&quot;)) difference_table_acclimation %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["fmt.html", "Chapter 9 FMT 9.1 FMT1 9.2 FMT2", " Chapter 9 FMT load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 9.1 FMT1 9.1.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 9.1.1.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6077531 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3357428 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.9273925 9.1.1.2 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) ***p&lt;0.05 when comparin neutral beta diversity between Cold-control and Warm-control 9.1.1.3 Beta diversity Number of samples used samples_to_keep_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) length(samples_to_keep_post1) [1] 26 Richness richness_post1 &lt;- as.matrix(beta_q0n$S) richness_post1 &lt;- as.dist(richness_post1[rownames(richness_post1) %in% samples_to_keep_post1, colnames(richness_post1) %in% samples_to_keep_post1]) betadisper(richness_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01060 0.0052999 1.1619 999 0.38 Residuals 23 0.10491 0.0045613 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.046000 0.675 Hot_control 0.055742 0.454 Treatment 0.625388 0.420078 adonis2(richness_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.195567 0.1448246 1.947534 0.002 Residual 23 7.059710 0.8551754 NA NA Total 25 8.255277 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(richness_post1),] pairwise &lt;- pairwise.adonis(richness_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_o6hfkymqdo9hxh65gzhu, .table th.tinytable_css_o6hfkymqdo9hxh65gzhu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9sbj2gho4zrm24unutke, .table th.tinytable_css_9sbj2gho4zrm24unutke { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.5615418 1.729004 0.1033537 0.013 0.039 . Control vs Hot_control 1 0.8438429 2.793772 0.1486541 0.002 0.006 * Treatment vs Hot_control 1 0.3734921 1.268929 0.0779971 0.108 0.324 Neutral neutral_post1 &lt;- as.matrix(beta_q1n$S) neutral_post1 &lt;- as.dist(neutral_post1[rownames(neutral_post1) %in% samples_to_keep_post1, colnames(neutral_post1) %in% samples_to_keep_post1]) betadisper(neutral_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002996 0.0014982 0.1374 999 0.883 Residuals 23 0.250747 0.0109020 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.55300 0.877 Hot_control 0.55320 0.784 Treatment 0.86589 0.76648 adonis2(neutral_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_khx4bnmx7jbjcsfx68bi, .table th.tinytable_css_khx4bnmx7jbjcsfx68bi { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8cttbobld5mvixvext93, .table th.tinytable_css_8cttbobld5mvixvext93 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.395968 0.1900228 2.697931 0.002 Residual 23 5.950350 0.8099772 NA NA Total 25 7.346318 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(neutral_post1),] pairwise &lt;- pairwise.adonis(neutral_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xmij3se8qn5wlzp8tmi1, .table th.tinytable_css_xmij3se8qn5wlzp8tmi1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9xrgxg2vvuw38m1dsj9w, .table th.tinytable_css_9xrgxg2vvuw38m1dsj9w { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6051778 2.250849 0.13047758 0.013 0.039 . Control vs Hot_control 1 1.0528902 4.143637 0.20570451 0.001 0.003 * Treatment vs Hot_control 1 0.4150076 1.637268 0.09840968 0.047 0.141 Phylogenetic phylo_post1 &lt;- as.matrix(beta_q1p$S) phylo_post1 &lt;- as.dist(phylo_post1[rownames(phylo_post1) %in% samples_to_keep_post1, colnames(phylo_post1) %in% samples_to_keep_post1]) betadisper(phylo_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00399 0.0019943 0.1213 999 0.912 Residuals 23 0.37812 0.0164399 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.92600 0.710 Hot_control 0.91065 0.775 Treatment 0.65272 0.74852 adonis2(phylo_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_7a8inmgyn0mmupla9vna, .table th.tinytable_css_7a8inmgyn0mmupla9vna { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0ssnpq3yjg5qrvzsh2cb, .table th.tinytable_css_0ssnpq3yjg5qrvzsh2cb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.07451036 0.07059466 0.8735033 0.558 Residual 23 0.98095695 0.92940534 NA NA Total 25 1.05546731 1.00000000 NA NA NMDS beta_richness_nmds_post1 &lt;- richness_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post1 &lt;- neutral_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post1 &lt;- phylo_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post1, beta_neutral_nmds_post1, beta_phylogenetic_nmds_post1, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 9.1.1.4 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.373 0.0247 2 Hot_control 0.372 0.0367 3 Treatment 0.353 0.0186 MCI_tm5_ele &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT1&quot;) shapiro.test(MCI_tm5_ele$value)#normality test Shapiro-Wilk normality test data: MCI_tm5_ele$value W = 0.92343, p-value = 0.05415 res.aov &lt;- aov(value ~ type, data = MCI_tm5_ele)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00216 0.0010798 1.371 0.274 Residuals 23 0.01811 0.0007875 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 9.2 FMT2 9.2.1 Is the GM of the intervention group still more similar to warm population after one week from FMT? 9.2.1.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1683943 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6310339 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3446539 9.2.1.2 Alpha bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) 9.2.1.3 Beta diversity Number of samples used samples_to_keep_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) length(samples_to_keep_FMT2) [1] 27 Richness richness_FMT2 &lt;- as.matrix(beta_q0n$S) richness_FMT2 &lt;- as.dist(richness_FMT2[rownames(richness_FMT2) %in% samples_to_keep_FMT2, colnames(richness_FMT2) %in% samples_to_keep_FMT2]) betadisper(richness_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.003043 0.0015214 0.2578 999 0.805 Residuals 24 0.141630 0.0059013 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.93900 0.524 Hot_control 0.93628 0.568 Treatment 0.50455 0.54043 adonis2(richness_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(richness_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_u0nep4r6ph0iosuhj8tx, .table th.tinytable_css_u0nep4r6ph0iosuhj8tx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aur00t2h69wogv08larg, .table th.tinytable_css_aur00t2h69wogv08larg { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.504341 0.1967776 2.939822 0.001 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(richness_FMT2),] pairwise &lt;- pairwise.adonis(richness_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qd0q7v8wkjyfa5ifnozz, .table th.tinytable_css_qd0q7v8wkjyfa5ifnozz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e27qhhrn9k91jtuqh1xc, .table th.tinytable_css_e27qhhrn9k91jtuqh1xc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6463814 2.560441 0.1379515 0.001 0.003 * Control vs Hot_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * Treatment vs Hot_control 1 0.4796256 1.916520 0.1069694 0.001 0.003 * Neutral neutral_FMT2 &lt;- as.matrix(beta_q1n$S) neutral_FMT2 &lt;- as.dist(neutral_FMT2[rownames(neutral_FMT2) %in% samples_to_keep_FMT2, colnames(neutral_FMT2) %in% samples_to_keep_FMT2]) betadisper(neutral_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.005365 0.0026827 0.309 999 0.705 Residuals 24 0.208332 0.0086805 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.74100 0.635 Hot_control 0.75233 0.454 Treatment 0.64640 0.46107 adonis2(neutral_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(neutral_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z8gcb48ntahf4u7tl5t9, .table th.tinytable_css_z8gcb48ntahf4u7tl5t9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dqd40unkfqiqiosznwwn, .table th.tinytable_css_dqd40unkfqiqiosznwwn { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.923807 0.2603795 4.224537 0.001 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(neutral_FMT2),] pairwise &lt;- pairwise.adonis(neutral_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ohcfpytn467mwa3pabwo, .table th.tinytable_css_ohcfpytn467mwa3pabwo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2rklnabaxwut3cpb0l6q, .table th.tinytable_css_2rklnabaxwut3cpb0l6q { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 1.0227481 4.648335 0.2251191 0.001 0.003 * Control vs Hot_control 1 1.3619424 5.771031 0.2650785 0.002 0.006 * Treatment vs Hot_control 1 0.5010202 2.206532 0.1211945 0.002 0.006 * Phylogenetic phylo_FMT2 &lt;- as.matrix(beta_q1p$S) phylo_FMT2 &lt;- as.dist(phylo_FMT2[rownames(phylo_FMT2) %in% samples_to_keep_FMT2, colnames(phylo_FMT2) %in% samples_to_keep_FMT2]) betadisper(phylo_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002880 0.0014398 0.3483 999 0.699 Residuals 24 0.099207 0.0041336 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.79800 0.589 Hot_control 0.79696 0.400 Treatment 0.60817 0.41749 adonis2(phylo_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(phylo_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xeif8qefmvbimigcj3y3, .table th.tinytable_css_xeif8qefmvbimigcj3y3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5rub4wlb7g8vbozhgbza, .table th.tinytable_css_5rub4wlb7g8vbozhgbza { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.1594363 0.2042241 3.079623 0.001 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(phylo_FMT2),] pairwise &lt;- pairwise.adonis(phylo_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_lz76lu17fcs1rzq806lo, .table th.tinytable_css_lz76lu17fcs1rzq806lo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ep72l6yt025lt975bu3f, .table th.tinytable_css_ep72l6yt025lt975bu3f { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.05927454 2.382025 0.1295845 0.024 0.072 Control vs Hot_control 1 0.11081709 4.043656 0.2017424 0.002 0.006 * Treatment vs Hot_control 1 0.06906280 2.722460 0.1454115 0.003 0.009 * NMDS beta_richness_nmds_FMT2 &lt;- richness_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_FMT2 &lt;- neutral_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_FMT2 &lt;- phylo_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_FMT2, beta_neutral_nmds_FMT2, beta_phylogenetic_nmds_FMT2, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 9.2.1.4 Differentially abundant MAGs 9.2.1.4.1 Warm vs Intervention physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;Population&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) Phyla of the significant MAGs in warm control ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) 9.2.1.4.2 Intervention vs cold control physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output_cold = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;type&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) 9.2.1.5 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.352 0.0223 2 Hot_control 0.350 0.0293 3 Treatment 0.346 0.0255 MCI_FMT2 &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT2&quot;) shapiro.test(MCI_FMT2$value) Shapiro-Wilk normality test data: MCI_FMT2$value W = 0.96248, p-value = 0.4203 res.aov &lt;- aov(value ~ type, data = MCI_FMT2) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00017 0.0000852 0.127 0.881 Residuals 24 0.01604 0.0006682 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 2 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0208 0.000494 0.0365 Biosynthesis Amino acid biosynthesis_Valine Valine 2 D0902 0.000494 0.0365 Degradation Antibiotic degradation_Carbapenem Carbapenem CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; "],["changes-after-fmt-compared-to-acclimation.html", "Chapter 10 Changes after FMT compared to acclimation 10.1 What is the trend of the microbiota in each type after FMT? 10.2 What is the effect of FMT and temperature on the GM after 1 week compared to acclimation? 10.3 What is the effect of FMT and temperature on the GM after 2 weeks caompared to acclimation?", " Chapter 10 Changes after FMT compared to acclimation load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 10.1 What is the trend of the microbiota in each type after FMT? 10.1.1 Alpha diversity label_map &lt;- c( &quot;Control&quot; = &quot;Cold-control&quot;, &quot;Treatment&quot; = &quot;Cold-intervention&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;, &quot;FMT2&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.7695) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 757.7 783.7 -367.8 735.7 68 Scaled residuals: Min 1Q Median 3Q Max -2.01194 -0.49654 0.06198 0.55787 1.90952 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.02586 0.1608 Number of obs: 79, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9089 0.1696 23.046 &lt;2e-16 *** typeHot_control 0.5568 0.2283 2.439 0.0147 * typeTreatment -0.1233 0.2297 -0.537 0.5916 time_pointFMT1 -0.3140 0.2167 -1.449 0.1473 time_pointFMT2 0.1487 0.2173 0.684 0.4937 typeHot_control:time_pointFMT1 -0.1155 0.2983 -0.387 0.6987 typeTreatment:time_pointFMT1 0.4309 0.3068 1.404 0.1602 typeHot_control:time_pointFMT2 -0.3876 0.2988 -1.297 0.1945 typeTreatment:time_pointFMT2 0.4093 0.2990 1.369 0.1710 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typHt_ typTrt t_FMT1 t_FMT2 tH_:_FMT1 tT:_FMT1 tH_:_FMT2 typHt_cntrl -0.741 typeTretmnt -0.721 0.535 tim_pntFMT1 -0.677 0.503 0.497 tim_pntFMT2 -0.702 0.520 0.507 0.532 typH_:_FMT1 0.496 -0.671 -0.362 -0.727 -0.389 typTr:_FMT1 0.482 -0.357 -0.664 -0.707 -0.378 0.515 typH_:_FMT2 0.515 -0.684 -0.370 -0.388 -0.730 0.516 0.276 typTr:_FMT2 0.498 -0.370 -0.686 -0.384 -0.719 0.280 0.511 0.524 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Control 3.85 0.1050 Inf 3.65 4.06 Hot_control 4.24 0.0996 Inf 4.05 4.44 Treatment 4.01 0.1030 Inf 3.81 4.21 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Control - Hot_control -0.389 0.144 Inf -2.711 0.0184 Control - Treatment -0.157 0.145 Inf -1.083 0.5246 Hot_control - Treatment 0.232 0.143 Inf 1.627 0.2342 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.05 0.0938 Inf 3.87 4.24 FMT1 3.84 0.0949 Inf 3.66 4.03 FMT2 4.21 0.0895 Inf 4.03 4.38 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - FMT1 0.209 0.123 Inf 1.700 0.2050 Acclimation - FMT2 -0.156 0.121 Inf -1.286 0.4028 FMT1 - FMT2 -0.365 0.122 Inf -2.997 0.0077 Results are averaged over the levels of: type Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates Neutral Modelq1n &lt;- nlme::lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 563.2664 587.9998 -270.6332 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.551076 9.160157 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.343055 3.603126 46 5.923483 0.0000 typeHot_control 23.258307 4.960549 24 4.688656 0.0001 typeTreatment -3.944072 4.960549 24 -0.795088 0.4344 time_pointFMT1 -3.983722 4.472618 46 -0.890691 0.3777 time_pointFMT2 2.374489 4.472618 46 0.530895 0.5980 typeHot_control:time_pointFMT1 -14.877819 6.216964 46 -2.393101 0.0208 typeTreatment:time_pointFMT1 11.253000 6.325237 46 1.779064 0.0818 typeHot_control:time_pointFMT2 -14.775497 6.216964 46 -2.376642 0.0217 typeTreatment:time_pointFMT2 20.108022 6.216964 46 3.234380 0.0023 Correlation: (Intr) typHt_ typTrt t_FMT1 t_FMT2 tH_:_FMT1 tT:_FMT1 tH_:_FMT2 typeHot_control -0.726 typeTreatment -0.726 0.528 time_pointFMT1 -0.663 0.481 0.481 time_pointFMT2 -0.663 0.481 0.481 0.534 typeHot_control:time_pointFMT1 0.477 -0.649 -0.346 -0.719 -0.384 typeTreatment:time_pointFMT1 0.469 -0.340 -0.638 -0.707 -0.378 0.509 typeHot_control:time_pointFMT2 0.477 -0.649 -0.346 -0.384 -0.719 0.518 0.272 typeTreatment:time_pointFMT2 0.477 -0.346 -0.649 -0.384 -0.719 0.276 0.509 0.518 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.1324340 -0.7088533 0.0456110 0.6569569 1.9681295 Number of Observations: 79 Number of Groups: 27 emmeans::emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 20.8 2.36 26 16.0 25.7 Hot_control 34.2 2.33 24 29.4 39.0 Treatment 27.3 2.36 24 22.4 32.2 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Hot_control -13.37 3.31 24 -4.038 0.0013 Control - Treatment -6.51 3.33 24 -1.952 0.1461 Hot_control - Treatment 6.86 3.31 24 2.073 0.1170 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 27.8 2.01 24 23.6 31.9 FMT1 22.6 2.01 24 18.4 26.7 FMT2 31.9 1.97 24 27.9 36.0 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 5.19 2.55 46 2.034 0.1156 Acclimation - FMT2 -4.15 2.52 46 -1.646 0.2372 FMT1 - FMT2 -9.34 2.52 46 -3.703 0.0016 Results are averaged over the levels of: type Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Phylogenetic Model_phylo &lt;- nlme::lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 269.7976 294.5311 -123.8988 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.4986226 1.145917 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.256251 0.4407611 46 11.925398 0.0000 typeHot_control 1.266332 0.6064636 24 2.088060 0.0476 typeTreatment 0.283689 0.6064636 24 0.467776 0.6442 time_pointFMT1 -0.837008 0.5590601 46 -1.497169 0.1412 time_pointFMT2 -0.481515 0.5590601 46 -0.861293 0.3935 typeHot_control:time_pointFMT1 -1.410952 0.7774021 46 -1.814958 0.0761 typeTreatment:time_pointFMT1 -0.545877 0.7906304 46 -0.690432 0.4934 typeHot_control:time_pointFMT2 -0.585100 0.7774021 46 -0.752635 0.4555 typeTreatment:time_pointFMT2 0.056099 0.7774021 46 0.072162 0.9428 Correlation: (Intr) typHt_ typTrt t_FMT1 t_FMT2 tH_:_FMT1 tT:_FMT1 tH_:_FMT2 typeHot_control -0.727 typeTreatment -0.727 0.528 time_pointFMT1 -0.676 0.492 0.492 time_pointFMT2 -0.676 0.492 0.492 0.533 typeHot_control:time_pointFMT1 0.486 -0.663 -0.353 -0.719 -0.383 typeTreatment:time_pointFMT1 0.478 -0.348 -0.652 -0.707 -0.377 0.509 typeHot_control:time_pointFMT2 0.486 -0.663 -0.353 -0.383 -0.719 0.517 0.271 typeTreatment:time_pointFMT2 0.486 -0.353 -0.663 -0.383 -0.719 0.276 0.509 0.517 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.81722823 -0.52018811 -0.06481484 0.55835817 2.23628404 Number of Observations: 79 Number of Groups: 27 emmeans::emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 4.82 0.280 26 4.24 5.39 Hot_control 5.42 0.276 24 4.85 5.99 Treatment 4.94 0.280 24 4.36 5.52 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Hot_control -0.601 0.393 24 -1.527 0.2963 Control - Treatment -0.120 0.396 24 -0.304 0.9505 Hot_control - Treatment 0.481 0.393 24 1.221 0.4525 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 5.77 0.245 24 5.27 6.28 FMT1 4.28 0.245 24 3.78 4.79 FMT2 5.12 0.241 24 4.62 5.61 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 1.489 0.319 46 4.666 0.0001 Acclimation - FMT2 0.658 0.316 46 2.085 0.1042 FMT1 - FMT2 -0.831 0.316 46 -2.635 0.0302 Results are averaged over the levels of: type Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates 10.1.1.1 Beta diversity Number of samples used samples_to_keep_post7 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post7 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) subset_meta_post7$time_point&lt;-as.factor(subset_meta_post7$time_point) subset_meta_post7$type&lt;-as.factor(subset_meta_post7$type) length(samples_to_keep_post7) [1] 79 Richness richness_post7 &lt;- as.matrix(beta_q0n$S) richness_post7 &lt;- as.dist(richness_post7[rownames(richness_post7) %in% samples_to_keep_post7, colnames(richness_post7) %in% samples_to_keep_post7]) betadisper(richness_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.06454 0.032268 4.9753 999 0.01 ** Residuals 76 0.49290 0.006485 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.0160000 0.697 Hot_control 0.0119513 0.002 Treatment 0.6817089 0.0035106 adonis2(richness_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(richness_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(richness_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_oydgv29n7n7c4hnrlw1m, .table th.tinytable_css_oydgv29n7n7c4hnrlw1m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fbrvn0jbx1bu9m4c05zg, .table th.tinytable_css_fbrvn0jbx1bu9m4c05zg { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 2 3.120806 0.11961754 5.546155 0.001 time_point 2 1.703776 0.06530413 3.027874 0.001 type:time_point 4 1.570884 0.06021051 1.395852 0.001 Residual 70 19.694403 0.75486782 NA NA Total 78 26.089870 1.00000000 NA NA subset_meta_post7_arrange &lt;- column_to_rownames(subset_meta_post7, &quot;Tube_code&quot;) subset_meta_post7_arrange&lt;-subset_meta_post7_arrange[labels(richness_post7),] pairwise &lt;- pairwise.adonis(richness_post7, subset_meta_post7_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_saaa50bcnqqbyzzegyym, .table th.tinytable_css_saaa50bcnqqbyzzegyym { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_lubi8dlkos2kcc237zay, .table th.tinytable_css_lubi8dlkos2kcc237zay { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.7820564 2.401526 0.04582931 0.001 0.003 * Control vs Hot_control 1 2.6071063 9.057490 0.15081366 0.001 0.003 * Treatment vs Hot_control 1 1.2773606 4.350043 0.07859150 0.001 0.003 * pairwise &lt;- pairwise.adonis(richness_post7, subset_meta_post7_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_w2hrsx3eetc4saimwygp, .table th.tinytable_css_w2hrsx3eetc4saimwygp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2vj1v9qnubv92v21uyku, .table th.tinytable_css_2vj1v9qnubv92v21uyku { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 1.1985353 3.576695 0.06675842 0.001 0.003 * Acclimation vs FMT2 1 0.7814316 2.468536 0.04616802 0.003 0.009 * FMT1 vs FMT2 1 0.5620083 1.802651 0.03413940 0.011 0.033 . Neutral neutral_post7 &lt;- as.matrix(beta_q1n$S) neutral_post7 &lt;- as.dist(neutral_post7[rownames(neutral_post7) %in% samples_to_keep_post7, colnames(neutral_post7) %in% samples_to_keep_post7]) betadisper(neutral_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.06738 0.033689 3.8309 999 0.024 * Residuals 76 0.66833 0.008794 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.2060000 0.173 Hot_control 0.1985046 0.005 Treatment 0.1611083 0.0069718 adonis2(neutral_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(neutral_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(neutral_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_6xcifuq86zmqt1xqaytt, .table th.tinytable_css_6xcifuq86zmqt1xqaytt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4rmfh7r6rhntzfhdu4jx, .table th.tinytable_css_4rmfh7r6rhntzfhdu4jx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 2 3.705559 0.14953527 7.609355 0.001 time_point 2 2.217656 0.08949199 4.553951 0.001 type:time_point 4 1.813192 0.07317011 1.861693 0.001 Residual 70 17.044094 0.68780262 NA NA Total 78 24.780501 1.00000000 NA NA subset_meta_post7_arrange &lt;- column_to_rownames(subset_meta_post7, &quot;Tube_code&quot;) subset_meta_post7_arrange&lt;-subset_meta_post7_arrange[labels(neutral_post7),] pairwise &lt;- pairwise.adonis(neutral_post7, subset_meta_post7$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_zwvur6di4c44bxgsadaf, .table th.tinytable_css_zwvur6di4c44bxgsadaf { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_rk4yvlbr3unzihir976c, .table th.tinytable_css_rk4yvlbr3unzihir976c { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 1.027801 3.463893 0.06478939 0.001 0.003 * Control vs Hot_control 1 3.120025 12.118158 0.19199163 0.001 0.003 * Treatment vs Hot_control 1 1.394947 5.015972 0.08954539 0.001 0.003 * pairwise &lt;- pairwise.adonis(neutral_post7, subset_meta_post7_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_zhxuvbtjw11nth15hl3f, .table th.tinytable_css_zhxuvbtjw11nth15hl3f { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_kjou93xljmx0uzri6877, .table th.tinytable_css_kjou93xljmx0uzri6877 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 1.6914939 5.559526 0.10006431 0.001 0.003 * Acclimation vs FMT2 1 0.9608387 3.212301 0.05925409 0.001 0.003 * FMT1 vs FMT2 1 0.6282036 2.174336 0.04089070 0.010 0.030 . Phylogenetic phylo_post7 &lt;- as.matrix(beta_q1p$S) phylo_post7 &lt;- as.dist(phylo_post7[rownames(phylo_post7) %in% samples_to_keep_post7, colnames(phylo_post7) %in% samples_to_keep_post7]) betadisper(phylo_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.05438 0.027192 2.1499 999 0.126 Residuals 76 0.96123 0.012648 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.718000 0.160 Hot_control 0.697512 0.084 Treatment 0.155309 0.083221 adonis2(phylo_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(phylo_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(phylo_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_gl3zj45a3vbg4ha3a16p, .table th.tinytable_css_gl3zj45a3vbg4ha3a16p { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e0cybdl02pq5jkrc4c8b, .table th.tinytable_css_e0cybdl02pq5jkrc4c8b { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 2 0.2941494 0.07500331 3.592254 0.001 time_point 2 0.5528857 0.14097688 6.752032 0.001 type:time_point 4 0.2088312 0.05324856 1.275159 0.152 Residual 70 2.8659522 0.73077126 NA NA Total 78 3.9218184 1.00000000 NA NA subset_meta_post7_arrange &lt;- column_to_rownames(subset_meta_post7, &quot;Tube_code&quot;) subset_meta_post7_arrange&lt;-subset_meta_post7_arrange[labels(phylo_post7),] pairwise &lt;- pairwise.adonis(phylo_post7, subset_meta_post7_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ehwgwkvn27xsj5ftmdds, .table th.tinytable_css_ehwgwkvn27xsj5ftmdds { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2znicvk31qjapmzvud4y, .table th.tinytable_css_2znicvk31qjapmzvud4y { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.03324557 0.6023122 0.01190286 0.649 1.000 Control vs Hot_control 1 0.22899071 6.3999219 0.11149705 0.001 0.003 * Treatment vs Hot_control 1 0.17684005 3.3769360 0.06210236 0.014 0.042 . pairwise &lt;- pairwise.adonis(phylo_post7, subset_meta_post7_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_hkaixiwjaoclyr9ipzml, .table th.tinytable_css_hkaixiwjaoclyr9ipzml { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4euvg4yxt6lzvyc2044v, .table th.tinytable_css_4euvg4yxt6lzvyc2044v { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 0.3794332 7.332180 0.12788943 0.001 0.003 * Acclimation vs FMT2 1 0.3351380 7.390585 0.12657152 0.001 0.003 * FMT1 vs FMT2 1 0.1178756 3.274037 0.06032418 0.005 0.015 . dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_richness_nmds_post7 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_neutral_nmds_post7 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_phylogenetic_nmds_post7 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post7, beta_neutral_nmds_post7, beta_phylogenetic_nmds_post7, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.2 What is the effect of FMT and temperature on the GM after 1 week compared to acclimation? 10.2.1 CI vs CC 10.2.1.1 Alpha diversity label_map &lt;- c( &quot;Control&quot; = &quot;Cold-control&quot;, &quot;Treatment&quot; = &quot;Cold-intervention&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type %in% c(&quot;Control&quot;,&quot;Treatment&quot;) &amp; time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(2.5327) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 329.2 338.4 -158.6 317.2 28 Scaled residuals: Min 1Q Median 3Q Max -1.4046 -0.7191 0.1331 0.6747 1.4330 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 2.062e-11 4.541e-06 Number of obs: 34, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9512 0.2275 17.368 &lt;2e-16 *** typeTreatment -0.1372 0.3132 -0.438 0.661 time_pointFMT1 -0.3225 0.3140 -1.027 0.304 typeTreatment:time_pointFMT1 0.4500 0.4435 1.015 0.310 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT1 typeTretmnt -0.726 tim_pntFMT1 -0.725 0.526 typTr:_FMT1 0.513 -0.706 -0.708 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Control 3.79 0.157 Inf 3.48 4.10 Treatment 3.88 0.157 Inf 3.57 4.18 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Control - Treatment -0.0878 0.222 Inf -0.396 0.6921 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 3.88 0.157 Inf 3.58 4.19 FMT1 3.79 0.157 Inf 3.48 4.09 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - FMT1 0.0975 0.222 Inf 0.440 0.6603 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 244.9928 253.4 -116.4964 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 6.116057 8.521967 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.027978 3.684717 16 5.706810 0.0000 typeTreatment -3.628995 5.079636 16 -0.714420 0.4853 time_pointFMT1 -3.668645 4.182131 14 -0.877219 0.3952 typeTreatment:time_pointFMT1 10.917012 5.914427 14 1.845828 0.0862 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.725 time_pointFMT1 -0.611 0.443 typeTreatment:time_pointFMT1 0.432 -0.582 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.79785802 -0.67295800 0.08387402 0.71606547 1.30935708 Number of Observations: 34 Number of Groups: 18 emmeans::emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 19.2 2.92 14 12.9 25.5 Treatment 21.0 2.92 14 14.8 27.3 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Treatment -1.83 4.13 14 -0.443 0.6646 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans::emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 19.2 2.54 16 13.8 24.6 FMT1 21.0 2.54 14 15.6 26.5 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 -1.79 2.96 14 -0.605 0.5547 Results are averaged over the levels of: type Degrees-of-freedom method: containment Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 125.282 133.6892 -56.64101 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 7.854299e-05 1.386163 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.227341 0.4900827 16 10.666243 0.0000 typeTreatment 0.312600 0.6735542 16 0.464105 0.6488 time_pointFMT1 -0.808097 0.6735542 14 -1.199751 0.2501 typeTreatment:time_pointFMT1 -0.541741 0.9525495 14 -0.568728 0.5786 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.728 time_pointFMT1 -0.728 0.529 typeTreatment:time_pointFMT1 0.514 -0.707 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.630942795 -0.368275262 0.004976243 0.364227875 2.050663052 Number of Observations: 34 Number of Groups: 18 emmeans::emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 4.82 0.337 14 4.10 5.55 Treatment 4.87 0.337 14 4.14 5.59 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Treatment -0.0417 0.476 14 -0.088 0.9314 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans::emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 5.38 0.337 16 4.67 6.10 FMT1 4.30 0.337 14 3.58 5.03 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 1.08 0.476 14 2.265 0.0399 Results are averaged over the levels of: type Degrees-of-freedom method: containment 10.2.1.2 Beta diversity Number of samples used samples_to_keep_post3 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post3 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) subset_meta_post3$time_point&lt;-as.factor(subset_meta_post3$time_point) subset_meta_post3$type&lt;-as.factor(subset_meta_post3$type) length(samples_to_keep_post3) [1] 34 Richness richness_post3 &lt;- as.matrix(beta_q0n$S) richness_post3 &lt;- as.dist(richness_post3[rownames(richness_post3) %in% samples_to_keep_post3, colnames(richness_post3) %in% samples_to_keep_post3]) betadisper(richness_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002424 0.0024241 0.4717 999 0.482 Residuals 32 0.164445 0.0051389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.47 Treatment 0.49714 adonis2(richness_post3 ~ type*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_bjj237h1ujgfoit8ot85, .table th.tinytable_css_bjj237h1ujgfoit8ot85 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9npf2p4vg4cag0zlb528, .table th.tinytable_css_9npf2p4vg4cag0zlb528 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 0.4269704 0.03612811 1.312996 0.001 time_point 1 1.1427754 0.09669595 3.514201 0.001 type:time_point 1 0.4928541 0.04170286 1.515598 0.050 Residual 30 9.7556341 0.82547308 NA NA Total 33 11.8182341 1.00000000 NA NA subset_meta_post3_arrange &lt;- column_to_rownames(subset_meta_post3, &quot;Tube_code&quot;) subset_meta_post3_arrange&lt;-subset_meta_post3_arrange[labels(richness_post3),] pairwise &lt;- pairwise.adonis(richness_post3, subset_meta_post3_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_hpt3qidh3e0ixv7gb56y, .table th.tinytable_css_hpt3qidh3e0ixv7gb56y { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_c7qkym03ffy1gew2ngji, .table th.tinytable_css_c7qkym03ffy1gew2ngji { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.4269704 1.199433 0.03612811 0.166 0.166 pairwise &lt;- pairwise.adonis(richness_post3, subset_meta_post3_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_rod2jlyl731pdbr4q2k4, .table th.tinytable_css_rod2jlyl731pdbr4q2k4 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_1tkaad58po1i58f84py3, .table th.tinytable_css_1tkaad58po1i58f84py3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 1.135334 3.400826 0.09606629 0.001 0.001 ** Neutral neutral_post3 &lt;- as.matrix(beta_q1n$S) neutral_post3 &lt;- as.dist(neutral_post3[rownames(neutral_post3) %in% samples_to_keep_post3, colnames(neutral_post3) %in% samples_to_keep_post3]) betadisper(neutral_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.019686 0.0196859 2.8068 999 0.109 Residuals 32 0.224435 0.0070136 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.1 Treatment 0.10361 adonis2(neutral_post3 ~ type, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ye0wdf0ea68472ccgcfl, .table th.tinytable_css_ye0wdf0ea68472ccgcfl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_o6mvipmkrjkfn20dsgt6, .table th.tinytable_css_o6mvipmkrjkfn20dsgt6 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 0.4361022 0.04050485 1.350872 1 Residual 32 10.3305628 0.95949515 NA NA Total 33 10.7666650 1.00000000 NA NA subset_meta_post3_arrange &lt;- column_to_rownames(subset_meta_post3, &quot;Tube_code&quot;) subset_meta_post3_arrange&lt;-subset_meta_post3_arrange[labels(neutral_post3),] pairwise &lt;- pairwise.adonis(neutral_post3, subset_meta_post3_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_y9l8vb3gul9divulxcx9, .table th.tinytable_css_y9l8vb3gul9divulxcx9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ik8gvddw0ym0spirzn6f, .table th.tinytable_css_ik8gvddw0ym0spirzn6f { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.4361022 1.350872 0.04050485 0.143 0.143 pairwise &lt;- pairwise.adonis(neutral_post3, subset_meta_post3_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_yjtca9k4s4io8e0978x1, .table th.tinytable_css_yjtca9k4s4io8e0978x1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5igokuh5vl0pu211a9zy, .table th.tinytable_css_5igokuh5vl0pu211a9zy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 1.683105 5.929324 0.1563256 0.001 0.001 ** Phylogenetic phylo_post3 &lt;- as.matrix(beta_q1p$S) phylo_post3 &lt;- as.dist(phylo_post3[rownames(phylo_post3) %in% samples_to_keep_post3, colnames(phylo_post3) %in% samples_to_keep_post3]) betadisper(phylo_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04697 0.046974 2.8076 999 0.112 Residuals 32 0.53540 0.016731 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.123 Treatment 0.10357 adonis2(phylo_post3 ~ type, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_bezt1vi2recj91xytbfo, .table th.tinytable_css_bezt1vi2recj91xytbfo { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6jtvf036dd9c4dtp7k3b, .table th.tinytable_css_6jtvf036dd9c4dtp7k3b { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.03710337 0.01720754 0.5602822 1 Residual 32 2.11912470 0.98279246 NA NA Total 33 2.15622808 1.00000000 NA NA subset_meta_post3_arrange &lt;- column_to_rownames(subset_meta_post3, &quot;Tube_code&quot;) subset_meta_post3_arrange&lt;-subset_meta_post3_arrange[labels(phylo_post3),] pairwise &lt;- pairwise.adonis(phylo_post3, subset_meta_post3_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_5ywg9npju8rg6aw2agkz, .table th.tinytable_css_5ywg9npju8rg6aw2agkz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_01vk2qzqchz8xnchkgdp, .table th.tinytable_css_01vk2qzqchz8xnchkgdp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.03710337 0.5602822 0.01720754 0.678 0.678 pairwise &lt;- pairwise.adonis(phylo_post3, subset_meta_post3_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_w3kurfcv3sgcep1fpuzc, .table th.tinytable_css_w3kurfcv3sgcep1fpuzc { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_02xritwdbeqv12r6y8xv, .table th.tinytable_css_02xritwdbeqv12r6y8xv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 0.3325691 5.835636 0.1542365 0.001 0.001 ** dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post3 ~ subset_meta_post3$time_point* subset_meta_post3$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post3, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post3$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post3$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post3$time_pointFMT1:subset_meta_post3$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_richness_nmds_post3 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post3 ~ subset_meta_post3$time_point* subset_meta_post3$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post3, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post3$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post3$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post3$time_pointFMT1:subset_meta_post3$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_neutral_nmds_post3 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post3 ~ subset_meta_post3$time_point* subset_meta_post3$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post3, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post3$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post3$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post3$time_pointFMT1:subset_meta_post3$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_phylogenetic_nmds_post3 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post3, beta_neutral_nmds_post3, beta_phylogenetic_nmds_post3, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.2.2 Functional differences CC from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 11 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0204 0.00370 0.0478 Biosynthesis Amino acid biosynthesis_Serine Serine 2 B0205 0.000165 0.0117 Biosynthesis Amino acid biosynthesis_Threonine Threonine 3 B0703 0.00370 0.0478 Biosynthesis Vitamin biosynthesis_Niacin (B3) Niacin (B3) 4 B0805 0.00156 0.0370 Biosynthesis Aromatic compound biosynthesis_Indole-3-acetate Indole-3-acetate 5 D0102 0.000329 0.0156 Degradation Lipid degradation_Fatty acid Fatty acid 6 D0212 0.000987 0.0350 Degradation Polysaccharide degradation_Arabinan Arabinan 7 D0304 0.00247 0.0438 Degradation Sugar degradation_D-Arabinose D-Arabinose 8 D0306 0.00156 0.0370 Degradation Sugar degradation_D-Xylose D-Xylose 9 D0308 0.00247 0.0438 Degradation Sugar degradation_L-Rhamnose L-Rhamnose 10 D0601 0.00370 0.0478 Degradation Nitrogen compound degradation_Nitrate Nitrate 11 D0708 0.000165 0.0117 Degradation Alcohol degradation_Phytol Phytol CI from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Treatment&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 2 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0710 0.0000823 0.0119 Biosynthesis Vitamin biosynthesis_Phylloquinone (K1) Phylloquinone (K1) 2 D0102 0.000576 0.0418 Degradation Lipid degradation_Fatty acid Fatty acid 10.2.3 CI vs WC 10.2.3.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=8))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.0429) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 338.8 348.1 -163.4 326.8 29 Scaled residuals: Min 1Q Median 3Q Max -1.85185 -0.65278 0.06667 0.54823 1.97668 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.315e-11 3.627e-06 Number of obs: 35, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.4697 0.1527 29.279 &lt; 2e-16 *** typeTreatment -0.6557 0.2186 -2.999 0.00271 ** time_pointFMT1 -0.4208 0.2174 -1.936 0.05292 . typeTreatment:time_pointFMT1 0.5484 0.3146 1.743 0.08131 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT1 typeTretmnt -0.698 tim_pntFMT1 -0.702 0.490 typTr:_FMT1 0.485 -0.695 -0.691 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Hot_control 4.26 0.109 Inf 4.05 4.47 Treatment 3.88 0.114 Inf 3.65 4.10 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Hot_control - Treatment 0.381 0.157 Inf 2.425 0.0153 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.14 0.109 Inf 3.93 4.36 FMT1 4.00 0.113 Inf 3.77 4.22 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - FMT1 0.147 0.157 Inf 0.932 0.3512 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta,) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 250.0982 258.7021 -119.0491 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.122922 8.546652 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 44.60136 3.321472 16 13.428192 0e+00 typeTreatment -27.20238 4.697271 16 -5.791103 0e+00 time_pointFMT1 -18.86154 4.028930 15 -4.681526 3e-04 typeTreatment:time_pointFMT1 26.15805 5.809237 15 4.502838 4e-04 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.707 time_pointFMT1 -0.606 0.429 typeTreatment:time_pointFMT1 0.421 -0.595 -0.694 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.903393212 -0.678106330 0.002306491 0.652929042 1.401732098 Number of Observations: 35 Number of Groups: 18 emmeans::emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Hot_control 35.2 2.64 15 29.5 40.8 Treatment 21.0 2.70 15 15.3 26.8 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Hot_control - Treatment 14.1 3.78 15 3.739 0.0020 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans::emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 31.0 2.35 16 26.0 36.0 FMT1 25.2 2.42 15 20.1 30.4 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 5.78 2.9 15 1.991 0.0650 Results are averaged over the levels of: type Degrees-of-freedom method: containment Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 124.0635 132.6674 -56.03174 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.0002455305 1.282332 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 6.522583 0.4274440 16 15.259503 0.0000 typeTreatment -0.982643 0.6044971 16 -1.625554 0.1236 time_pointFMT1 -2.247960 0.6044971 15 -3.718727 0.0021 typeTreatment:time_pointFMT1 0.898121 0.8681429 15 1.034531 0.3173 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.707 time_pointFMT1 -0.707 0.500 typeTreatment:time_pointFMT1 0.492 -0.696 -0.696 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.40177643 -0.54641173 -0.06022755 0.42683546 2.21670618 Number of Observations: 35 Number of Groups: 18 emmeans::emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Hot_control 5.40 0.302 15 4.75 6.04 Treatment 4.87 0.312 15 4.20 5.53 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Hot_control - Treatment 0.534 0.434 15 1.229 0.2379 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans::emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 6.03 0.302 16 5.39 6.67 FMT1 4.23 0.312 15 3.57 4.90 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 1.8 0.434 15 4.144 0.0009 Results are averaged over the levels of: type Degrees-of-freedom method: containment 10.2.3.2 Beta diversity Number of samples used samples_to_keep_post4 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post4 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) subset_meta_post4$time_point&lt;-as.factor(subset_meta_post4$time_point) subset_meta_post4$type&lt;-as.factor(subset_meta_post4$type) length(samples_to_keep_post4) [1] 35 Richness richness_post4 &lt;- as.matrix(beta_q0n$S) richness_post4 &lt;- as.dist(richness_post4[rownames(richness_post4) %in% samples_to_keep_post4, colnames(richness_post4) %in% samples_to_keep_post4]) betadisper(richness_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.076276 0.076276 19.518 999 0.001 *** Residuals 33 0.128967 0.003908 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.001 Treatment 0.00010134 adonis2(richness_post4 ~ type*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_vd1foe6mzngmllakkmef, .table th.tinytable_css_vd1foe6mzngmllakkmef { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_jep5puagywoskpj4hbij, .table th.tinytable_css_jep5puagywoskpj4hbij { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.1360754 0.09995918 4.050611 0.001 time_point 1 0.9251516 0.08140076 3.298575 0.001 type:time_point 1 0.6095926 0.05363586 2.173467 0.002 Residual 31 8.6945735 0.76500420 NA NA Total 34 11.3653932 1.00000000 NA NA subset_meta_post4_arrange &lt;- column_to_rownames(subset_meta_post4, &quot;Tube_code&quot;) subset_meta_post4_arrange&lt;-subset_meta_post4_arrange[labels(richness_post4),] pairwise &lt;- pairwise.adonis(richness_post4, subset_meta_post4_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qqtct33tzlzf8sktw6b8, .table th.tinytable_css_qqtct33tzlzf8sktw6b8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_mi9d8zqp7kmo6xt2dsfr, .table th.tinytable_css_mi9d8zqp7kmo6xt2dsfr { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Hot_control 1 1.136075 3.665004 0.09995918 0.001 0.001 ** pairwise &lt;- pairwise.adonis(richness_post4, subset_meta_post4_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_wyio3kow0nmjsvjytcxr, .table th.tinytable_css_wyio3kow0nmjsvjytcxr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_pmv9nf10g7vi96xdyomp, .table th.tinytable_css_pmv9nf10g7vi96xdyomp { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 0.9366646 2.963922 0.08241375 0.001 0.001 ** Neutral neutral_post4 &lt;- as.matrix(beta_q1n$S) neutral_post4 &lt;- as.dist(neutral_post4[rownames(neutral_post4) %in% samples_to_keep_post4, colnames(neutral_post4) %in% samples_to_keep_post4]) betadisper(neutral_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.087335 0.087335 15.924 999 0.002 ** Residuals 33 0.180987 0.005484 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.001 Treatment 0.00034565 adonis2(neutral_post4 ~ type, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z73j3yscsi20leldyjqh, .table th.tinytable_css_z73j3yscsi20leldyjqh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9z93kxxu9fx5om0z1z9m, .table th.tinytable_css_9z93kxxu9fx5om0z1z9m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.332543 0.1214599 4.562313 1 Residual 33 9.638511 0.8785401 NA NA Total 34 10.971054 1.0000000 NA NA subset_meta_post4_arrange &lt;- column_to_rownames(subset_meta_post4, &quot;Tube_code&quot;) subset_meta_post4_arrange&lt;-subset_meta_post4_arrange[labels(neutral_post4),] pairwise &lt;- pairwise.adonis(neutral_post4, subset_meta_post4_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_r96atewiuzc5l8otlg0f, .table th.tinytable_css_r96atewiuzc5l8otlg0f { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_g02zkhbzfhv7bwpk5765, .table th.tinytable_css_g02zkhbzfhv7bwpk5765 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Hot_control 1 1.332543 4.562313 0.1214599 0.001 0.001 ** pairwise &lt;- pairwise.adonis(neutral_post4, subset_meta_post4_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_gqg0x3y8rk6j7yhc1jd5, .table th.tinytable_css_gqg0x3y8rk6j7yhc1jd5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_51vcksctqhgclw77cdj9, .table th.tinytable_css_51vcksctqhgclw77cdj9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 1.291025 4.401211 0.1176756 0.001 0.001 ** Phylogenetic phylo_post4 &lt;- as.matrix(beta_q1p$S) phylo_post4 &lt;- as.dist(phylo_post4[rownames(phylo_post4) %in% samples_to_keep_post4, colnames(phylo_post4) %in% samples_to_keep_post4]) betadisper(phylo_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07659 0.076588 5.0159 999 0.035 * Residuals 33 0.50388 0.015269 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.036 Treatment 0.031971 adonis2(phylo_post4 ~ type, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kf06bby0601p2t0uxe7a, .table th.tinytable_css_kf06bby0601p2t0uxe7a { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ckh1tvlovyoppu61zsel, .table th.tinytable_css_ckh1tvlovyoppu61zsel { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.2070779 0.09373244 3.413088 1 Residual 33 2.0021670 0.90626756 NA NA Total 34 2.2092449 1.00000000 NA NA subset_meta_post4_arrange &lt;- column_to_rownames(subset_meta_post4, &quot;Tube_code&quot;) subset_meta_post4_arrange&lt;-subset_meta_post4_arrange[labels(phylo_post4),] pairwise &lt;- pairwise.adonis(phylo_post4, subset_meta_post4_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_de2beiorxtircwzinfaw, .table th.tinytable_css_de2beiorxtircwzinfaw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9hn5xnsr81hirgicfj3b, .table th.tinytable_css_9hn5xnsr81hirgicfj3b { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Hot_control 1 0.2070779 3.413088 0.09373244 0.012 0.012 . pairwise &lt;- pairwise.adonis(phylo_post4, subset_meta_post4_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xeqmddsr9tuqim5cbcxc, .table th.tinytable_css_xeqmddsr9tuqim5cbcxc { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_j71gebidr02n916jpan5, .table th.tinytable_css_j71gebidr02n916jpan5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT1 1 0.2895801 4.978027 0.1310765 0.002 0.002 * RDA #Richness cca_ord &lt;- capscale(formula = richness_post4 ~ subset_meta_post4$time_point* subset_meta_post4$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post4, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post4$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post4$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post4$time_pointFMT1:subset_meta_post4$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_richness_nmds_post4 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post4 ~ subset_meta_post4$time_point* subset_meta_post4$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post4, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post4$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post4$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post4$time_pointFMT1:subset_meta_post4$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_neutral_nmds_post4 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post4 ~ subset_meta_post4$time_point* subset_meta_post4$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post4, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post4$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post4$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post4$time_pointFMT1:subset_meta_post4$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_phylogenetic_nmds_post4 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post4, beta_neutral_nmds_post4, beta_phylogenetic_nmds_post4, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.2.3.3 Functional differences WC from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Hot_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; 10.3 What is the effect of FMT and temperature on the GM after 2 weeks caompared to acclimation? 10.3.1 CI vs CC 10.3.1.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type %in% c(&quot;Control&quot;,&quot;Treatment&quot;) &amp; time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.0875) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 342.9 352.2 -165.5 330.9 29 Scaled residuals: Min 1Q Median 3Q Max -1.7595 -0.2361 0.2110 0.4983 1.1980 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 6.519e-12 2.553e-06 Number of obs: 35, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9512 0.1816 21.756 &lt;2e-16 *** typeTreatment -0.1372 0.2502 -0.548 0.583 time_pointFMT2 0.1206 0.2491 0.484 0.628 typeTreatment:time_pointFMT2 0.4149 0.3469 1.196 0.232 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT2 typeTretmnt -0.726 tim_pntFMT2 -0.729 0.529 typTr:_FMT2 0.524 -0.721 -0.718 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Control 4.01 0.125 Inf 3.77 4.26 Treatment 4.08 0.121 Inf 3.85 4.32 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Control - Treatment -0.0702 0.173 Inf -0.405 0.6855 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 3.88 0.125 Inf 3.64 4.13 FMT2 4.21 0.120 Inf 3.98 4.45 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - FMT2 -0.328 0.173 Inf -1.892 0.0585 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 253.6069 262.2108 -120.8034 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.268167 9.858563 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.455542 3.670059 16 5.846103 0.0000 typeTreatment -4.056558 5.045308 16 -0.804026 0.4332 time_pointFMT2 2.262002 4.804331 15 0.470826 0.6445 typeTreatment:time_pointFMT2 20.220508 6.684284 15 3.025082 0.0085 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.727 time_pointFMT2 -0.697 0.507 typeTreatment:time_pointFMT2 0.501 -0.684 -0.719 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.7676771 -0.6504757 0.2922823 0.6462932 2.0120364 Number of Observations: 35 Number of Groups: 18 emmeans::emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 22.6 2.64 15 17.0 28.2 Treatment 28.6 2.57 15 23.2 34.1 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Treatment -6.05 3.68 15 -1.645 0.1208 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans::emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 19.4 2.52 16 14.1 24.8 FMT2 31.8 2.45 15 26.6 37.0 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT2 -12.4 3.34 15 -3.702 0.0021 Results are averaged over the levels of: type Degrees-of-freedom method: containment Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 133.508 142.1119 -60.75399 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.2974732 1.463985 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.233354 0.5281280 16 9.909252 0.0000 typeTreatment 0.306587 0.7258724 16 0.422370 0.6784 time_pointFMT2 -0.458617 0.7121982 15 -0.643946 0.5293 typeTreatment:time_pointFMT2 0.033201 0.9917181 15 0.033479 0.9737 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.728 time_pointFMT2 -0.715 0.521 typeTreatment:time_pointFMT2 0.514 -0.705 -0.718 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.403145672 -0.437916442 -0.005178256 0.313089271 1.956678742 Number of Observations: 35 Number of Groups: 18 emmeans::emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 5.00 0.370 15 4.22 5.79 Treatment 5.33 0.359 15 4.56 6.09 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Treatment -0.323 0.515 15 -0.627 0.5400 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans::emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 5.39 0.363 16 4.62 6.16 FMT2 4.94 0.352 15 4.19 5.70 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT2 0.442 0.496 15 0.891 0.3868 Results are averaged over the levels of: type Degrees-of-freedom method: containment 10.3.1.2 Beta diversity Number of samples used samples_to_keep_post5 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post5 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) subset_meta_post5$time_point&lt;-as.factor(subset_meta_post5$time_point) subset_meta_post5$type&lt;-as.factor(subset_meta_post5$type) length(samples_to_keep_post5) [1] 35 Richness richness_post5 &lt;- as.matrix(beta_q0n$S) richness_post5 &lt;- as.dist(richness_post5[rownames(richness_post5) %in% samples_to_keep_post5, colnames(richness_post5) %in% samples_to_keep_post5]) betadisper(richness_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004294 0.0042942 0.4761 999 0.52 Residuals 33 0.297625 0.0090189 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.524 Treatment 0.49501 adonis2(richness_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_es9sk58eyc793mm79cty, .table th.tinytable_css_es9sk58eyc793mm79cty { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_bi8m93o84u20safubb0z, .table th.tinytable_css_bi8m93o84u20safubb0z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.5174241 0.04775345 1.797587 0.001 time_point 1 0.9068994 0.08369841 3.150666 0.001 type:time_point 1 0.4878440 0.04502349 1.694822 0.028 Residual 31 8.9231562 0.82352465 NA NA Total 34 10.8353238 1.00000000 NA NA subset_meta_post5_arrange &lt;- column_to_rownames(subset_meta_post5, &quot;Tube_code&quot;) subset_meta_post5_arrange&lt;-subset_meta_post5_arrange[labels(richness_post5),] pairwise &lt;- pairwise.adonis(richness_post5, subset_meta_post5_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_36gwoi7d0jd9czih562z, .table th.tinytable_css_36gwoi7d0jd9czih562z { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2wi71scq62wni2vriqj1, .table th.tinytable_css_2wi71scq62wni2vriqj1 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.5174241 1.65489 0.04775345 0.022 0.022 . pairwise &lt;- pairwise.adonis(richness_post5, subset_meta_post5_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qb6ulj0y0ucxps82yxb3, .table th.tinytable_css_qb6ulj0y0ucxps82yxb3 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_i1rziswjsat4g9xgfq8g, .table th.tinytable_css_i1rziswjsat4g9xgfq8g { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT2 1 0.9000618 2.989558 0.08306737 0.001 0.001 ** Neutral neutral_post5 &lt;- as.matrix(beta_q1n$S) neutral_post5 &lt;- as.dist(neutral_post5[rownames(neutral_post5) %in% samples_to_keep_post5, colnames(neutral_post5) %in% samples_to_keep_post5]) betadisper(neutral_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.034255 0.034255 3.9748 999 0.063 . Residuals 33 0.284399 0.008618 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.058 Treatment 0.054506 adonis2(neutral_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_voayb0en1pw2p53el0dq, .table th.tinytable_css_voayb0en1pw2p53el0dq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_jwu0u4jty6a5801c270o, .table th.tinytable_css_jwu0u4jty6a5801c270o { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 0.6424540 0.06322634 2.589936 0.001 time_point 1 1.1894033 0.11705370 4.794863 0.001 type:time_point 1 0.6395258 0.06293816 2.578132 0.010 Residual 31 7.6897933 0.75678179 NA NA Total 34 10.1611764 1.00000000 NA NA subset_meta_post5_arrange &lt;- column_to_rownames(subset_meta_post5, &quot;Tube_code&quot;) subset_meta_post5_arrange&lt;-subset_meta_post5_arrange[labels(neutral_post5),] pairwise &lt;- pairwise.adonis(neutral_post5, subset_meta_post5_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ysnyru4hitti7mn475cw, .table th.tinytable_css_ysnyru4hitti7mn475cw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4dlg2zqy6rmecmpnecdk, .table th.tinytable_css_4dlg2zqy6rmecmpnecdk { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.642454 2.227293 0.06322634 0.007 0.007 * pairwise &lt;- pairwise.adonis(neutral_post5, subset_meta_post5_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_tn0w0583ahi7lj5e8mhw, .table th.tinytable_css_tn0w0583ahi7lj5e8mhw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_gwfegfsei82dxmf6l8be, .table th.tinytable_css_gwfegfsei82dxmf6l8be { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT2 1 1.172649 4.305202 0.1154049 0.001 0.001 ** Phylogenetic phylo_post5 &lt;- as.matrix(beta_q1p$S) phylo_post5 &lt;- as.dist(phylo_post5[rownames(phylo_post5) %in% samples_to_keep_post5, colnames(phylo_post5) %in% samples_to_keep_post5]) betadisper(phylo_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02670 0.026703 1.6775 999 0.185 Residuals 33 0.52532 0.015919 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.205 Treatment 0.20425 adonis2(phylo_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ug00iewoy6wmpe8a5u69, .table th.tinytable_css_ug00iewoy6wmpe8a5u69 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2zstuv9epnhktlvk7u1w, .table th.tinytable_css_2zstuv9epnhktlvk7u1w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.03644585 0.01867131 0.7636208 0.003 time_point 1 0.35441680 0.18156873 7.4258113 0.002 type:time_point 1 0.08154954 0.04177806 1.7086422 0.204 Residual 31 1.47955831 0.75798190 NA NA Total 34 1.95197051 1.00000000 NA NA subset_meta_post5_arrange &lt;- column_to_rownames(subset_meta_post5, &quot;Tube_code&quot;) subset_meta_post5_arrange&lt;-subset_meta_post5_arrange[labels(phylo_post5),] pairwise &lt;- pairwise.adonis(phylo_post5, subset_meta_post5_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_pa3j164r4vicekxadikl, .table th.tinytable_css_pa3j164r4vicekxadikl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0zyjhalwl5p5izo1f0en, .table th.tinytable_css_0zyjhalwl5p5izo1f0en { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.03644585 0.6278766 0.01867131 0.603 0.603 pairwise &lt;- pairwise.adonis(phylo_post5, subset_meta_post5_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_szdsm0bw4s11w3oz14t2, .table th.tinytable_css_szdsm0bw4s11w3oz14t2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_rd5ki6udjvykw07bmmvd, .table th.tinytable_css_rd5ki6udjvykw07bmmvd { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT2 1 0.3562316 7.366895 0.1824984 0.001 0.001 ** dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post5 ~ subset_meta_post5$time_point* subset_meta_post5$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post5, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post5$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post5$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post5$time_pointFMT2:subset_meta_post5$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_richness_nmds_post5 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post5 ~ subset_meta_post5$time_point* subset_meta_post5$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post5, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post5$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post5$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post5$time_pointFMT2:subset_meta_post5$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_neutral_nmds_post5 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post5 ~ subset_meta_post5$time_point* subset_meta_post5$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post5, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post5$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post5$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post5$time_pointFMT2:subset_meta_post5$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_phylogenetic_nmds_post5 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post5, beta_neutral_nmds_post5, beta_phylogenetic_nmds_post5, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.3.1.3 Functional differences CC from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; CI from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Treatment&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 17 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0103 0.000787 0.0230 Biosynthesis Nucleic acid biosynthesis_UDP/UTP UDP/UTP 2 B0214 0.000494 0.0230 Biosynthesis Amino acid biosynthesis_Glutamate Glutamate 3 D0102 0.000782 0.0230 Degradation Lipid degradation_Fatty acid Fatty acid 4 D0205 0.00399 0.0448 Degradation Polysaccharide degradation_Pectin Pectin 5 D0210 0.00123 0.0234 Degradation Polysaccharide degradation_Beta-mannan Beta-mannan 6 D0308 0.00276 0.0366 Degradation Sugar degradation_L-Rhamnose L-Rhamnose 7 D0512 0.000494 0.0230 Degradation Amino acid degradation_Histidine Histidine 8 D0513 0.00564 0.0484 Degradation Amino acid degradation_Tryptophan Tryptophan 9 D0601 0.000494 0.0230 Degradation Nitrogen compound degradation_Nitrate Nitrate 10 D0613 0.00564 0.0484 Degradation Nitrogen compound degradation_Taurine Taurine 11 D0706 0.00564 0.0484 Degradation Alcohol degradation_Ethylene glycol Ethylene glycol 12 D0708 0.00185 0.0270 Degradation Alcohol degradation_Phytol Phytol 13 D0801 0.00145 0.0234 Degradation Xenobiotic degradation_Toluene Toluene 14 D0802 0.00145 0.0234 Degradation Xenobiotic degradation_Xylene Xylene 15 D0901 0.00564 0.0484 Degradation Antibiotic degradation_Penicillin Penicillin 16 D0902 0.00108 0.0234 Degradation Antibiotic degradation_Carbapenem Carbapenem 17 S0105 0.00399 0.0448 Structure Cellular structure_Lipopolysaccharide Lipopolysaccharide 10.3.2 CI vs WC 10.3.2.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=8))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) emmeans(Modelq0GLMMNB, pairwise ~ type) emmeans(Modelq0GLMMNB, pairwise ~ time_point) Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 255.5098 264.3042 -121.7549 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.317597 9.38306 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 44.60136 3.158373 16 14.121626 0.0000 typeTreatment -27.20238 4.466614 16 -6.090157 0.0000 time_pointFMT2 -12.40101 4.423217 16 -2.803618 0.0127 typeTreatment:time_pointFMT2 34.88352 6.255373 16 5.576569 0.0000 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.707 time_pointFMT2 -0.700 0.495 typeTreatment:time_pointFMT2 0.495 -0.700 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.1054551 -0.5575213 0.2345834 0.5912103 2.0213400 Number of Observations: 36 Number of Groups: 18 emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Hot_control 38.4 2.25 16 33.6 43.2 Treatment 28.6 2.25 16 23.9 33.4 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Hot_control - Treatment 9.76 3.19 16 3.061 0.0075 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 31 2.23 16 26.3 35.7 FMT2 36 2.23 16 31.3 40.8 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT2 -5.04 3.13 16 -1.612 0.1266 Results are averaged over the levels of: type Degrees-of-freedom method: containment Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 132.8692 141.6636 -60.43459 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7604222 1.204042 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 6.522583 0.4746882 16 13.740774 0.0000 typeTreatment -0.982643 0.6713105 16 -1.463768 0.1626 time_pointFMT2 -1.066614 0.5675911 16 -1.879195 0.0786 typeTreatment:time_pointFMT2 0.641199 0.8026950 16 0.798807 0.4361 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.707 time_pointFMT2 -0.598 0.423 typeTreatment:time_pointFMT2 0.423 -0.598 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.90560105 -0.54341938 -0.06251794 0.39498845 1.94321495 Number of Observations: 36 Number of Groups: 18 emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Hot_control 5.99 0.381 16 5.18 6.80 Treatment 5.33 0.381 16 4.52 6.13 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Hot_control - Treatment 0.662 0.538 16 1.230 0.2364 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 6.03 0.336 16 5.32 6.74 FMT2 5.29 0.336 16 4.57 6.00 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT2 0.746 0.401 16 1.859 0.0816 Results are averaged over the levels of: type Degrees-of-freedom method: containment 10.3.2.2 Beta diversity Number of samples used samples_to_keep_post6 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post6 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) subset_meta_post6$time_point&lt;-as.factor(subset_meta_post6$time_point) subset_meta_post6$type&lt;-as.factor(subset_meta_post6$type) length(samples_to_keep_post6) [1] 36 Richness richness_post6 &lt;- as.matrix(beta_q0n$S) richness_post6 &lt;- as.dist(richness_post6[rownames(richness_post6) %in% samples_to_keep_post6, colnames(richness_post6) %in% samples_to_keep_post6]) betadisper(richness_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.054351 0.054351 9.1422 999 0.004 ** Residuals 34 0.202132 0.005945 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.006 Treatment 0.0047271 adonis2(richness_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_sjrhrr6ffwiso9rwj9wr, .table th.tinytable_css_sjrhrr6ffwiso9rwj9wr { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4nnzfgqqmqw9vyjg9eq3, .table th.tinytable_css_4nnzfgqqmqw9vyjg9eq3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.2570893 0.11659822 4.856166 0.001 time_point 1 0.6574224 0.06097760 2.539639 0.002 type:time_point 1 0.5831993 0.05409322 2.252913 0.004 Residual 32 8.2836650 0.76833097 NA NA Total 35 10.7813760 1.00000000 NA NA subset_meta_post6_arrange &lt;- column_to_rownames(subset_meta_post6, &quot;Tube_code&quot;) subset_meta_post6_arrange&lt;-subset_meta_post6_arrange[labels(richness_post6),] pairwise &lt;- pairwise.adonis(richness_post6, subset_meta_post6_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_n4ymsgv0idp9qj2u0faw, .table th.tinytable_css_n4ymsgv0idp9qj2u0faw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4t9axzfosh6q0k36ttgi, .table th.tinytable_css_4t9axzfosh6q0k36ttgi { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Hot_control 1 1.257089 4.487584 0.1165982 0.001 0.001 ** pairwise &lt;- pairwise.adonis(richness_post6, subset_meta_post6_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_pfnsvzp5xl3w1yr5vuu3, .table th.tinytable_css_pfnsvzp5xl3w1yr5vuu3 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_12q7sc4vb479y9lw2ois, .table th.tinytable_css_12q7sc4vb479y9lw2ois { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT2 1 0.6574224 2.207869 0.0609776 0.003 0.003 * Neutral neutral_post6 &lt;- as.matrix(beta_q1n$S) neutral_post6 &lt;- as.dist(neutral_post6[rownames(neutral_post6) %in% samples_to_keep_post6, colnames(neutral_post6) %in% samples_to_keep_post6]) betadisper(neutral_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.078328 0.078328 12.006 999 0.001 *** Residuals 34 0.221814 0.006524 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.005 Treatment 0.0014541 adonis2(neutral_post6 ~ type, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_k074zd9fqdotigd4jkf1, .table th.tinytable_css_k074zd9fqdotigd4jkf1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_dpwz591pj8m88nr7bks2, .table th.tinytable_css_dpwz591pj8m88nr7bks2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.325563 0.1261942 4.910249 1 Residual 34 9.178585 0.8738058 NA NA Total 35 10.504148 1.0000000 NA NA subset_meta_post6_arrange &lt;- column_to_rownames(subset_meta_post6, &quot;Tube_code&quot;) subset_meta_post6_arrange&lt;-subset_meta_post6_arrange[labels(neutral_post6),] pairwise &lt;- pairwise.adonis(neutral_post6, subset_meta_post6_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_mx8ptiiq5l0ir4qqjsea, .table th.tinytable_css_mx8ptiiq5l0ir4qqjsea { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dc5jrqo7788wcu2rm9q1, .table th.tinytable_css_dc5jrqo7788wcu2rm9q1 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Hot_control 1 1.325563 4.910249 0.1261942 0.001 0.001 ** pairwise &lt;- pairwise.adonis(neutral_post6, subset_meta_post6_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_m2hfeh57nr3hze18km6t, .table th.tinytable_css_m2hfeh57nr3hze18km6t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_cdz9x8h1m3hv0tlsjcpl, .table th.tinytable_css_cdz9x8h1m3hv0tlsjcpl { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT2 1 0.9072453 3.214197 0.0863702 0.002 0.002 * Phylogenetic phylo_post6 &lt;- as.matrix(beta_q1p$S) phylo_post6 &lt;- as.dist(phylo_post6[rownames(phylo_post6) %in% samples_to_keep_post6, colnames(phylo_post6) %in% samples_to_keep_post6]) betadisper(phylo_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04938 0.049381 3.8729 999 0.056 . Residuals 34 0.43351 0.012750 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.04 Treatment 0.057271 adonis2(phylo_post6 ~ type, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_we97hwho1fyio2v78l1i, .table th.tinytable_css_we97hwho1fyio2v78l1i { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0qsjmwnv2s68xdmjyj49, .table th.tinytable_css_0qsjmwnv2s68xdmjyj49 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.1600877 0.08395907 3.116245 1 Residual 34 1.7466474 0.91604093 NA NA Total 35 1.9067351 1.00000000 NA NA subset_meta_post6_arrange &lt;- column_to_rownames(subset_meta_post6, &quot;Tube_code&quot;) subset_meta_post6_arrange&lt;-subset_meta_post6_arrange[labels(phylo_post6),] pairwise &lt;- pairwise.adonis(phylo_post6, subset_meta_post6_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_kl4eop51kkzjw15n2zlr, .table th.tinytable_css_kl4eop51kkzjw15n2zlr { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_25bzki2esedaxz3ssthz, .table th.tinytable_css_25bzki2esedaxz3ssthz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment vs Hot_control 1 0.1600877 3.116245 0.08395907 0.016 0.016 . pairwise &lt;- pairwise.adonis(phylo_post6, subset_meta_post6_arrange$time_point, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_n2tzajg03t0opbw5dxkf, .table th.tinytable_css_n2tzajg03t0opbw5dxkf { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4yrgazkzkz9zasgbn9r8, .table th.tinytable_css_4yrgazkzkz9zasgbn9r8 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Acclimation vs FMT2 1 0.2882491 6.055333 0.1511742 0.001 0.001 ** dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post6 ~ subset_meta_post6$time_point* subset_meta_post6$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post6, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post6$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post6$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post6$time_pointFMT2:subset_meta_post6$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_richness_nmds_post6 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post6 ~ subset_meta_post6$time_point* subset_meta_post6$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post6, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post6$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post6$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post6$time_pointFMT2:subset_meta_post6$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_neutral_nmds_post6 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post6 ~ subset_meta_post6$time_point* subset_meta_post6$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post6, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post6$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post6$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post6$time_pointFMT2:subset_meta_post6$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_phylogenetic_nmds_post6 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post6, beta_neutral_nmds_post6, beta_phylogenetic_nmds_post6, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.3.2.3 Functional differences WC from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Hot_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
=======
[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1,Carlos Cabido2, Kevin Kohl3, Antton Alberdi4 and Ostaizka Aizpurua5 Last update: 2025-03-04 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(lme4) library(emmeans) library(UpSetR) library(ANCOMBC) #library(MASS) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Pittsburgh, kkohl78@gmail.com↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!time_point %in% c(&quot;Antibiotics&quot;,&quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) %&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw)%&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Two samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD91&quot;, &quot;AC85&quot;) # Columns to exclude (&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, ) read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Coverage_table genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code %in% colnames(read_counts)) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats &lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data_27022025.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data_27022025.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 3335496930 data_stats$raw_reads %&gt;% mean() [1] 31466952 data_stats$raw_reads %&gt;% sd() [1] 14473977 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.471 0.140 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata[c(1,7, 10)], by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_lp7hr1zn65knu3467xnd, .table th.tinytable_css_lp7hr1zn65knu3467xnd { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0t67s12x0az4vwgurib0, .table th.tinytable_css_0t67s12x0az4vwgurib0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point type AC79 1.0000000 Acclimation Control AC80 1.0000000 Acclimation Treatment AC81 0.9813013 Acclimation Treatment AC82 0.7490771 Acclimation Treatment AC83 1.0000000 Acclimation Control AC84 1.0000000 Acclimation Control AC86 0.8800275 Acclimation Control AC87 0.9672854 Acclimation Treatment AC88 0.3142108 Acclimation Control AC89 0.9338962 Acclimation Treatment AC90 1.0000000 Acclimation Control AC91 1.0000000 Acclimation Control AC92 1.0000000 Acclimation Control AC93 1.0000000 Acclimation Treatment AC94 0.9159348 Acclimation Treatment AC95 0.9239904 Acclimation Treatment AC96 0.9425962 Acclimation Treatment AC97 0.9394886 Acclimation Hot_control AC98 1.0000000 Acclimation Hot_control AC99 1.0000000 Acclimation Hot_control AD01 1.0000000 Acclimation Hot_control AD02 1.0000000 Acclimation Hot_control AD03 1.0000000 Acclimation Hot_control AD04 0.8896057 Acclimation Hot_control AD05 1.0000000 Acclimation Hot_control AD07 0.9515379 Acclimation Hot_control AD74 0.9017271 FMT1 Control AD75 1.0000000 FMT1 Treatment AD76 0.9862581 FMT1 Treatment AD77 0.8963376 FMT1 Treatment AD78 1.0000000 FMT1 Treatment AD79 1.0000000 FMT1 Control AD80 0.8808155 FMT1 Treatment AD81 1.0000000 FMT1 Control AD82 1.0000000 FMT1 Control AD83 1.0000000 FMT1 Treatment AD84 1.0000000 FMT1 Treatment AD85 1.0000000 FMT1 Control AD86 0.9889084 FMT1 Control AD87 1.0000000 FMT1 Control AD88 1.0000000 FMT1 Treatment AD89 0.9562489 FMT1 Control AD90 1.0000000 FMT1 Control AD93 1.0000000 FMT1 Hot_control AD94 0.7947750 FMT1 Hot_control AD95 0.9506977 FMT1 Hot_control AD96 0.9171413 FMT1 Hot_control AD97 0.9257685 FMT1 Hot_control AD98 0.9048349 FMT1 Hot_control AD99 0.9966152 FMT1 Hot_control AE01 1.0000000 FMT1 Hot_control AE02 1.0000000 FMT1 Hot_control AE04 1.0000000 FMT2 Treatment AE05 1.0000000 FMT2 Treatment AE06 1.0000000 FMT2 Control AE07 0.7797794 FMT2 Control AE08 1.0000000 FMT2 Control AE09 1.0000000 FMT2 Control AE91 0.9259146 FMT2 Treatment AE92 1.0000000 FMT2 Control AE93 1.0000000 FMT2 Control AE94 0.9152960 FMT2 Treatment AE95 1.0000000 FMT2 Treatment AE96 0.7786112 FMT2 Treatment AE97 0.9365037 FMT2 Control AE98 1.0000000 FMT2 Control AE99 0.8513354 FMT2 Treatment AF01 0.9046369 FMT2 Treatment AF02 1.0000000 FMT2 Control AF03 0.9030087 FMT2 Treatment AF04 1.0000000 FMT2 Hot_control AF05 1.0000000 FMT2 Hot_control AF06 1.0000000 FMT2 Hot_control AF07 0.9526443 FMT2 Hot_control AF08 1.0000000 FMT2 Hot_control AF09 1.0000000 FMT2 Hot_control AF10 0.9716162 FMT2 Hot_control AF11 0.9654152 FMT2 Hot_control AF13 0.8818742 FMT2 Hot_control AFU87 0.8810513 Wild Control AFU88 0.8317800 Wild Treatment AFU91 0.8923699 Wild Treatment AFU92 0.8094776 Wild Treatment AFU93 0.8517368 Wild Control AFU94 0.8325385 Wild Treatment AFU95 0.8419270 Wild Treatment AFU96 0.8326820 Wild Control AFU97 0.8107271 Wild Treatment AFU98 0.7506522 Wild Control AFU99 0.8582371 Wild Treatment AFV01 0.9331539 Wild Treatment AFV02 0.8316460 Wild Treatment AFV03 0.8752591 Wild Control AFV04 0.9180285 Wild Control AFV05 1.0000000 Wild Control AFV06 1.0000000 Wild Control AFV07 0.8460805 Wild Control AFV08 0.7497043 Wild Hot_control AFV09 0.5412999 Wild Hot_control AFV10 0.8002499 Wild Hot_control AFV11 0.8225298 Wild Hot_control AFV12 0.7925988 Wild Hot_control AFV14 0.8106269 Wild Hot_control AFV15 0.9691106 Wild Hot_control AFV16 0.8218990 Wild Hot_control AFV17 0.8091152 Wild Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data_27022025.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample # transplants_metadata &lt;- sample_metadata %&gt;% # mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) # transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, # &quot;_&quot;, # transplants_metadata$individual) merged_data &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome), ~ . / sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes( x = sample, y = count, fill = phylum, group = phylum )) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat = &quot;identity&quot;, colour = &quot;white&quot;, linewidth = 0.1) + #plot stacked bars with white borders scale_fill_manual(values = phylum_colors) + facet_nested(. ~ time_point + type , scales = &quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill = &quot;Phylum&quot;, y = &quot;Relative abundance&quot;, x = &quot;Sample&quot;) + theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), strip.background = element_rect(fill =&quot;lightgrey&quot;), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.1.1 Wild samples merged_data %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% ggplot(aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Population, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), strip.background = element_rect(fill =&quot;lightgrey&quot;), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) 5.1.2.1 Cold and wet population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_hxoz95aevlkhwp2salnh, .table th.tinytable_css_hxoz95aevlkhwp2salnh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9sj4nu1760wtc28cpufd, .table th.tinytable_css_9sj4nu1760wtc28cpufd { border-bottom: solid #d3d8dc 0.1em; } phylum total p__Bacteroidota 41.93±15.4 p__Bacillota_A 33.96±16.7 p__Bacillota 5.73±4.73 p__Campylobacterota 5.39±4.64 p__Verrucomicrobiota 4.36±3.06 p__Pseudomonadota 3.75±3.76 p__Desulfobacterota 2.31±1.6 p__Bacillota_C 0.85±0.82 p__Cyanobacteriota 0.64±0.83 p__Bacillota_B 0.5±0.77 p__Fusobacteriota 0.37±1.28 p__Spirochaetota 0.12±0.35 p__Actinomycetota 0.09±0.22 5.1.2.2 Hot and dry population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_qe2xj4hj7k0issic1cey, .table th.tinytable_css_qe2xj4hj7k0issic1cey { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7lcgh7q5aar9mxoeboxz, .table th.tinytable_css_7lcgh7q5aar9mxoeboxz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum total p__Bacillota_A 33.9±16.17 p__Bacteroidota 27.63±17.64 p__Campylobacterota 13.53±20.98 p__Pseudomonadota 10.92±9.94 p__Bacillota 6.09±7.66 p__Spirochaetota 2.66±2.78 p__Desulfobacterota 1.69±1.85 p__Fusobacteriota 1.34±1.73 p__Bacillota_B 0.76±0.73 p__Bacillota_C 0.73±0.5 p__Cyanobacteriota 0.52±0.65 p__Chlamydiota 0.12±0.18 p__Verrucomicrobiota 0.06±0.1 p__Elusimicrobiota 0.05±0.14 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["calculations.html", "Chapter 6 Calculations 6.1 Alpha diversity 6.2 Beta diversity 6.3 Phyloseq object 6.4 Functional data", " Chapter 6 Calculations load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/beta_27022025.Rdata&quot;) 6.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) 6.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) 6.3 Phyloseq object #Phyloseq object count_phy &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% otu_table(., taxa_are_rows=T) sample_info_tab_phy &lt;- sample_metadata%&gt;% column_to_rownames(var=&quot;Tube_code&quot;)%&gt;% sample_data() TAX &lt;- genome_metadata%&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% select(1:7)%&gt;% as.matrix()%&gt;% tax_table() tree &lt;- phy_tree(genome_tree) physeq_all = phyloseq(count_phy, TAX, sample_info_tab_phy, tree) 6.4 Functional data # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) uniqueGIFT_db &lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% left_join(sample_metadata[c(1, 7, 10)], by = &quot;Tube_code&quot;) save(richness, neutral, phylogenetic, alpha_div, physeq_all, beta_q0n, beta_q1n, beta_q1p, GIFTs_elements_filtered, GIFTs_elements_community, GIFTs_functions_community, GIFTs_domains_community, element_gift, uniqueGIFT_db, file = &quot;data/calculations_28022025.Rdata&quot;) "],["is-the-gm-of-cold--vs-warm-adapted-populations-similar-in-the-wild.html", "Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? 7.1 Shared and unique MAGs 7.2 Shapiro test 7.3 Alpha diversity 7.4 Beta diversity 7.5 Differential abundance 7.6 Functional capacity", " Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) #load(&quot;data/ancombc_04032025.Rdata&quot;) 7.1 Shared and unique MAGs locationcolors=c(&#39;#c4d7d1&#39;,&#39;#e08683&#39;) subset_meta &lt;- sample_metadata %&gt;% filter(time_point==&quot;Wild&quot;) genome_counts_rel_fil&lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;, subset_meta$Tube_code))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) genome_counts_rel_pa=1*(genome_counts_rel_fil&gt;0) table_upset_analysis_cont=t(aggregate(t(genome_counts_rel_pa),by=list(subset_meta$Population),FUN=sum)[,-1]) colnames(table_upset_analysis_cont)=levels(as.factor(subset_meta$Population)) table_upset_analysis=(table_upset_analysis_cont&gt;0)*1 table_upset_analysis=data.frame(table_upset_analysis) table_upset_analysis=apply(table_upset_analysis,2,as.integer) rownames(table_upset_analysis) &lt;- rownames(genome_counts_rel_pa) upset(as.data.frame(table_upset_analysis), keep.order = T, sets = rev(c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;)), sets.bar.color= rev(locationcolors), mb.ratio = c(0.55, 0.45), order.by = &quot;freq&quot;) 7.2 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.03999359 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2966492 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.5784544 7.3 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;))) %&gt;% filter(metric==&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;wilcox.test&quot;, size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 7.4 Beta diversity Number of samples used samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) length(samples_to_keep) [1] 27 Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.974 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.972 Hot_dry 0.97302 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_x1id8px5c4kprpzaweyu, .table th.tinytable_css_x1id8px5c4kprpzaweyu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ubt92mn0bkyhdcju335z, .table th.tinytable_css_ubt92mn0bkyhdcju335z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.945 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.945 Hot_dry 0.94763 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_edpjoj3el2chcytyn2r9, .table th.tinytable_css_edpjoj3el2chcytyn2r9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8qc5nle60ond2htsn5hx, .table th.tinytable_css_8qc5nle60ond2htsn5hx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.129 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.132 Hot_dry 0.12705 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_iikub25ehkl40rnvgr7k, .table th.tinytable_css_iikub25ehkl40rnvgr7k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ew1jl6ddi5a3tw87cilo, .table th.tinytable_css_ew1jl6ddi5a3tw87cilo { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA NMDS beta_q0n_nmds_wild &lt;- richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1n_nmds_wild &lt;- neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1p_nmds_wild &lt;- phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_q0n_nmds_wild, beta_q1n_nmds_wild, beta_q1p_nmds_wild, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 7.5 Differential abundance physeq_wild &lt;- subset_samples(physeq_all, time_point == &quot;Wild&quot;) physeq_wild &lt;- prune_taxa(taxa_sums(physeq_wild)&gt;0, physeq_wild) 7.5.1 Phylum ancom_rand_output_wild_phylum = ancombc2(data = physeq_wild, assay_name = &quot;counts&quot;, tax_level = &quot;phylum&quot;, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;Population&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) ancom_rand_output_wild_phylum$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) taxon lfc_PopulationHot_dry p_PopulationHot_dry 1 p__Verrucomicrobiota -2.5128949 6.172660e-07 2 p__Pseudomonadota 1.3793700 5.156499e-03 3 p__Fusobacteriota 1.4285919 1.055620e-02 4 p__Bacillota_B 0.9904266 1.350476e-02 7.5.2 MAG level ancom_rand_output = ancombc2(data = physeq_wild, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;Population&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) Structural zeros # Extract structural zeros structural_zeros &lt;- ancom_rand_output$zero_ind # Convert to a data frame for better readability structural_zeros_df &lt;- as.data.frame(structural_zeros) %&gt;% column_to_rownames(., &quot;taxon&quot;) # Find taxa that are structural zeros in at least one group structural_zero_taxa &lt;- rownames(structural_zeros_df)[apply(structural_zeros_df, 1, any)] length(structural_zero_taxa) [1] 168 Differentially abundant MAGs taxonomy &lt;- data.frame(physeq_wild@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) %&gt;% dplyr::arrange(p_PopulationHot_dry) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_PopulationHot_dry) ancombc_rand_table_mag taxon lfc_PopulationHot_dry p_PopulationHot_dry domain phylum class order 1 AH1_2nd_16:bin_000008 -2.3169976 1.095165e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 2 AH1_2nd_14:bin_000052 -1.9338966 2.652123e-06 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 3 AH1_2nd_11:bin_000008 -1.6078296 2.983262e-04 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Verrucomicrobiales 4 AH1_2nd_5:bin_000001 -1.2294521 1.954261e-03 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 5 AH1_2nd_10:bin_000007 -1.1638531 4.164494e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 6 AH1_2nd_19:bin_000055 -1.1535004 3.690569e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 7 AH1_2nd_1:bin_000015 -1.1156016 1.737148e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 8 AH1_2nd_6:bin_000046 -1.1074881 3.276440e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 9 AH1_2nd_15:bin_000043 -1.0795980 2.056989e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 10 AH1_2nd_20:bin_000004 -1.0699685 4.022735e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 11 AH1_2nd_9:bin_000002 -1.0564580 1.102335e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 12 AH1_2nd_1:bin_000039 -1.0301421 3.733585e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 13 LI1_2nd_4:bin_000026 -0.9769547 6.418113e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 14 AH1_2nd_12:bin_000012 -0.9171823 6.135156e-03 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales 15 AH1_2nd_1:bin_000003 -0.9008034 1.465243e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales 16 AH1_2nd_16:bin_000011 -0.8882510 1.505088e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 17 AH1_2nd_12:bin_000018 -0.8857429 7.274891e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 18 AH1_2nd_1:bin_000023 -0.7855826 2.370175e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 19 AH1_2nd_15:bin_000004 -0.7407240 1.449541e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 20 AH1_2nd_8:bin_000056 -0.7178242 2.561905e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 21 LI1_2nd_7:bin_000042 -0.6526278 4.797634e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 22 AH1_2nd_7:bin_000011 0.7116366 3.680000e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 23 AH1_2nd_7:bin_000055 0.8505725 4.653353e-02 d__Bacteria Bacillota c__Bacilli Mycoplasmatales 24 AH1_2nd_20:bin_000075 0.8989975 1.939073e-02 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales 25 LI1_2nd_8:bin_000033 1.0012730 1.969652e-03 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 26 AH1_2nd_1:bin_000028 1.0562209 3.854314e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rickettsiales 27 LI1_2nd_4:bin_000001 1.0743058 6.937520e-03 d__Bacteria Bacillota_A c__Clostridia Christensenellales 28 LI1_2nd_9:bin_000032 1.0943233 2.355081e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 29 AH1_2nd_16:bin_000058 1.1405745 4.861518e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 30 LI1_2nd_7:bin_000051 1.1773688 7.115920e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 31 AH1_2nd_11:bin_000005 1.1863288 2.153657e-02 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales 32 LI1_2nd_7:bin_000008 1.2007603 1.107336e-02 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 33 LI1_2nd_4:bin_000045 1.2010771 3.593861e-03 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales 34 LI1_2nd_2:bin_000006 1.2527113 2.701899e-02 d__Bacteria Bacillota_A c__Clostridia Christensenellales 35 LI1_2nd_4:bin_000041 1.3587556 5.833770e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 36 LI1_2nd_8:bin_000019 1.4756993 7.215209e-04 d__Bacteria Bacillota_A c__Clostridia Christensenellales 37 AH1_2nd_19:bin_000005 1.8846731 6.542042e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 38 LI1_2nd_5:bin_000023 2.4997493 8.581644e-04 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 family genus species 1 2 Bacteroidaceae Bacteroides 3 Akkermansiaceae Akkermansia 4 5 6 Tannerellaceae Parabacteroides 7 Lachnospiraceae MGBC136627 8 Bacteroidaceae Bacteroides 9 Bacteroidaceae Bacteroides 10 Lachnospiraceae Roseburia 11 Bacteroidaceae Phocaeicola 12 Marinifilaceae Odoribacter 13 Marinifilaceae Odoribacter 14 Helicobacteraceae Helicobacter_J 15 Gastranaerophilaceae Scatousia 16 Anaerotignaceae 17 Rikenellaceae Alistipes 18 Lachnospiraceae 19 Lachnospiraceae UMGS1251 20 Bacteroidaceae Bacteroides 21 Tannerellaceae Parabacteroides_B 22 Lachnospiraceae Lacrimispora 23 Mycoplasmoidaceae Ureaplasma 24 Desulfovibrionaceae Mailhella 25 26 UBA1997 CALXRO01 27 28 CAG-239 CAZU01 29 Lachnospiraceae Enterocloster 30 Lachnospiraceae RGIG4733 31 Fusobacteriaceae Fusobacterium_A Fusobacterium_A ulcerans 32 Erysipelotrichaceae Breznakia 33 Anaerovoracaceae IOR16 34 MGBC116941 MGBC116941 35 Lachnospiraceae Clostridium_Q 36 UBA3700 37 Lachnospiraceae Roseburia 38 colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_PopulationHot_dry, y=forcats::fct_reorder(genome,lfc_PopulationHot_dry), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs in warm ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 9 2 Pseudomonadota 3 3 Bacillota 2 4 Bacillota_C 1 5 Desulfobacterota 1 6 Fusobacteriota 1 Phyla of the significant MAGs in cold ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 10 2 Bacillota_A 7 3 Bacillota_C 1 4 Campylobacterota 1 5 Cyanobacteriota 1 6 Verrucomicrobiota 1 7.6 Functional capacity 7.6.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.346 0.0194 2 Hot_dry 0.327 0.0244 MCI_element_wild &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) shapiro.test(MCI_element_wild$value) #normality test Shapiro-Wilk normality test data: MCI_element_wild$value W = 0.96385, p-value = 0.4503 var.test(value ~ Population, data = MCI_element_wild) F test to compare two variances data: value by Population F = 0.63604, num df = 17, denom df = 8, p-value = 0.4114 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.1569001 1.9468860 sample estimates: ratio of variances 0.636035 t.test(value ~ Population, data=MCI_element_wild, var.equal = TRUE) Two Sample t-test data: value by Population t = 2.2416, df = 25, p-value = 0.03411 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: 0.001570698 0.037107300 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3461279 0.3267889 7.6.2 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_wet-Hot_dry)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Hot&quot;,&quot;Cold&quot;)) difference_table_wild %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["what-is-the-effect-of-acclimation.html", "Chapter 8 What is the effect of acclimation? 8.1 Functional capacity", " Chapter 8 What is the effect of acclimation? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 8.0.1 Do each population retain the wild GM after acclimation? 8.0.1.1 Cold 8.0.1.1.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% mutate(time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes( y = value, x = time_point, group = time_point, color = time_point, fill = time_point )) + geom_boxplot(outlier.shape = NA, alpha = 0.5) + geom_jitter(alpha = 0.5) + scale_color_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;) ) + scale_fill_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;) ) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size = 10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population==&quot;Cold_wet&quot;) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) Richness Modelq0GLMMNB &lt;- MASS::glm.nb(richness ~ time_point, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) Call: MASS::glm.nb(formula = richness ~ time_point, data = alpha_div_meta, trace = TRUE, init.theta = 3.758085424, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8810 0.1299 29.883 &lt;2e-16 *** time_pointWild 0.3825 0.1801 2.124 0.0337 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(3.7581) family taken to be 1) Null deviance: 42.286 on 34 degrees of freedom Residual deviance: 37.811 on 33 degrees of freedom AIC: 340.85 Number of Fisher Scoring iterations: 1 Theta: 3.758 Std. Err.: 0.971 2 x log-likelihood: -334.847 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 3.88 0.130 Inf 3.63 4.14 Wild 4.26 0.125 Inf 4.02 4.51 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Wild -0.383 0.18 Inf -2.124 0.0337 Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lm(formula = neutral ~ time_point, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -24.992 -7.156 1.344 6.755 23.223 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 19.269 2.647 7.279 2.37e-08 *** time_pointWild 17.753 3.691 4.809 3.23e-05 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 10.91 on 33 degrees of freedom Multiple R-squared: 0.4121, Adjusted R-squared: 0.3942 F-statistic: 23.13 on 1 and 33 DF, p-value: 3.234e-05 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ time_point, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -3.8124 -0.6093 0.0301 0.8464 2.9897 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 5.3928 0.3505 15.38 &lt;2e-16 *** time_pointWild -0.1272 0.4888 -0.26 0.796 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.445 on 33 degrees of freedom Multiple R-squared: 0.002048, Adjusted R-squared: -0.02819 F-statistic: 0.06771 on 1 and 33 DF, p-value: 0.7963 8.0.1.1.2 Beta diversity samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02799 0.027989 2.2359 999 0.149 Residuals 33 0.41309 0.012518 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation Wild Acclimation 0.142 Wild 0.14434 adonis2(neutral_accli ~ time_point, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999, strata = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p2wipzz0cr7k9qf9i5z9, .table th.tinytable_css_p2wipzz0cr7k9qf9i5z9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_afp9syr9r2pbe368all7, .table th.tinytable_css_afp9syr9r2pbe368all7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.7466371 0.08498327 3.064914 0.001 Residual 33 8.0390580 0.91501673 NA NA Total 34 8.7856951 1.00000000 NA NA 8.0.1.1.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0319 2 Wild 0.346 0.0194 MCI_element_accli &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Treatment&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) shapiro.test(MCI_element_accli$value) Shapiro-Wilk normality test data: MCI_element_accli$value W = 0.93368, p-value = 0.2252 var.test(value ~ time_point, data = MCI_element_accli) F test to compare two variances data: value by time_point F = 3.7594, num df = 8, denom df = 8, p-value = 0.07895 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.8480072 16.6665586 sample estimates: ratio of variances 3.759436 t.test(value ~ time_point, data=MCI_element_accli, var.equal = TRUE) Two Sample t-test data: value by time_point t = -1.0608, df = 16, p-value = 0.3045 alternative hypothesis: true difference in means between group Acclimation and group Wild is not equal to 0 95 percent confidence interval: -0.05046008 0.01680192 sample estimates: mean in group Acclimation mean in group Wild 0.3256751 0.3425042 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1,10)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 10)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Wild-Acclimation)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Acclimation&quot;,&quot;Wild&quot;)) difference_table_wild Elements Acclimation Wild Function Element Difference group_color 1 B0302 0.009388318 9.027184e-05 Amino acid derivative biosynthesis_Betaine Betaine -0.009298046 Acclimation 2 D0212 0.434367300 5.601500e-01 Polysaccharide degradation_Arabinan Arabinan 0.125782700 Wild 8.0.1.2 Warm 8.0.1.2.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Hot_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% mutate(time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes( y = value, x = time_point, group = time_point, color = time_point, fill = time_point )) + geom_boxplot(outlier.shape = NA, alpha = 0.5) + geom_jitter(alpha = 0.5) + scale_color_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;) ) + scale_fill_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;) ) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size = 10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population==&quot;Hot_dry&quot;) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) Richness Modelq0GLMMNB &lt;- MASS::glm.nb(richness ~ time_point, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) Call: MASS::glm.nb(formula = richness ~ time_point, data = alpha_div_meta, trace = TRUE, init.theta = 11.12326433, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.46973 0.10612 42.120 &lt;2e-16 *** time_pointWild -0.06573 0.15036 -0.437 0.662 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(11.1233) family taken to be 1) Null deviance: 18.797 on 17 degrees of freedom Residual deviance: 18.606 on 16 degrees of freedom AIC: 174.86 Number of Fisher Scoring iterations: 1 Theta: 11.12 Std. Err.: 4.25 2 x log-likelihood: -168.861 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.47 0.106 Inf 4.26 4.68 Wild 4.40 0.107 Inf 4.20 4.61 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Wild 0.0657 0.15 Inf 0.437 0.6620 Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lm(formula = neutral ~ time_point, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -34.955 -4.481 -0.848 10.382 18.795 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 44.601 4.767 9.356 6.88e-08 *** time_pointWild -4.988 6.742 -0.740 0.47 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 14.3 on 16 degrees of freedom Multiple R-squared: 0.03308, Adjusted R-squared: -0.02736 F-statistic: 0.5473 on 1 and 16 DF, p-value: 0.4701 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ time_point, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -2.7966 -1.0585 -0.1409 0.9532 2.6355 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 6.5226 0.4903 13.303 4.56e-10 *** time_pointWild -0.7192 0.6934 -1.037 0.315 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.471 on 16 degrees of freedom Multiple R-squared: 0.063, Adjusted R-squared: 0.004436 F-statistic: 1.076 on 1 and 16 DF, p-value: 0.3151 8.0.1.2.2 Beta diversity samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.006545 0.0065454 0.6009 999 0.469 Residuals 16 0.174278 0.0108924 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation Wild Acclimation 0.467 Wild 0.44953 adonis2(neutral_accli ~ time_point, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999, strata = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xo7qftqowtd3q6h02pjj, .table th.tinytable_css_xo7qftqowtd3q6h02pjj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_b4cv4nzm564vuo4j0l98, .table th.tinytable_css_b4cv4nzm564vuo4j0l98 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.6314393 0.1605468 3.060027 0.00390625 Residual 16 3.3016150 0.8394532 NA NA Total 17 3.9330543 1.0000000 NA NA 8.0.1.2.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.348 0.0158 2 Wild 0.327 0.0244 MCI_element_accli &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) shapiro.test(MCI_element_accli$value) Shapiro-Wilk normality test data: MCI_element_accli$value W = 0.95424, p-value = 0.4953 var.test(value ~ time_point, data = MCI_element_accli) F test to compare two variances data: value by time_point F = 0.42062, num df = 8, denom df = 8, p-value = 0.242 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.09487754 1.86470356 sample estimates: ratio of variances 0.4206168 t.test(value ~ time_point, data=MCI_element_accli, var.equal = TRUE) Two Sample t-test data: value by time_point t = 2.1708, df = 16, p-value = 0.04533 alternative hypothesis: true difference in means between group Acclimation and group Wild is not equal to 0 95 percent confidence interval: 0.0004930409 0.0415286535 sample estimates: mean in group Acclimation mean in group Wild 0.3477997 0.3267889 Differences in functional pathways element_gift_warm &lt;- element_gift %&gt;% filter(type==&quot;Hot_control&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1,10)], by = &quot;Tube_code&quot;) significant_elements_warm &lt;- element_gift_warm %&gt;% pivot_longer(-c(Tube_code,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_warm &lt;- element_gift_warm %&gt;% select(Tube_code, all_of(intersect( significant_elements_warm$trait, colnames(element_gift_warm) ))) %&gt;% left_join(., sample_metadata[c(1, 10)], by = join_by(Tube_code == Tube_code)) difference_table_warm &lt;- element_gift_sig_warm %&gt;% select(-Tube_code) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table_warm %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) 8.0.2 Do populations mantain a different GM after acclimation? 8.0.2.1 Shaprio test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2445285 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.4803302 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3335912 8.0.2.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.0.2.3 Beta diversity Number of samples used samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) length(samples_to_keep_accli) [1] 26 Richness richness_accli &lt;- as.matrix(beta_q0n$S) richness_accli &lt;- as.dist(richness_accli[rownames(richness_accli) %in% samples_to_keep_accli, colnames(richness_accli) %in% samples_to_keep_accli]) betadisper(richness_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.093187 0.093187 11.812 999 0.004 ** Residuals 24 0.189340 0.007889 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.002 Hot_dry 0.0021532 adonis2(richness_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(richness_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ykcdd1qyab77wtq7melu, .table th.tinytable_css_ykcdd1qyab77wtq7melu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p2opfkptby93p930lxk6, .table th.tinytable_css_p2opfkptby93p930lxk6 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.639630 0.1929088 5.736415 0.001 Residual 24 6.859879 0.8070912 NA NA Total 25 8.499509 1.0000000 NA NA Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.05603 0.056026 4.1918 999 0.051 . Residuals 24 0.32077 0.013365 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.047 Hot_dry 0.051717 adonis2(neutral_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_s28osvz20si2pwj43ob5, .table th.tinytable_css_s28osvz20si2pwj43ob5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_87fdthro9uebp2xw1w64, .table th.tinytable_css_87fdthro9uebp2xw1w64 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.961192 0.2493171 7.970889 0.001 Residual 24 5.905063 0.7506829 NA NA Total 25 7.866255 1.0000000 NA NA Phylogenetic phylo_accli &lt;- as.matrix(beta_q1p$S) phylo_accli &lt;- as.dist(phylo_accli[rownames(phylo_accli) %in% samples_to_keep_accli, colnames(phylo_accli) %in% samples_to_keep_accli]) betadisper(phylo_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03637 0.036365 2.3087 999 0.145 Residuals 24 0.37804 0.015752 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.149 Hot_dry 0.14172 adonis2(phylo_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(phylo_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_no95zz1zr8d0f3z61u4n, .table th.tinytable_css_no95zz1zr8d0f3z61u4n { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4b363e18hgng38sgp8w7, .table th.tinytable_css_4b363e18hgng38sgp8w7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.2113395 0.1379515 3.84066 0.012 Residual 24 1.3206449 0.8620485 NA NA Total 25 1.5319844 1.0000000 NA NA NMDS beta_q0n_nmds_accli &lt;- richness_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1n_nmds_accli &lt;- neutral_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1p_nmds_accli &lt;- phylo_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange( beta_q0n_nmds_accli, beta_q1n_nmds_accli, beta_q1p_nmds_accli, ncol = 2, nrow = 2, common.legend = TRUE, legend = &quot;right&quot; ) 8.1 Functional capacity 8.1.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.329 0.0319 2 Hot_dry 0.348 0.0158 MCI_element_acclimation&lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) shapiro.test(MCI_element_acclimation$value) #normality test Shapiro-Wilk normality test data: MCI_element_acclimation$value W = 0.92832, p-value = 0.0707 var.test(value ~ Population, data = MCI_element_acclimation) F test to compare two variances data: value by Population F = 4.0687, num df = 16, denom df = 8, p-value = 0.05027 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.9981905 12.7140279 sample estimates: ratio of variances 4.06872 t.test(value ~ Population, data=MCI_element_acclimation, var.equal = TRUE) Two Sample t-test data: value by Population t = -1.633, df = 24, p-value = 0.1155 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: -0.042021638 0.004897661 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3292377 0.3477997 8.1.2 Differences in functional pathways element_gift_acclimation&lt;- element_gift %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_acclimation &lt;- element_gift_acclimation %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_acclimation &lt;- element_gift_acclimation %&gt;% select(Tube_code, all_of(intersect( significant_elements_acclimation$trait, colnames(element_gift_acclimation) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_acclimation &lt;- element_gift_sig_acclimation %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_wet-Hot_dry)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Hot&quot;,&quot;Cold&quot;)) difference_table_acclimation %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["fmt.html", "Chapter 9 FMT 9.1 FMT1 9.2 FMT2", " Chapter 9 FMT load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 9.1 FMT1 9.1.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 9.1.1.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6077531 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3357428 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.9273925 9.1.1.2 Alpha bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) 9.1.1.3 Beta diversity Number of samples used samples_to_keep_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) length(samples_to_keep_post1) [1] 26 Richness richness_post1 &lt;- as.matrix(beta_q0n$S) richness_post1 &lt;- as.dist(richness_post1[rownames(richness_post1) %in% samples_to_keep_post1, colnames(richness_post1) %in% samples_to_keep_post1]) betadisper(richness_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01060 0.0052999 1.1619 999 0.38 Residuals 23 0.10491 0.0045613 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.046000 0.675 Hot_control 0.055742 0.454 Treatment 0.625388 0.420078 adonis2(richness_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.195567 0.1448246 1.947534 0.002 Residual 23 7.059710 0.8551754 NA NA Total 25 8.255277 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(richness_post1),] pairwise &lt;- pairwise.adonis(richness_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_o6hfkymqdo9hxh65gzhu, .table th.tinytable_css_o6hfkymqdo9hxh65gzhu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9sbj2gho4zrm24unutke, .table th.tinytable_css_9sbj2gho4zrm24unutke { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.5615418 1.729004 0.1033537 0.013 0.039 . Control vs Hot_control 1 0.8438429 2.793772 0.1486541 0.002 0.006 * Treatment vs Hot_control 1 0.3734921 1.268929 0.0779971 0.108 0.324 Neutral neutral_post1 &lt;- as.matrix(beta_q1n$S) neutral_post1 &lt;- as.dist(neutral_post1[rownames(neutral_post1) %in% samples_to_keep_post1, colnames(neutral_post1) %in% samples_to_keep_post1]) betadisper(neutral_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002996 0.0014982 0.1374 999 0.883 Residuals 23 0.250747 0.0109020 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.55300 0.877 Hot_control 0.55320 0.784 Treatment 0.86589 0.76648 adonis2(neutral_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_khx4bnmx7jbjcsfx68bi, .table th.tinytable_css_khx4bnmx7jbjcsfx68bi { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8cttbobld5mvixvext93, .table th.tinytable_css_8cttbobld5mvixvext93 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.395968 0.1900228 2.697931 0.002 Residual 23 5.950350 0.8099772 NA NA Total 25 7.346318 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(neutral_post1),] pairwise &lt;- pairwise.adonis(neutral_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xmij3se8qn5wlzp8tmi1, .table th.tinytable_css_xmij3se8qn5wlzp8tmi1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9xrgxg2vvuw38m1dsj9w, .table th.tinytable_css_9xrgxg2vvuw38m1dsj9w { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6051778 2.250849 0.13047758 0.013 0.039 . Control vs Hot_control 1 1.0528902 4.143637 0.20570451 0.001 0.003 * Treatment vs Hot_control 1 0.4150076 1.637268 0.09840968 0.047 0.141 Phylogenetic phylo_post1 &lt;- as.matrix(beta_q1p$S) phylo_post1 &lt;- as.dist(phylo_post1[rownames(phylo_post1) %in% samples_to_keep_post1, colnames(phylo_post1) %in% samples_to_keep_post1]) betadisper(phylo_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00399 0.0019943 0.1213 999 0.912 Residuals 23 0.37812 0.0164399 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.92600 0.710 Hot_control 0.91065 0.775 Treatment 0.65272 0.74852 adonis2(phylo_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_7a8inmgyn0mmupla9vna, .table th.tinytable_css_7a8inmgyn0mmupla9vna { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0ssnpq3yjg5qrvzsh2cb, .table th.tinytable_css_0ssnpq3yjg5qrvzsh2cb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.07451036 0.07059466 0.8735033 0.558 Residual 23 0.98095695 0.92940534 NA NA Total 25 1.05546731 1.00000000 NA NA NMDS beta_richness_nmds_post1 &lt;- richness_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post1 &lt;- neutral_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post1 &lt;- phylo_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post1, beta_neutral_nmds_post1, beta_phylogenetic_nmds_post1, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 9.1.1.4 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.373 0.0247 2 Hot_control 0.372 0.0367 3 Treatment 0.353 0.0186 MCI_tm5_ele &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT1&quot;) shapiro.test(MCI_tm5_ele$value)#normality test Shapiro-Wilk normality test data: MCI_tm5_ele$value W = 0.92343, p-value = 0.05415 res.aov &lt;- aov(value ~ type, data = MCI_tm5_ele)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00216 0.0010798 1.371 0.274 Residuals 23 0.01811 0.0007875 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 9.2 FMT2 9.2.1 Is the GM of the intervention group still more similar to warm population after one week from FMT? 9.2.1.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1683943 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6310339 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3446539 9.2.1.2 Alpha bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) 9.2.1.3 Beta diversity Number of samples used samples_to_keep_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) length(samples_to_keep_FMT2) [1] 27 Richness richness_FMT2 &lt;- as.matrix(beta_q0n$S) richness_FMT2 &lt;- as.dist(richness_FMT2[rownames(richness_FMT2) %in% samples_to_keep_FMT2, colnames(richness_FMT2) %in% samples_to_keep_FMT2]) betadisper(richness_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.003043 0.0015214 0.2578 999 0.805 Residuals 24 0.141630 0.0059013 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.93900 0.524 Hot_control 0.93628 0.568 Treatment 0.50455 0.54043 adonis2(richness_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(richness_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_u0nep4r6ph0iosuhj8tx, .table th.tinytable_css_u0nep4r6ph0iosuhj8tx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aur00t2h69wogv08larg, .table th.tinytable_css_aur00t2h69wogv08larg { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.504341 0.1967776 2.939822 0.001 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(richness_FMT2),] pairwise &lt;- pairwise.adonis(richness_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qd0q7v8wkjyfa5ifnozz, .table th.tinytable_css_qd0q7v8wkjyfa5ifnozz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e27qhhrn9k91jtuqh1xc, .table th.tinytable_css_e27qhhrn9k91jtuqh1xc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6463814 2.560441 0.1379515 0.001 0.003 * Control vs Hot_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * Treatment vs Hot_control 1 0.4796256 1.916520 0.1069694 0.001 0.003 * Neutral neutral_FMT2 &lt;- as.matrix(beta_q1n$S) neutral_FMT2 &lt;- as.dist(neutral_FMT2[rownames(neutral_FMT2) %in% samples_to_keep_FMT2, colnames(neutral_FMT2) %in% samples_to_keep_FMT2]) betadisper(neutral_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.005365 0.0026827 0.309 999 0.705 Residuals 24 0.208332 0.0086805 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.74100 0.635 Hot_control 0.75233 0.454 Treatment 0.64640 0.46107 adonis2(neutral_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(neutral_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z8gcb48ntahf4u7tl5t9, .table th.tinytable_css_z8gcb48ntahf4u7tl5t9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dqd40unkfqiqiosznwwn, .table th.tinytable_css_dqd40unkfqiqiosznwwn { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.923807 0.2603795 4.224537 0.001 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(neutral_FMT2),] pairwise &lt;- pairwise.adonis(neutral_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ohcfpytn467mwa3pabwo, .table th.tinytable_css_ohcfpytn467mwa3pabwo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2rklnabaxwut3cpb0l6q, .table th.tinytable_css_2rklnabaxwut3cpb0l6q { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 1.0227481 4.648335 0.2251191 0.001 0.003 * Control vs Hot_control 1 1.3619424 5.771031 0.2650785 0.002 0.006 * Treatment vs Hot_control 1 0.5010202 2.206532 0.1211945 0.002 0.006 * Phylogenetic phylo_FMT2 &lt;- as.matrix(beta_q1p$S) phylo_FMT2 &lt;- as.dist(phylo_FMT2[rownames(phylo_FMT2) %in% samples_to_keep_FMT2, colnames(phylo_FMT2) %in% samples_to_keep_FMT2]) betadisper(phylo_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002880 0.0014398 0.3483 999 0.699 Residuals 24 0.099207 0.0041336 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.79800 0.589 Hot_control 0.79696 0.400 Treatment 0.60817 0.41749 adonis2(phylo_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(phylo_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xeif8qefmvbimigcj3y3, .table th.tinytable_css_xeif8qefmvbimigcj3y3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5rub4wlb7g8vbozhgbza, .table th.tinytable_css_5rub4wlb7g8vbozhgbza { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.1594363 0.2042241 3.079623 0.001 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(phylo_FMT2),] pairwise &lt;- pairwise.adonis(phylo_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_lz76lu17fcs1rzq806lo, .table th.tinytable_css_lz76lu17fcs1rzq806lo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ep72l6yt025lt975bu3f, .table th.tinytable_css_ep72l6yt025lt975bu3f { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.05927454 2.382025 0.1295845 0.024 0.072 Control vs Hot_control 1 0.11081709 4.043656 0.2017424 0.002 0.006 * Treatment vs Hot_control 1 0.06906280 2.722460 0.1454115 0.003 0.009 * NMDS beta_richness_nmds_FMT2 &lt;- richness_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_FMT2 &lt;- neutral_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_FMT2 &lt;- phylo_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_FMT2, beta_neutral_nmds_FMT2, beta_phylogenetic_nmds_FMT2, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 9.2.1.4 Differentially abundant MAGs 9.2.1.4.1 Warm vs Intervention physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;Population&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) taxon lfc_PopulationHot_dry p_PopulationHot_dry 1 LI1_2nd_5:bin_000037 1.0973154 0.006604312 2 AH1_2nd_6:bin_000037 2.0385135 0.003090836 3 AH1_2nd_16:bin_000019 1.2068280 0.033600824 4 AH1_2nd_11:bin_000028 -1.2898008 0.001774360 5 AH1_2nd_5:bin_000051 1.2187097 0.043324430 6 LI1_2nd_4:bin_000036 1.2643286 0.012569823 7 AH1_2nd_10:bin_000097 -1.0029886 0.030302310 8 LI1_2nd_7:bin_000038 1.8699634 0.015107894 9 LI1_2nd_7:bin_000014 0.8972709 0.017473969 10 AH1_2nd_7:bin_000028 2.1074592 0.010599052 11 AH1_2nd_13:bin_000011 0.9150738 0.031321135 12 AH1_2nd_6:bin_000030 1.1119027 0.015814549 13 LI1_2nd_1:bin_000014 -0.8425242 0.008906495 14 AH1_2nd_16:bin_000064 -0.6991004 0.024836637 15 AH1_2nd_5:bin_000004 0.7310368 0.034016114 16 LI1_2nd_3:bin_000017 2.5450758 0.010896862 17 AH1_2nd_19:bin_000005 2.1363627 0.017976760 18 AH1_2nd_2:bin_000003 -1.0083616 0.023241000 19 AH1_2nd_20:bin_000009 1.6386224 0.014660151 20 AH1_2nd_8:bin_000006 1.0537583 0.014234121 21 LI1_2nd_7:bin_000005 1.3337013 0.001300557 22 AH1_2nd_14:bin_000003 -1.1139124 0.018629079 23 LI1_2nd_4:bin_000052 0.8909290 0.015296671 24 AH1_2nd_16:bin_000018 1.1059097 0.007623376 25 LI1_2nd_5:bin_000013 1.3404114 0.008779827 26 LI1_2nd_4:bin_000001 1.5850156 0.001369553 27 LI1_2nd_2:bin_000006 1.0044356 0.003515549 28 AH1_2nd_5:bin_000006 0.8172523 0.040055609 29 LI1_2nd_7:bin_000016 1.3165139 0.008388055 30 LI1_2nd_4:bin_000003 1.0441282 0.015444020 taxonomy &lt;- data.frame(physeq_FMT2@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) %&gt;% dplyr::arrange(p_PopulationHot_dry) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_PopulationHot_dry) ancombc_rand_table_mag taxon lfc_PopulationHot_dry p_PopulationHot_dry domain phylum class order 1 AH1_2nd_11:bin_000028 -1.2898008 0.001774360 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 2 AH1_2nd_14:bin_000003 -1.1139124 0.018629079 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 3 AH1_2nd_2:bin_000003 -1.0083616 0.023241000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 4 AH1_2nd_10:bin_000097 -1.0029886 0.030302310 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 5 LI1_2nd_1:bin_000014 -0.8425242 0.008906495 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales 6 AH1_2nd_16:bin_000064 -0.6991004 0.024836637 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 7 AH1_2nd_5:bin_000004 0.7310368 0.034016114 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 8 AH1_2nd_5:bin_000006 0.8172523 0.040055609 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales 9 LI1_2nd_4:bin_000052 0.8909290 0.015296671 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 10 LI1_2nd_7:bin_000014 0.8972709 0.017473969 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales 11 AH1_2nd_13:bin_000011 0.9150738 0.031321135 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 12 LI1_2nd_2:bin_000006 1.0044356 0.003515549 d__Bacteria Bacillota_A c__Clostridia Christensenellales 13 LI1_2nd_4:bin_000003 1.0441282 0.015444020 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 14 AH1_2nd_8:bin_000006 1.0537583 0.014234121 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 15 LI1_2nd_5:bin_000037 1.0973154 0.006604312 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 16 AH1_2nd_16:bin_000018 1.1059097 0.007623376 d__Bacteria Bacillota_A c__Clostridia Christensenellales 17 AH1_2nd_6:bin_000030 1.1119027 0.015814549 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 18 AH1_2nd_16:bin_000019 1.2068280 0.033600824 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 19 AH1_2nd_5:bin_000051 1.2187097 0.043324430 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 20 LI1_2nd_4:bin_000036 1.2643286 0.012569823 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 21 LI1_2nd_7:bin_000016 1.3165139 0.008388055 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 22 LI1_2nd_7:bin_000005 1.3337013 0.001300557 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 23 LI1_2nd_5:bin_000013 1.3404114 0.008779827 d__Bacteria Bacillota_A c__Clostridia Christensenellales 24 LI1_2nd_4:bin_000001 1.5850156 0.001369553 d__Bacteria Bacillota_A c__Clostridia Christensenellales 25 AH1_2nd_20:bin_000009 1.6386224 0.014660151 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 26 LI1_2nd_7:bin_000038 1.8699634 0.015107894 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 27 AH1_2nd_6:bin_000037 2.0385135 0.003090836 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 28 AH1_2nd_7:bin_000028 2.1074592 0.010599052 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales 29 AH1_2nd_19:bin_000005 2.1363627 0.017976760 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 30 LI1_2nd_3:bin_000017 2.5450758 0.010896862 d__Bacteria Bacillota_A c__Clostridia TANB77 family genus species 1 Bacteroidaceae Bacteroides 2 Lachnospiraceae Hungatella_A 3 Lachnospiraceae JAAYNV01 4 Tannerellaceae Parabacteroides 5 Desulfovibrionaceae 6 Oscillospiraceae Scatomorpha 7 Acutalibacteraceae 8 Acidaminococcaceae Phascolarctobacterium Phascolarctobacterium sp900544795 9 Lachnospiraceae Enterocloster 10 UBA1820 Merdimorpha 11 CAG-239 MGBC133411 12 MGBC116941 MGBC116941 13 Erysipelotrichaceae Dielma 14 Lachnospiraceae CAG-95 15 Marinifilaceae Odoribacter 16 UBA3700 17 UBA3830 18 Rikenellaceae Alistipes 19 Bacteroidaceae Bacteroides 20 Bacteroidaceae 21 Erysipelotrichaceae Clostridium_AQ 22 Lachnospiraceae Ventrimonas 23 DTU072 24 25 Lachnospiraceae Kineothrix 26 Tannerellaceae Parabacteroides_B 27 UBA932 Egerieousia 28 Helicobacteraceae NHYM01 29 Lachnospiraceae Roseburia 30 CAG-508 CAG-269 colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_PopulationHot_dry, y=forcats::fct_reorder(genome,lfc_PopulationHot_dry), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + # coord_flip()+ theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs in warm control ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 11 2 Bacteroidota 7 3 Bacillota 2 4 Pseudomonadota 2 5 Bacillota_C 1 6 Campylobacterota 1 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 3 2 Bacteroidota 2 3 Desulfobacterota 1 9.2.1.4.2 Intervention vs cold control physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output_cold = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;type&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) taxon lfc_typeTreatment p_typeTreatment 1 AH1_2nd_2:bin_000034 2.0051519 1.120785e-02 2 AH1_2nd_19:bin_000052 2.3284281 2.325728e-02 3 LI1_2nd_7:bin_000012 -1.7569061 1.539293e-02 4 AH1_2nd_12:bin_000009 -1.4187676 4.206041e-02 5 AH1_2nd_8:bin_000051 1.3480932 1.857384e-03 6 AH1_2nd_9:bin_000047 -0.6584569 4.745443e-02 7 AH1_2nd_13:bin_000055 1.5576447 1.324349e-03 8 LI1_2nd_7:bin_000053 1.4351800 6.192408e-03 9 AH1_2nd_14:bin_000052 -0.9800862 3.654950e-02 10 LI1_2nd_10:bin_000018 2.7879501 2.435440e-04 11 AH1_2nd_17:bin_000030 1.0180722 4.427500e-02 12 AH1_2nd_9:bin_000002 -0.7704023 4.999964e-02 13 AH1_2nd_15:bin_000021 -1.0649675 1.315015e-02 14 AH1_2nd_19:bin_000001 -2.7491777 6.505668e-05 15 AH1_2nd_5:bin_000073 0.9679065 2.926932e-02 16 AH1_2nd_18:bin_000047 -1.3438014 2.550430e-02 17 AH1_2nd_12:bin_000012 -1.8611557 1.170334e-02 18 AH1_2nd_7:bin_000028 -3.1284556 4.504019e-02 19 AH1_2nd_13:bin_000011 -1.1609230 1.371637e-02 20 AH1_2nd_7:bin_000003 2.9527332 4.729658e-02 21 AH1_2nd_20:bin_000075 0.9352681 1.186314e-02 22 AH1_2nd_10:bin_000009 1.3408559 2.925651e-03 23 AH1_2nd_5:bin_000004 -1.1305900 3.908130e-03 24 AH1_2nd_19:bin_000005 -2.4924748 2.144614e-02 25 AH1_2nd_1:bin_000005 -1.1013291 3.220710e-02 26 AH1_2nd_2:bin_000003 1.4594281 1.546077e-02 27 AH1_2nd_15:bin_000013 -1.0908051 2.076256e-02 28 LI1_2nd_7:bin_000078 1.2159564 1.534396e-02 29 AH1_2nd_20:bin_000042 1.1567255 1.919604e-02 30 LI1_2nd_8:bin_000048 1.1231216 2.481876e-02 31 AH1_2nd_1:bin_000015 1.2067622 3.068130e-02 32 AH1_2nd_13:bin_000025 1.0298803 4.044629e-02 33 LI1_2nd_8:bin_000019 1.4624813 1.106173e-02 34 AH1_2nd_5:bin_000001 1.5979498 2.260707e-02 35 LI1_2nd_1:bin_000006 0.9939076 2.714515e-02 36 AH1_2nd_12:bin_000041 -0.9891962 3.374591e-02 37 AH1_2nd_17:bin_000029 1.1811988 4.595752e-02 38 AH1_2nd_10:bin_000010 1.4322566 2.191207e-02 39 AH1_2nd_1:bin_000003 -1.2831333 2.116461e-02 taxonomy &lt;- data.frame(physeq_FMT2@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) %&gt;% dplyr::arrange(p_typeTreatment) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_typeTreatment) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_typeTreatment, y=forcats::fct_reorder(genome,lfc_typeTreatment), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 7 2 Bacteroidota 6 3 Desulfobacterota 2 4 Verrucomicrobiota 2 5 Bacillota 1 6 Bacillota_B 1 7 Bacillota_C 1 8 Cyanobacteriota 1 9 Pseudomonadota 1 Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 8 2 Bacillota_A 4 3 Campylobacterota 2 4 Bacillota 1 5 Cyanobacteriota 1 6 Pseudomonadota 1 9.2.1.5 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.352 0.0223 2 Hot_control 0.350 0.0293 3 Treatment 0.346 0.0255 MCI_FMT2 &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT2&quot;) shapiro.test(MCI_FMT2$value) Shapiro-Wilk normality test data: MCI_FMT2$value W = 0.96248, p-value = 0.4203 res.aov &lt;- aov(value ~ type, data = MCI_FMT2) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00017 0.0000852 0.127 0.881 Residuals 24 0.01604 0.0006682 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 2 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0208 0.000494 0.0365 Biosynthesis Amino acid biosynthesis_Valine Valine 2 D0902 0.000494 0.0365 Degradation Antibiotic degradation_Carbapenem Carbapenem CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; "],["changes-after-fmt-compared-to-acclimation.html", "Chapter 10 Changes after FMT compared to acclimation 10.1 What is the effect of FMT and temperature on the GM after 1 week compared to acclimation? 10.2 What is the effect of FMT and temperature on the GM after 2 weeks caompared to acclimation?", " Chapter 10 Changes after FMT compared to acclimation load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 10.1 What is the effect of FMT and temperature on the GM after 1 week compared to acclimation? 10.1.1 CI vs CC 10.1.1.1 Alpha diversity label_map &lt;- c( &quot;Control&quot; = &quot;Cold-control&quot;, &quot;Treatment&quot; = &quot;Cold-intervention&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type %in% c(&quot;Control&quot;,&quot;Treatment&quot;) &amp; time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) Richness Modelq0GLMMNB &lt;- MASS::glm.nb(richness ~ type*time_point, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) Call: MASS::glm.nb(formula = richness ~ type * time_point, data = alpha_div_meta, trace = TRUE, init.theta = 2.532718573, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9512 0.2275 17.368 &lt;2e-16 *** typeTreatment -0.1372 0.3132 -0.438 0.661 time_pointFMT1 -0.3225 0.3140 -1.027 0.304 typeTreatment:time_pointFMT1 0.4500 0.4435 1.015 0.310 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(2.5327) family taken to be 1) Null deviance: 37.769 on 33 degrees of freedom Residual deviance: 36.407 on 30 degrees of freedom AIC: 327.2 Number of Fisher Scoring iterations: 1 Theta: 2.533 Std. Err.: 0.630 2 x log-likelihood: -317.205 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Control 3.79 0.157 Inf 3.48 4.10 Treatment 3.88 0.157 Inf 3.57 4.18 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Control - Treatment -0.0878 0.222 Inf -0.396 0.6921 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lm(formula = neutral ~ type*time_point, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -20.699 -6.754 1.842 6.297 15.828 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 21.373 3.716 5.751 2.8e-06 *** typeTreatment -3.974 5.107 -0.778 0.443 time_pointFMT1 -4.014 5.107 -0.786 0.438 typeTreatment:time_pointFMT1 11.478 7.223 1.589 0.123 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 10.51 on 30 degrees of freedom Multiple R-squared: 0.08999, Adjusted R-squared: -0.001011 F-statistic: 0.9889 on 3 and 30 DF, p-value: 0.4113 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ type*time_point, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -3.6469 -0.5105 0.0069 0.5049 2.8426 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 5.2273 0.4901 10.666 9.98e-12 *** typeTreatment 0.3126 0.6736 0.464 0.646 time_pointFMT1 -0.8081 0.6736 -1.200 0.240 typeTreatment:time_pointFMT1 -0.5417 0.9525 -0.569 0.574 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.386 on 30 degrees of freedom Multiple R-squared: 0.155, Adjusted R-squared: 0.07054 F-statistic: 1.835 on 3 and 30 DF, p-value: 0.1621 10.1.1.2 Beta diversity Number of samples used samples_to_keep_post3 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post3 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) subset_meta_post3$type_time&lt;-interaction(subset_meta_post3$type, subset_meta_post3$time_point) length(samples_to_keep_post3) [1] 34 Richness richness_post3 &lt;- as.matrix(beta_q0n$S) richness_post3 &lt;- as.dist(richness_post3[rownames(richness_post3) %in% samples_to_keep_post3, colnames(richness_post3) %in% samples_to_keep_post3]) betadisper(richness_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002424 0.0024241 0.4717 999 0.482 Residuals 32 0.164445 0.0051389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.484 Treatment 0.49714 adonis2(richness_post3 ~ type*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_b9npyawa3sc60nzpd9sg, .table th.tinytable_css_b9npyawa3sc60nzpd9sg { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_375734g7wmtqf6o2enbc, .table th.tinytable_css_375734g7wmtqf6o2enbc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 2.062600 0.1745269 2.114265 0.001 Residual 30 9.755634 0.8254731 NA NA Total 33 11.818234 1.0000000 NA NA subset_meta_post3_arrange &lt;- column_to_rownames(subset_meta_post3, &quot;Tube_code&quot;) subset_meta_post3_arrange&lt;-subset_meta_post3_arrange[labels(richness_post3),] pairwise &lt;- pairwise.adonis(richness_post3, subset_meta_post3_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_tbs2p2aupt3txp1lbmlr, .table th.tinytable_css_tbs2p2aupt3txp1lbmlr { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_a6pij8s035i9eixvhixm, .table th.tinytable_css_a6pij8s035i9eixvhixm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.Acclimation vs Treatment.Acclimation 1 0.3657243 1.123239 0.06966584 0.248 1.000 Control.Acclimation vs Control.FMT1 1 0.6804988 2.100611 0.12283837 0.001 0.006 * Control.Acclimation vs Treatment.FMT1 1 0.8481258 2.673290 0.16033371 0.001 0.006 * Treatment.Acclimation vs Control.FMT1 1 0.7216200 2.172734 0.11956009 0.001 0.006 * Treatment.Acclimation vs Treatment.FMT1 1 0.9551308 2.926054 0.16322910 0.001 0.006 * Control.FMT1 vs Treatment.FMT1 1 0.5615418 1.729004 0.10335366 0.017 0.102 Neutral neutral_post3 &lt;- as.matrix(beta_q1n$S) neutral_post3 &lt;- as.dist(neutral_post3[rownames(neutral_post3) %in% samples_to_keep_post3, colnames(neutral_post3) %in% samples_to_keep_post3]) betadisper(neutral_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.019686 0.0196859 2.8068 999 0.11 Residuals 32 0.224435 0.0070136 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.119 Treatment 0.10361 adonis2(neutral_post3 ~ type, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z8wsgq48zbrihjwlnh7p, .table th.tinytable_css_z8wsgq48zbrihjwlnh7p { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dj3n5nfx6r2y9emr2fzn, .table th.tinytable_css_dj3n5nfx6r2y9emr2fzn { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.4361022 0.04050485 1.350872 1 Residual 32 10.3305628 0.95949515 NA NA Total 33 10.7666650 1.00000000 NA NA subset_meta_post3_arrange &lt;- column_to_rownames(subset_meta_post3, &quot;Tube_code&quot;) subset_meta_post3_arrange&lt;-subset_meta_post3_arrange[labels(neutral_post3),] pairwise &lt;- pairwise.adonis(neutral_post3, subset_meta_post3_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_iagsoasjtf3ipwhzulgy, .table th.tinytable_css_iagsoasjtf3ipwhzulgy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_a18ysd90ugpwhxe6heg0, .table th.tinytable_css_a18ysd90ugpwhxe6heg0 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.Acclimation vs Treatment.Acclimation 1 0.2759858 0.9928976 0.06208366 0.483 1.000 Control.Acclimation vs Control.FMT1 1 0.8153894 3.0970603 0.17113610 0.001 0.006 * Control.Acclimation vs Treatment.FMT1 1 1.1809241 4.4856470 0.24265567 0.002 0.012 . Treatment.Acclimation vs Control.FMT1 1 0.9517634 3.3715700 0.17404733 0.001 0.006 * Treatment.Acclimation vs Treatment.FMT1 1 1.3127773 4.6298256 0.23585668 0.001 0.006 * Control.FMT1 vs Treatment.FMT1 1 0.6051778 2.2508491 0.13047758 0.015 0.090 Phylogenetic phylo_post3 &lt;- as.matrix(beta_q1p$S) phylo_post3 &lt;- as.dist(phylo_post3[rownames(phylo_post3) %in% samples_to_keep_post3, colnames(phylo_post3) %in% samples_to_keep_post3]) betadisper(phylo_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04697 0.046974 2.8076 999 0.101 Residuals 32 0.53540 0.016731 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.096 Treatment 0.10357 adonis2(phylo_post3 ~ type, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_khvi88bgx62bf4888wka, .table th.tinytable_css_khvi88bgx62bf4888wka { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5y8xbfi1thjnoay3akf7, .table th.tinytable_css_5y8xbfi1thjnoay3akf7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.03710337 0.01720754 0.5602822 1 Residual 32 2.11912470 0.98279246 NA NA Total 33 2.15622808 1.00000000 NA NA NMDS beta_richness_nmds_post3 &lt;- richness_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post3 &lt;- neutral_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post3 &lt;- phylo_post3 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post3, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post3, beta_neutral_nmds_post3, beta_phylogenetic_nmds_post3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 10.1.2 Functional differences CC from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 11 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0204 0.00370 0.0478 Biosynthesis Amino acid biosynthesis_Serine Serine 2 B0205 0.000165 0.0117 Biosynthesis Amino acid biosynthesis_Threonine Threonine 3 B0703 0.00370 0.0478 Biosynthesis Vitamin biosynthesis_Niacin (B3) Niacin (B3) 4 B0805 0.00156 0.0370 Biosynthesis Aromatic compound biosynthesis_Indole-3-acetate Indole-3-acetate 5 D0102 0.000329 0.0156 Degradation Lipid degradation_Fatty acid Fatty acid 6 D0212 0.000987 0.0350 Degradation Polysaccharide degradation_Arabinan Arabinan 7 D0304 0.00247 0.0438 Degradation Sugar degradation_D-Arabinose D-Arabinose 8 D0306 0.00156 0.0370 Degradation Sugar degradation_D-Xylose D-Xylose 9 D0308 0.00247 0.0438 Degradation Sugar degradation_L-Rhamnose L-Rhamnose 10 D0601 0.00370 0.0478 Degradation Nitrogen compound degradation_Nitrate Nitrate 11 D0708 0.000165 0.0117 Degradation Alcohol degradation_Phytol Phytol CI from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Treatment&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 2 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0710 0.0000823 0.0119 Biosynthesis Vitamin biosynthesis_Phylloquinone (K1) Phylloquinone (K1) 2 D0102 0.000576 0.0418 Degradation Lipid degradation_Fatty acid Fatty acid 10.1.3 CI vs WC 10.1.3.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=8))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) Richness Modelq0GLMMNB &lt;- MASS::glm.nb(richness ~ type*time_point, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) Call: MASS::glm.nb(formula = richness ~ type * time_point, data = alpha_div_meta, trace = TRUE, init.theta = 5.042866344, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.4697 0.1527 29.279 &lt; 2e-16 *** typeTreatment -0.6557 0.2186 -2.999 0.00271 ** time_pointFMT1 -0.4209 0.2174 -1.936 0.05292 . typeTreatment:time_pointFMT1 0.5484 0.3146 1.743 0.08131 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(5.0429) family taken to be 1) Null deviance: 48.066 on 34 degrees of freedom Residual deviance: 37.426 on 31 degrees of freedom AIC: 336.8 Number of Fisher Scoring iterations: 1 Theta: 5.04 Std. Err.: 1.34 2 x log-likelihood: -326.796 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Hot_control 4.26 0.109 Inf 4.05 4.47 Treatment 3.88 0.114 Inf 3.65 4.10 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Hot_control - Treatment 0.381 0.157 Inf 2.425 0.0153 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lm(formula = neutral ~ type*time_point, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -20.6988 -6.3363 -0.4774 7.6008 15.8281 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 44.601 3.324 13.418 1.88e-14 *** typeTreatment -27.202 4.701 -5.786 2.26e-06 *** time_pointFMT1 -18.862 4.701 -4.012 0.000353 *** typeTreatment:time_pointFMT1 26.326 6.751 3.899 0.000483 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 9.972 on 31 degrees of freedom Multiple R-squared: 0.5397, Adjusted R-squared: 0.4951 F-statistic: 12.12 on 3 and 31 DF, p-value: 2.052e-05 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ type*time_point, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -3.07987 -0.70068 -0.07723 0.54734 2.84255 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 6.5226 0.4274 15.260 5.8e-16 *** typeTreatment -0.9826 0.6045 -1.626 0.114169 time_pointFMT1 -2.2480 0.6045 -3.719 0.000793 *** typeTreatment:time_pointFMT1 0.8981 0.8681 1.035 0.308891 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.282 on 31 degrees of freedom Multiple R-squared: 0.39, Adjusted R-squared: 0.331 F-statistic: 6.606 on 3 and 31 DF, p-value: 0.001398 10.1.3.2 Beta diversity Number of samples used samples_to_keep_post4 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post4 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) subset_meta_post4$type_time&lt;-interaction(subset_meta_post4$type, subset_meta_post4$time_point) length(samples_to_keep_post4) [1] 35 Richness richness_post4 &lt;- as.matrix(beta_q0n$S) richness_post4 &lt;- as.dist(richness_post4[rownames(richness_post4) %in% samples_to_keep_post4, colnames(richness_post4) %in% samples_to_keep_post4]) betadisper(richness_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.076276 0.076276 19.518 999 0.001 *** Residuals 33 0.128967 0.003908 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.001 Treatment 0.00010134 adonis2(richness_post4 ~ type*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zyvbojr9jfe6h7isy3qs, .table th.tinytable_css_zyvbojr9jfe6h7isy3qs { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_q3vlmkcbossuw9eaeyjx, .table th.tinytable_css_q3vlmkcbossuw9eaeyjx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 2.670820 0.2349958 3.174218 0.001 Residual 31 8.694574 0.7650042 NA NA Total 34 11.365393 1.0000000 NA NA subset_meta_post4_arrange &lt;- column_to_rownames(subset_meta_post4, &quot;Tube_code&quot;) subset_meta_post4_arrange&lt;-subset_meta_post4_arrange[labels(richness_post4),] pairwise &lt;- pairwise.adonis(richness_post4, subset_meta_post4_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xdkcihx41r32vi6u5eip, .table th.tinytable_css_xdkcihx41r32vi6u5eip { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4l2ubp19yc5gisw70e31, .table th.tinytable_css_4l2ubp19yc5gisw70e31 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment.Acclimation vs Hot_control.Acclimation 1 1.3606630 5.087152 0.2412441 0.002 0.012 . Treatment.Acclimation vs Treatment.FMT1 1 0.9551308 2.926054 0.1632291 0.001 0.006 * Treatment.Acclimation vs Hot_control.FMT1 1 1.2263345 4.039487 0.2015764 0.001 0.006 * Hot_control.Acclimation vs Treatment.FMT1 1 0.8172413 3.194690 0.1755836 0.001 0.006 * Hot_control.Acclimation vs Hot_control.FMT1 1 0.5796135 2.441615 0.1323970 0.001 0.006 * Treatment.FMT1 vs Hot_control.FMT1 1 0.3734921 1.268929 0.0779971 0.110 0.660 Neutral neutral_post4 &lt;- as.matrix(beta_q1n$S) neutral_post4 &lt;- as.dist(neutral_post4[rownames(neutral_post4) %in% samples_to_keep_post4, colnames(neutral_post4) %in% samples_to_keep_post4]) betadisper(neutral_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.087335 0.087335 15.924 999 0.003 ** Residuals 33 0.180987 0.005484 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.003 Treatment 0.00034565 adonis2(neutral_post4 ~ type, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xxa6ri3auop2jfg0ti55, .table th.tinytable_css_xxa6ri3auop2jfg0ti55 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_vwsupixy2hc38u228396, .table th.tinytable_css_vwsupixy2hc38u228396 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.332543 0.1214599 4.562313 1 Residual 33 9.638511 0.8785401 NA NA Total 34 10.971054 1.0000000 NA NA subset_meta_post4_arrange &lt;- column_to_rownames(subset_meta_post4, &quot;Tube_code&quot;) subset_meta_post4_arrange&lt;-subset_meta_post4_arrange[labels(neutral_post4),] pairwise &lt;- pairwise.adonis(neutral_post4, subset_meta_post4_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xequglxj0vva2o6kdxtz, .table th.tinytable_css_xequglxj0vva2o6kdxtz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hxyn4amlq8uzaste8w29, .table th.tinytable_css_hxyn4amlq8uzaste8w29 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment.Acclimation vs Hot_control.Acclimation 1 1.6347704 6.832689 0.29925029 0.001 0.006 * Treatment.Acclimation vs Treatment.FMT1 1 1.3127773 4.629826 0.23585668 0.001 0.006 * Treatment.Acclimation vs Hot_control.FMT1 1 1.6713369 6.239546 0.28056085 0.001 0.006 * Hot_control.Acclimation vs Treatment.FMT1 1 0.9133614 4.096453 0.21451383 0.001 0.006 * Hot_control.Acclimation vs Hot_control.FMT1 1 0.6954835 3.295123 0.17077493 0.001 0.006 * Treatment.FMT1 vs Hot_control.FMT1 1 0.4150076 1.637268 0.09840968 0.062 0.372 Phylogenetic phylo_post4 &lt;- as.matrix(beta_q1p$S) phylo_post4 &lt;- as.dist(phylo_post4[rownames(phylo_post4) %in% samples_to_keep_post4, colnames(phylo_post4) %in% samples_to_keep_post4]) betadisper(phylo_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07659 0.076588 5.0159 999 0.026 * Residuals 33 0.50388 0.015269 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.033 Treatment 0.031971 adonis2(phylo_post4 ~ type, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_l5js7rbeqaxhumvczvgh, .table th.tinytable_css_l5js7rbeqaxhumvczvgh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_k4fj9c6v68b3z2lu952e, .table th.tinytable_css_k4fj9c6v68b3z2lu952e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2070779 0.09373244 3.413088 1 Residual 33 2.0021670 0.90626756 NA NA Total 34 2.2092449 1.00000000 NA NA NMDS beta_richness_nmds_post4 &lt;- richness_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post4 &lt;- neutral_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post4 &lt;- phylo_post4 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post4, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post4, beta_neutral_nmds_post4, beta_phylogenetic_nmds_post4, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 10.1.3.3 Functional differences WC from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Hot_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; 10.2 What is the effect of FMT and temperature on the GM after 2 weeks caompared to acclimation? 10.2.1 CI vs CC 10.2.1.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type %in% c(&quot;Control&quot;,&quot;Treatment&quot;) &amp; time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) Richness Modelq0GLMMNB &lt;- MASS::glm.nb(richness ~ type*time_point, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) Call: MASS::glm.nb(formula = richness ~ type * time_point, data = alpha_div_meta, trace = TRUE, init.theta = 4.087439892, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9512 0.1816 21.756 &lt;2e-16 *** typeTreatment -0.1372 0.2502 -0.548 0.584 time_pointFMT2 0.1206 0.2491 0.484 0.628 typeTreatment:time_pointFMT2 0.4149 0.3469 1.196 0.232 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(4.0874) family taken to be 1) Null deviance: 43.336 on 34 degrees of freedom Residual deviance: 37.889 on 31 degrees of freedom AIC: 340.92 Number of Fisher Scoring iterations: 1 Theta: 4.09 Std. Err.: 1.07 2 x log-likelihood: -330.917 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Control 4.01 0.125 Inf 3.77 4.26 Treatment 4.08 0.121 Inf 3.85 4.32 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Control - Treatment -0.0702 0.173 Inf -0.405 0.6855 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Neutral Modelq1n &lt;- lm(formula = neutral ~ type*time_point, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -20.377 -6.596 2.212 6.374 21.492 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 21.373 3.672 5.820 2.05e-06 *** typeTreatment -3.974 5.047 -0.787 0.43704 time_pointFMT2 2.345 5.047 0.465 0.64552 typeTreatment:time_pointFMT2 20.138 7.032 2.864 0.00745 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 10.39 on 31 degrees of freedom Multiple R-squared: 0.4388, Adjusted R-squared: 0.3845 F-statistic: 8.08 on 3 and 31 DF, p-value: 0.0004037 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ type*time_point, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -3.6469 -0.6788 0.0109 0.4658 2.9735 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 5.22734 0.52818 9.897 4.1e-11 *** typeTreatment 0.31260 0.72591 0.431 0.670 time_pointFMT2 -0.45260 0.72591 -0.623 0.538 typeTreatment:time_pointFMT2 0.02719 1.01138 0.027 0.979 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.494 on 31 degrees of freedom Multiple R-squared: 0.03742, Adjusted R-squared: -0.05573 F-statistic: 0.4017 on 3 and 31 DF, p-value: 0.7527 10.2.1.2 Beta diversity Number of samples used samples_to_keep_post5 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post5 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) subset_meta_post5$type_time&lt;-interaction(subset_meta_post5$type, subset_meta_post5$time_point) length(samples_to_keep_post5) [1] 35 Richness richness_post5 &lt;- as.matrix(beta_q0n$S) richness_post5 &lt;- as.dist(richness_post5[rownames(richness_post5) %in% samples_to_keep_post5, colnames(richness_post5) %in% samples_to_keep_post5]) betadisper(richness_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004294 0.0042942 0.4761 999 0.488 Residuals 33 0.297625 0.0090189 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.486 Treatment 0.49501 adonis2(richness_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_qnbqx8co8bmcd7x3kkzt, .table th.tinytable_css_qnbqx8co8bmcd7x3kkzt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fvxtb9e31nid36v4k606, .table th.tinytable_css_fvxtb9e31nid36v4k606 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 3 1.912168 0.1764753 2.214358 0.001 Residual 31 8.923156 0.8235247 NA NA Total 34 10.835324 1.0000000 NA NA subset_meta_post5_arrange &lt;- column_to_rownames(subset_meta_post5, &quot;Tube_code&quot;) subset_meta_post5_arrange&lt;-subset_meta_post5_arrange[labels(richness_post5),] pairwise &lt;- pairwise.adonis(richness_post5, subset_meta_post5_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_upmfaiopedcmahslh2sq, .table th.tinytable_css_upmfaiopedcmahslh2sq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_grdma35xmar66z9luemd, .table th.tinytable_css_grdma35xmar66z9luemd { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.Acclimation vs Treatment.Acclimation 1 0.3657243 1.123239 0.06966584 0.250 1.000 Control.Acclimation vs Control.FMT2 1 0.4817387 1.660775 0.09968176 0.031 0.186 Control.Acclimation vs Treatment.FMT2 1 0.8072604 2.940901 0.16392161 0.003 0.018 . Treatment.Acclimation vs Control.FMT2 1 0.5959230 1.984036 0.11032208 0.002 0.012 . Treatment.Acclimation vs Treatment.FMT2 1 0.9130048 3.195028 0.16645080 0.001 0.006 * Control.FMT2 vs Treatment.FMT2 1 0.6463814 2.560441 0.13795154 0.001 0.006 * Neutral neutral_post5 &lt;- as.matrix(beta_q1n$S) neutral_post5 &lt;- as.dist(neutral_post5[rownames(neutral_post5) %in% samples_to_keep_post5, colnames(neutral_post5) %in% samples_to_keep_post5]) betadisper(neutral_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.034255 0.034255 3.9748 999 0.055 . Residuals 33 0.284399 0.008618 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.051 Treatment 0.054506 adonis2(neutral_post5 ~ type, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_n02xo7zp855yrblo2als, .table th.tinytable_css_n02xo7zp855yrblo2als { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_41s8p3wwr78e837y3ifn, .table th.tinytable_css_41s8p3wwr78e837y3ifn { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.642454 0.06322634 2.227293 1 Residual 33 9.518722 0.93677366 NA NA Total 34 10.161176 1.00000000 NA NA subset_meta_post5_arrange &lt;- column_to_rownames(subset_meta_post5, &quot;Tube_code&quot;) subset_meta_post5_arrange&lt;-subset_meta_post5_arrange[labels(neutral_post5),] pairwise &lt;- pairwise.adonis(neutral_post5, subset_meta_post5_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_z3btk0dexo1og70pzmf6, .table th.tinytable_css_z3btk0dexo1og70pzmf6 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ao0irp265zjiku95dnnu, .table th.tinytable_css_ao0irp265zjiku95dnnu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control.Acclimation vs Treatment.Acclimation 1 0.2759858 0.9928976 0.06208366 0.450 1.000 Control.Acclimation vs Control.FMT2 1 0.4748999 1.9609749 0.11561688 0.002 0.012 . Control.Acclimation vs Treatment.FMT2 1 1.1524353 4.9536068 0.24825621 0.001 0.006 * Treatment.Acclimation vs Control.FMT2 1 0.6311089 2.4041625 0.13063146 0.002 0.012 . Treatment.Acclimation vs Treatment.FMT2 1 1.3540292 5.3398081 0.25022756 0.001 0.006 * Control.FMT2 vs Treatment.FMT2 1 1.0227481 4.6483346 0.22511910 0.001 0.006 * Phylogenetic phylo_post5 &lt;- as.matrix(beta_q1p$S) phylo_post5 &lt;- as.dist(phylo_post5[rownames(phylo_post5) %in% samples_to_keep_post5, colnames(phylo_post5) %in% samples_to_keep_post5]) betadisper(phylo_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02670 0.026703 1.6775 999 0.211 Residuals 33 0.52532 0.015919 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.233 Treatment 0.20425 adonis2(phylo_post5 ~ type, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_9qk78kjt0i9lfnp4ejpp, .table th.tinytable_css_9qk78kjt0i9lfnp4ejpp { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_25z8w88t8nonj4rkmnqn, .table th.tinytable_css_25z8w88t8nonj4rkmnqn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.03644585 0.01867131 0.6278766 1 Residual 33 1.91552466 0.98132869 NA NA Total 34 1.95197051 1.00000000 NA NA NMDS beta_richness_nmds_post5 &lt;- richness_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post5 &lt;- neutral_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post5 &lt;- phylo_post5 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post5, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post5, beta_neutral_nmds_post5, beta_phylogenetic_nmds_post5, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 10.2.1.3 Functional differences CC from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; CI from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Treatment&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 17 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0103 0.000787 0.0230 Biosynthesis Nucleic acid biosynthesis_UDP/UTP UDP/UTP 2 B0214 0.000494 0.0230 Biosynthesis Amino acid biosynthesis_Glutamate Glutamate 3 D0102 0.000782 0.0230 Degradation Lipid degradation_Fatty acid Fatty acid 4 D0205 0.00399 0.0448 Degradation Polysaccharide degradation_Pectin Pectin 5 D0210 0.00123 0.0234 Degradation Polysaccharide degradation_Beta-mannan Beta-mannan 6 D0308 0.00276 0.0366 Degradation Sugar degradation_L-Rhamnose L-Rhamnose 7 D0512 0.000494 0.0230 Degradation Amino acid degradation_Histidine Histidine 8 D0513 0.00564 0.0484 Degradation Amino acid degradation_Tryptophan Tryptophan 9 D0601 0.000494 0.0230 Degradation Nitrogen compound degradation_Nitrate Nitrate 10 D0613 0.00564 0.0484 Degradation Nitrogen compound degradation_Taurine Taurine 11 D0706 0.00564 0.0484 Degradation Alcohol degradation_Ethylene glycol Ethylene glycol 12 D0708 0.00185 0.0270 Degradation Alcohol degradation_Phytol Phytol 13 D0801 0.00145 0.0234 Degradation Xenobiotic degradation_Toluene Toluene 14 D0802 0.00145 0.0234 Degradation Xenobiotic degradation_Xylene Xylene 15 D0901 0.00564 0.0484 Degradation Antibiotic degradation_Penicillin Penicillin 16 D0902 0.00108 0.0234 Degradation Antibiotic degradation_Carbapenem Carbapenem 17 S0105 0.00399 0.0448 Structure Cellular structure_Lipopolysaccharide Lipopolysaccharide 10.2.2 CI vs WC 10.2.2.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=8))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) Richness Modelq0GLMMNB &lt;- glm.nb(richness ~ type*time_point, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) emmeans(Modelq0GLMMNB, pairwise ~ type) Neutral Modelq1n &lt;- lm(formula = neutral ~ type*time_point, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -20.377 -5.358 2.158 5.663 19.246 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 44.601 3.158 14.122 2.68e-15 *** typeTreatment -27.202 4.467 -6.090 8.36e-07 *** time_pointFMT2 -12.401 4.467 -2.776 0.00911 ** typeTreatment:time_pointFMT2 34.884 6.317 5.522 4.34e-06 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 9.475 on 32 degrees of freedom Multiple R-squared: 0.571, Adjusted R-squared: 0.5308 F-statistic: 14.2 on 3 and 32 DF, p-value: 4.69e-06 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ type*time_point, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ type * time_point, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -3.0799 -0.7676 -0.0971 0.5549 2.9735 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 6.5226 0.4747 13.741 5.7e-15 *** typeTreatment -0.9826 0.6713 -1.464 0.153 time_pointFMT2 -1.0666 0.6713 -1.589 0.122 typeTreatment:time_pointFMT2 0.6412 0.9494 0.675 0.504 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.424 on 32 degrees of freedom Multiple R-squared: 0.1321, Adjusted R-squared: 0.05075 F-statistic: 1.624 on 3 and 32 DF, p-value: 0.2033 10.2.2.2 Beta diversity Number of samples used samples_to_keep_post6 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post6 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) subset_meta_post6$type_time&lt;-interaction(subset_meta_post6$type, subset_meta_post6$time_point) length(samples_to_keep_post6) [1] 36 Richness richness_post6 &lt;- as.matrix(beta_q0n$S) richness_post6 &lt;- as.dist(richness_post6[rownames(richness_post6) %in% samples_to_keep_post6, colnames(richness_post6) %in% samples_to_keep_post6]) betadisper(richness_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.054351 0.054351 9.1422 999 0.005 ** Residuals 34 0.202132 0.005945 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.005 Treatment 0.0047271 adonis2(richness_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_f0zf6n7lz8158paups9l, .table th.tinytable_css_f0zf6n7lz8158paups9l { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_008xqo3uvzkbpi6zctrt, .table th.tinytable_css_008xqo3uvzkbpi6zctrt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 2.497711 0.231669 3.216239 0.001 Residual 32 8.283665 0.768331 NA NA Total 35 10.781376 1.000000 NA NA subset_meta_post6_arrange &lt;- column_to_rownames(subset_meta_post6, &quot;Tube_code&quot;) subset_meta_post6_arrange&lt;-subset_meta_post6_arrange[labels(richness_post6),] pairwise &lt;- pairwise.adonis(richness_post6, subset_meta_post6_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ruz9z9h43gtq848ow32t, .table th.tinytable_css_ruz9z9h43gtq848ow32t { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ob11bhwyfi3ccm51mjew, .table th.tinytable_css_ob11bhwyfi3ccm51mjew { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment.Acclimation vs Hot_control.Acclimation 1 1.3606630 5.087152 0.24124415 0.001 0.006 * Treatment.Acclimation vs Treatment.FMT2 1 0.9130048 3.195028 0.16645080 0.001 0.006 * Treatment.Acclimation vs Hot_control.FMT2 1 1.2747787 4.275366 0.21086503 0.001 0.006 * Hot_control.Acclimation vs Treatment.FMT2 1 0.6397330 2.913695 0.15405213 0.001 0.006 * Hot_control.Acclimation vs Hot_control.FMT2 1 0.3276169 1.412318 0.08111028 0.042 0.252 Treatment.FMT2 vs Hot_control.FMT2 1 0.4796256 1.916520 0.10696943 0.001 0.006 * Neutral neutral_post6 &lt;- as.matrix(beta_q1n$S) neutral_post6 &lt;- as.dist(neutral_post6[rownames(neutral_post6) %in% samples_to_keep_post6, colnames(neutral_post6) %in% samples_to_keep_post6]) betadisper(neutral_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.078328 0.078328 12.006 999 0.002 ** Residuals 34 0.221814 0.006524 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.004 Treatment 0.0014541 adonis2(neutral_post6 ~ type, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ov8p6edmajbwrv2eq9zh, .table th.tinytable_css_ov8p6edmajbwrv2eq9zh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_22rqyvvcvazqw37ciq4q, .table th.tinytable_css_22rqyvvcvazqw37ciq4q { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.325563 0.1261942 4.910249 1 Residual 34 9.178585 0.8738058 NA NA Total 35 10.504148 1.0000000 NA NA subset_meta_post6_arrange &lt;- column_to_rownames(subset_meta_post6, &quot;Tube_code&quot;) subset_meta_post6_arrange&lt;-subset_meta_post6_arrange[labels(neutral_post6),] pairwise &lt;- pairwise.adonis(neutral_post6, subset_meta_post6_arrange$type_time, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_vj532nvb8indd1jitiw0, .table th.tinytable_css_vj532nvb8indd1jitiw0 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9qbyiug1baoth4sa8w1r, .table th.tinytable_css_9qbyiug1baoth4sa8w1r { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Treatment.Acclimation vs Hot_control.Acclimation 1 1.6347704 6.832689 0.29925029 0.001 0.006 * Treatment.Acclimation vs Treatment.FMT2 1 1.3540292 5.339808 0.25022756 0.001 0.006 * Treatment.Acclimation vs Hot_control.FMT2 1 1.6125755 5.982598 0.27215155 0.001 0.006 * Hot_control.Acclimation vs Treatment.FMT2 1 0.6202327 3.151987 0.16457754 0.001 0.006 * Hot_control.Acclimation vs Hot_control.FMT2 1 0.3634438 1.708339 0.09647087 0.026 0.156 Treatment.FMT2 vs Hot_control.FMT2 1 0.5010202 2.206532 0.12119453 0.001 0.006 * Phylogenetic phylo_post6 &lt;- as.matrix(beta_q1p$S) phylo_post6 &lt;- as.dist(phylo_post6[rownames(phylo_post6) %in% samples_to_keep_post6, colnames(phylo_post6) %in% samples_to_keep_post6]) betadisper(phylo_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04938 0.049381 3.8729 999 0.048 * Residuals 34 0.43351 0.012750 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.034 Treatment 0.057271 adonis2(phylo_post6 ~ type, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nfn92de6sdn79asszwrh, .table th.tinytable_css_nfn92de6sdn79asszwrh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7xwp1sx2dsfixwp5fgpa, .table th.tinytable_css_7xwp1sx2dsfixwp5fgpa { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.1600877 0.08395907 3.116245 1 Residual 34 1.7466474 0.91604093 NA NA Total 35 1.9067351 1.00000000 NA NA NMDS beta_richness_nmds_post6 &lt;- richness_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post6 &lt;- neutral_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post6 &lt;- phylo_post6 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post6, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post6, beta_neutral_nmds_post6, beta_phylogenetic_nmds_post6, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 10.2.2.3 Functional differences WC from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Hot_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
>>>>>>> d08d3ecaca65f0411fd9dfdf7dedf41ce523b6b2
