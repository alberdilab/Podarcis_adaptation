[["index.html", "AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Garazi Martin-Bideguren1, Ostaizka Aizpurua2, Carlos Cabido3 and Antton Alberdi4 Last update: 2024-06-20 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering 4 samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;, &quot;AD23&quot;, &quot;AD25&quot;, &quot;AD91&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) ##Removal of samples of individual LI1_2nd_6 #Counts_raw columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AFV13&quot;) %&gt;% filter(Tube_code != &quot;AD06&quot;) %&gt;% filter(Tube_code != &quot;AD31&quot;) %&gt;% filter(Tube_code != &quot;AE03&quot;) %&gt;% filter(Tube_code != &quot;AF12&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AFV13&quot;,&quot;AD06&quot;, &quot;AD31&quot;, &quot;AE03&quot;, &quot;AF12&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19)) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 4855690940 data_stats$raw_reads %&gt;% mean() [1] 28067578 data_stats$raw_reads %&gt;% sd() [1] 13132040 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.438 0.207 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, species, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_ihvwilkxcyc3v31rzr5u .table td.tinytable_css_j517iefgnzy53jt6cj6o, .table th.tinytable_css_j517iefgnzy53jt6cj6o { border-bottom: solid 0.1em #d3d8dc; } sample damr time_point species type AC79 1.0000000 1_Acclimation Podarcis_muralis Control AC80 1.0000000 1_Acclimation Podarcis_muralis Treatment AC81 0.9813013 1_Acclimation Podarcis_muralis Treatment AC82 0.7490771 1_Acclimation Podarcis_muralis Treatment AC83 1.0000000 1_Acclimation Podarcis_muralis Control AC84 1.0000000 1_Acclimation Podarcis_muralis Control AC85 0.8363777 1_Acclimation Podarcis_muralis Control AC86 0.8800275 1_Acclimation Podarcis_muralis Control AC87 0.9672854 1_Acclimation Podarcis_muralis Treatment AC88 0.3142108 1_Acclimation Podarcis_muralis Control AC89 0.9338962 1_Acclimation Podarcis_muralis Treatment AC90 1.0000000 1_Acclimation Podarcis_muralis Control AC91 1.0000000 1_Acclimation Podarcis_muralis Control AC92 1.0000000 1_Acclimation Podarcis_muralis Control AC93 1.0000000 1_Acclimation Podarcis_muralis Treatment AC94 0.9159348 1_Acclimation Podarcis_muralis Treatment AC95 0.9239904 1_Acclimation Podarcis_muralis Treatment AC96 0.9425962 1_Acclimation Podarcis_muralis Treatment AC97 0.9394886 1_Acclimation Podarcis_liolepis Hot_control AC98 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AC99 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD01 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD02 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD03 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD04 0.8896057 1_Acclimation Podarcis_liolepis Hot_control AD05 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD07 0.9515379 1_Acclimation Podarcis_liolepis Hot_control AD08 0.7045003 2_Antibiotics Podarcis_muralis Control AD09 1.0000000 2_Antibiotics Podarcis_muralis Control AD10 0.9598720 2_Antibiotics Podarcis_muralis Control AD11 0.6230176 2_Antibiotics Podarcis_muralis Control AD12 0.7487463 2_Antibiotics Podarcis_muralis Control AD13 1.0000000 2_Antibiotics Podarcis_muralis Control AD14 0.4536529 2_Antibiotics Podarcis_muralis Control AD15 1.0000000 2_Antibiotics Podarcis_muralis Control AD17 0.8774871 2_Antibiotics Podarcis_muralis Treatment AD18 0.4991585 2_Antibiotics Podarcis_muralis Treatment AD19 0.4060523 2_Antibiotics Podarcis_muralis Treatment AD20 0.5227482 2_Antibiotics Podarcis_muralis Treatment AD21 0.6551882 2_Antibiotics Podarcis_muralis Treatment AD22 0.9106725 2_Antibiotics Podarcis_muralis Treatment AD24 0.5972915 2_Antibiotics Podarcis_muralis Treatment AD26 0.9204825 2_Antibiotics Podarcis_liolepis Hot_control AD27 0.5215059 2_Antibiotics Podarcis_liolepis Hot_control AD28 0.8180607 2_Antibiotics Podarcis_liolepis Hot_control AD29 0.7175978 2_Antibiotics Podarcis_liolepis Hot_control AD30 0.9937574 2_Antibiotics Podarcis_liolepis Hot_control AD32 0.6710817 2_Antibiotics Podarcis_liolepis Hot_control AD33 0.6778368 2_Antibiotics Podarcis_liolepis Hot_control AD34 0.4642326 2_Antibiotics Podarcis_liolepis Hot_control AD36 0.8288365 3_Transplant1 Podarcis_muralis Control AD37 0.9530848 3_Transplant1 Podarcis_muralis Control AD38 0.9247925 3_Transplant1 Podarcis_muralis Control AD39 1.0000000 3_Transplant1 Podarcis_muralis Control AD40 0.9991552 3_Transplant1 Podarcis_muralis Control AD41 0.9550964 3_Transplant1 Podarcis_muralis Control AD42 1.0000000 3_Transplant1 Podarcis_muralis Control AD43 1.0000000 3_Transplant1 Podarcis_muralis Control AD44 0.9108807 3_Transplant1 Podarcis_muralis Control AD46 0.8708468 3_Transplant1 Podarcis_muralis Treatment AD47 0.8328653 3_Transplant1 Podarcis_muralis Treatment AD49 0.8940294 3_Transplant1 Podarcis_muralis Treatment AD50 0.8757711 3_Transplant1 Podarcis_muralis Treatment AD51 0.8479193 3_Transplant1 Podarcis_muralis Treatment AD52 0.8596870 3_Transplant1 Podarcis_muralis Treatment AD53 0.8528974 3_Transplant1 Podarcis_muralis Treatment AD54 1.0000000 3_Transplant1 Podarcis_liolepis Hot_control AD55 1.0000000 4_Transplant2 Podarcis_muralis Control AD56 0.9327538 4_Transplant2 Podarcis_muralis Control AD57 1.0000000 4_Transplant2 Podarcis_muralis Control AD58 1.0000000 4_Transplant2 Podarcis_muralis Control AD59 1.0000000 4_Transplant2 Podarcis_muralis Control AD60 0.7988844 4_Transplant2 Podarcis_muralis Control AD61 1.0000000 4_Transplant2 Podarcis_muralis Control AD62 1.0000000 4_Transplant2 Podarcis_muralis Control AD63 0.8992048 4_Transplant2 Podarcis_muralis Control AD65 1.0000000 4_Transplant2 Podarcis_muralis Treatment AD66 0.8821027 4_Transplant2 Podarcis_muralis Treatment AD68 0.8820274 4_Transplant2 Podarcis_muralis Treatment AD70 0.9590793 4_Transplant2 Podarcis_muralis Treatment AD71 0.8360540 4_Transplant2 Podarcis_muralis Treatment AD72 0.8835253 4_Transplant2 Podarcis_muralis Treatment AD73 1.0000000 4_Transplant2 Podarcis_liolepis Hot_control AD74 0.9017271 5_Post-FMT1 Podarcis_muralis Control AD75 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD76 0.9862581 5_Post-FMT1 Podarcis_muralis Treatment AD77 0.8963376 5_Post-FMT1 Podarcis_muralis Treatment AD78 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD79 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD80 0.8808155 5_Post-FMT1 Podarcis_muralis Treatment AD81 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD82 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD83 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD84 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD85 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD86 0.9889084 5_Post-FMT1 Podarcis_muralis Control AD87 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD88 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD89 0.9562489 5_Post-FMT1 Podarcis_muralis Control AD90 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD93 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AD94 0.7947750 5_Post-FMT1 Podarcis_liolepis Hot_control AD95 0.9506977 5_Post-FMT1 Podarcis_liolepis Hot_control AD96 0.9171413 5_Post-FMT1 Podarcis_liolepis Hot_control AD97 0.9257685 5_Post-FMT1 Podarcis_liolepis Hot_control AD98 0.9048349 5_Post-FMT1 Podarcis_liolepis Hot_control AD99 0.9966152 5_Post-FMT1 Podarcis_liolepis Hot_control AE01 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE02 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE04 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE05 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE06 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE07 0.7797794 6_Post-FMT2 Podarcis_muralis Control AE08 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE09 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE91 0.9259146 6_Post-FMT2 Podarcis_muralis Treatment AE92 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE93 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE94 0.9152960 6_Post-FMT2 Podarcis_muralis Treatment AE95 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE96 0.7786112 6_Post-FMT2 Podarcis_muralis Treatment AE97 0.9365037 6_Post-FMT2 Podarcis_muralis Control AE98 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE99 0.8513354 6_Post-FMT2 Podarcis_muralis Treatment AF01 0.9046369 6_Post-FMT2 Podarcis_muralis Treatment AF02 1.0000000 6_Post-FMT2 Podarcis_muralis Control AF03 0.9030087 6_Post-FMT2 Podarcis_muralis Treatment AF04 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF05 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF06 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF07 0.9526443 6_Post-FMT2 Podarcis_liolepis Hot_control AF08 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF09 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF10 0.9716162 6_Post-FMT2 Podarcis_liolepis Hot_control AF11 0.9654152 6_Post-FMT2 Podarcis_liolepis Hot_control AF13 0.8818742 6_Post-FMT2 Podarcis_liolepis Hot_control AFU87 0.8810513 0_Wild Podarcis_muralis Control AFU88 0.8317800 0_Wild Podarcis_muralis Treatment AFU91 0.8923699 0_Wild Podarcis_muralis Treatment AFU92 0.8094776 0_Wild Podarcis_muralis Treatment AFU93 0.8517368 0_Wild Podarcis_muralis Control AFU94 0.8325385 0_Wild Podarcis_muralis Treatment AFU95 0.8419270 0_Wild Podarcis_muralis Treatment AFU96 0.8326820 0_Wild Podarcis_muralis Control AFU97 0.8107271 0_Wild Podarcis_muralis Treatment AFU98 0.7506522 0_Wild Podarcis_muralis Control AFU99 0.8582371 0_Wild Podarcis_muralis Treatment AFV01 0.9331539 0_Wild Podarcis_muralis Treatment AFV02 0.8316460 0_Wild Podarcis_muralis Treatment AFV03 0.8752591 0_Wild Podarcis_muralis Control AFV04 0.9180285 0_Wild Podarcis_muralis Control AFV05 1.0000000 0_Wild Podarcis_muralis Control AFV06 1.0000000 0_Wild Podarcis_muralis Control AFV07 0.8460805 0_Wild Podarcis_muralis Control AFV08 0.7497043 0_Wild Podarcis_liolepis Hot_control AFV09 0.5412999 0_Wild Podarcis_liolepis Hot_control AFV10 0.8002499 0_Wild Podarcis_liolepis Hot_control AFV11 0.8225298 0_Wild Podarcis_liolepis Hot_control AFV12 0.7925988 0_Wild Podarcis_liolepis Hot_control AFV14 0.8106269 0_Wild Podarcis_liolepis Hot_control AFV15 0.9691106 0_Wild Podarcis_liolepis Hot_control AFV16 0.8218990 0_Wild Podarcis_liolepis Hot_control AFV17 0.8091152 0_Wild Podarcis_liolepis Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample transplants_metadata&lt;-sample_metadata%&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, &quot;_&quot;, transplants_metadata$individual) merged_data&lt;-genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., transplants_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes(x=newID,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ time_point + type , scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text(angle = 45, hjust = 1, size=0)) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_gb3u0lrpb7k942y9efbd .table td.tinytable_css_dzgwwb5qp6sz6uvxciwy, .table th.tinytable_css_dzgwwb5qp6sz6uvxciwy { border-bottom: solid 0.1em #d3d8dc; } phylum mean sd p__Bacteroidota 0.387533390 0.199408886 p__Bacillota_A 0.247736092 0.157285090 p__Bacillota 0.119551625 0.147933278 p__Pseudomonadota 0.094124112 0.158574923 p__Campylobacterota 0.054878320 0.094197988 p__Verrucomicrobiota 0.027807574 0.066974042 p__Desulfobacterota 0.023737705 0.036771812 p__Chlamydiota 0.010961883 0.060750276 p__Fusobacteriota 0.010557257 0.028638395 p__Cyanobacteriota 0.009276509 0.016635288 p__Bacillota_C 0.004811016 0.006724154 p__Spirochaetota 0.004098862 0.012506256 p__Bacillota_B 0.002556218 0.004994779 p__Actinomycetota 0.001281229 0.006458780 p__Elusimicrobiota 0.001088209 0.006278019 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_6fzw5as7w2i4rhiswly2 .table td.tinytable_css_0i5qb0ox873l3qtahm4g, .table th.tinytable_css_0i5qb0ox873l3qtahm4g { border-bottom: solid 0.1em #d3d8dc; } family mean sd f__Bacteroidaceae 2.260146e-01 0.1384706235 f__Lachnospiraceae 1.410833e-01 0.1062953893 f__Tannerellaceae 1.045659e-01 0.0799894745 f__Helicobacteraceae 5.448546e-02 0.0937279764 f__Mycoplasmoidaceae 3.756572e-02 0.0767893776 f__Erysipelotrichaceae 3.536287e-02 0.0452140267 f__UBA3700 3.456595e-02 0.0565495010 f__Marinifilaceae 2.794365e-02 0.0272474083 f__Rikenellaceae 2.725202e-02 0.0471735191 f__Enterobacteriaceae 2.687327e-02 0.0929254305 f__Coprobacillaceae 2.627823e-02 0.0907456387 f__ 2.465083e-02 0.0781013121 f__Desulfovibrionaceae 2.373771e-02 0.0367718116 f__DTU072 2.183007e-02 0.0377159876 f__Ruminococcaceae 1.832093e-02 0.0428115194 f__Rhizobiaceae 1.579679e-02 0.0779688169 f__LL51 1.556592e-02 0.0616955422 f__UBA3830 1.512118e-02 0.0441855701 f__Akkermansiaceae 1.224165e-02 0.0317653885 f__Chlamydiaceae 1.096188e-02 0.0607502761 f__Fusobacteriaceae 1.055726e-02 0.0286383947 f__CAG-239 9.138683e-03 0.0152490206 f__Enterococcaceae 8.437601e-03 0.0473906561 f__Gastranaerophilaceae 7.848357e-03 0.0146292952 f__Oscillospiraceae 6.624721e-03 0.0075288565 f__UBA1997 6.613196e-03 0.0315103296 f__Streptococcaceae 6.600789e-03 0.0348230465 f__UBA1242 4.266475e-03 0.0147768596 f__Brevinemataceae 4.098862e-03 0.0125062564 f__Acutalibacteraceae 3.498766e-03 0.0111374416 f__RUG11792 2.921450e-03 0.0255676374 f__Clostridiaceae 2.855351e-03 0.0174153876 f__UBA660 2.600647e-03 0.0118148140 f__Peptococcaceae 2.556218e-03 0.0049947786 f__Acidaminococcaceae 1.980431e-03 0.0051045211 f__CAG-508 1.874529e-03 0.0065256902 f__MGBC116941 1.783700e-03 0.0077801927 f__Moraxellaceae 1.540093e-03 0.0099192011 f__RUG14156 1.428152e-03 0.0045670616 f__Staphylococcaceae 1.411833e-03 0.0051727635 f__Anaerovoracaceae 1.410739e-03 0.0027876311 f__Elusimicrobiaceae 1.088209e-03 0.0062780187 f__CAG-288 9.840222e-04 0.0061275213 f__Anaerotignaceae 9.320656e-04 0.0041174457 f__CALVMC01 7.793540e-04 0.0044385554 f__Eggerthellaceae 6.643755e-04 0.0021620275 f__Massilibacillaceae 6.322621e-04 0.0016561037 f__Mycobacteriaceae 6.168531e-04 0.0061497354 f__UBA1820 4.705627e-04 0.0013078764 f__CAG-274 4.686117e-04 0.0022415212 f__Arcobacteraceae 3.928587e-04 0.0050156837 f__Burkholderiaceae_C 3.835606e-04 0.0048969735 f__Muribaculaceae 3.508548e-04 0.0009525792 f__UBA932 3.295199e-04 0.0011408058 f__Hepatoplasmataceae 3.099135e-04 0.0039567109 f__Rhodobacteraceae 3.068016e-04 0.0039169801 f__Weeksellaceae 2.873650e-04 0.0032049404 f__Eubacteriaceae 1.707442e-04 0.0006844943 f__Sphingobacteriaceae 1.561202e-04 0.0012685229 f__Devosiaceae 1.544841e-04 0.0015368528 f__Pumilibacteraceae 1.324439e-04 0.0007783049 f__WRAU01 9.956857e-05 0.0012712064 f__Peptostreptococcaceae 2.371535e-05 0.0003027773 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_lnq3sthy68g6tz9iqggy .table td.tinytable_css_0xrp1qx1v3iekpc9bmd4, .table th.tinytable_css_0xrp1qx1v3iekpc9bmd4 { border-bottom: solid 0.1em #d3d8dc; } genus mean sd g__Bacteroides 1.374441e-01 0.0923562611 g__Parabacteroides 9.843371e-02 0.0803813676 g__Phocaeicola 7.109518e-02 0.0799972428 g__Helicobacter_J 3.115738e-02 0.0603033642 g__Mycoplasmoides 3.115302e-02 0.0765633496 g__Odoribacter 2.605667e-02 0.0268723184 g__Roseburia 2.425344e-02 0.0567044550 g__NHYM01 2.332808e-02 0.0810376677 g__Alistipes 2.224698e-02 0.0287419149 g__Coprobacillus 2.070109e-02 0.0894282233 g__Agrobacterium 1.579679e-02 0.0779688169 g__Akkermansia 1.224165e-02 0.0317653885 g__Fusobacterium_A 1.046073e-02 0.0286441117 g__Kineothrix 9.107908e-03 0.0416218616 g__Proteus 8.976683e-03 0.0694135711 g__Dielma 8.687357e-03 0.0090713197 g__CAG-95 8.238073e-03 0.0207930753 g__JAAYNV01 7.265789e-03 0.0179169564 g__Desulfovibrio 7.219276e-03 0.0214990147 g__UBA866 7.016767e-03 0.0295145125 g__Enterococcus 6.966137e-03 0.0463712943 g__Lactococcus 6.600789e-03 0.0348230465 g__Ureaplasma 6.412700e-03 0.0139267552 g__Parabacteroides_B 6.132159e-03 0.0101543965 g__Lacrimispora 6.028411e-03 0.0098068179 g__CALXRO01 5.977964e-03 0.0313982647 g__Citrobacter 5.896711e-03 0.0340533686 g__NSJ-61 5.745781e-03 0.0202234473 g__Breznakia 5.530147e-03 0.0240721461 g__Clostridium_AQ 5.522246e-03 0.0123487838 g__Bilophila 5.044501e-03 0.0089558435 g__Hungatella_A 4.964136e-03 0.0096921078 g__Escherichia 4.342538e-03 0.0270859242 g__Salmonella 4.319018e-03 0.0148769561 g__UMGS1251 4.312965e-03 0.0073601071 g__MGBC136627 4.305492e-03 0.0164533523 g__Hungatella 4.150386e-03 0.0194068227 g__Clostridium_Q 4.146767e-03 0.0052575243 g__Brevinema 4.098862e-03 0.0125062564 g__Thomasclavelia 4.046233e-03 0.0110779301 g__Scatousia 3.752075e-03 0.0104403539 g__Mailhella 3.745039e-03 0.0104110785 g__Copromonas 3.643508e-03 0.0050495456 g__Enterocloster 3.613702e-03 0.0047492729 g__Ventrimonas 3.566172e-03 0.0071931788 g__Fournierella 3.313097e-03 0.0063192740 g__Limenecus 3.230504e-03 0.0066725343 g__Mucinivorans 3.006847e-03 0.0379999623 g__Lawsonia 2.916613e-03 0.0103686789 g__MGBC133411 2.902785e-03 0.0074333461 g__Caccovivens 2.887473e-03 0.0112659902 g__Sarcina 2.855351e-03 0.0174153876 g__Eisenbergiella 2.796704e-03 0.0069384489 g__Bacteroides_G 2.781473e-03 0.0352463088 g__CAJLXD01 2.730769e-03 0.0088951735 g__Acetatifactor 2.654208e-03 0.0055286194 g__Blautia 2.598789e-03 0.0062369300 g__Velocimicrobium 2.235984e-03 0.0067748392 g__C-19 2.235603e-03 0.0048296119 g__CAZU01 2.189719e-03 0.0066369837 g__Negativibacillus 2.145239e-03 0.0056002700 g__Intestinimonas 2.003816e-03 0.0035552824 g__Rikenella 1.998193e-03 0.0037323264 g__Phascolarctobacterium 1.980431e-03 0.0051045211 g__Butyricimonas 1.886974e-03 0.0042483569 g__RGIG6463 1.855727e-03 0.0040258495 g__MGBC116941 1.783700e-03 0.0077801927 g__JALFVM01 1.712574e-03 0.0038669765 g__Oscillibacter 1.546231e-03 0.0025273862 g__Acinetobacter 1.540093e-03 0.0099192011 g__Pseudoflavonifractor 1.489286e-03 0.0027026675 g__Citrobacter_A 1.444197e-03 0.0061395639 g__Staphylococcus 1.411833e-03 0.0051727635 g__14-2 1.228249e-03 0.0098038984 g__RGIG4733 1.225656e-03 0.0038271024 g__Beduini 1.217163e-03 0.0025500013 g__Scatocola 1.162463e-03 0.0045748144 g__Enterococcus_A 1.123893e-03 0.0100947603 g__UBA1436 1.088209e-03 0.0062780187 g__Faecisoma 1.057958e-03 0.0056043491 g__RGIG9287 9.993630e-04 0.0094920364 g__CAG-345 9.840222e-04 0.0061275213 g__Lachnotalea 9.593025e-04 0.0033990676 g__Blautia_A 9.546974e-04 0.0029560949 g__Ruthenibacterium 8.602962e-04 0.0024818365 g__CAG-269 8.276280e-04 0.0048017072 g__Marseille-P3106 8.230475e-04 0.0017874580 g__WRHT01 6.666234e-04 0.0027445999 g__Eggerthella 6.643755e-04 0.0021620275 g__CHH4-2 6.371240e-04 0.0020328940 g__Corynebacterium 6.168531e-04 0.0061497354 g__Serratia_A 6.076344e-04 0.0077577570 g__Anaerotruncus 6.058602e-04 0.0016447558 g__RUG14156 5.735678e-04 0.0021869659 g__RGIG1896 5.683407e-04 0.0051791669 g__IOR16 5.574841e-04 0.0016418264 g__Faecimonas 5.146607e-04 0.0054508437 g__CAG-56 5.096368e-04 0.0016613952 g__MGBC140009 4.851579e-04 0.0024491799 g__CALURL01 4.805911e-04 0.0017020401 g__Merdimorpha 4.705627e-04 0.0013078764 g__RGIG8482 4.560993e-04 0.0030287706 g__Enterobacter 4.223379e-04 0.0042068345 g__Klebsiella 4.203682e-04 0.0049802041 g__Caccenecus 4.086273e-04 0.0018112589 g__Aliarcobacter 3.928587e-04 0.0050156837 g__Scatenecus 3.851876e-04 0.0018282510 g__Alcaligenes 3.835606e-04 0.0048969735 g__Plesiomonas 3.766988e-04 0.0027593254 g__JAHHSE01 3.529590e-04 0.0014998851 g__HGM05232 3.508548e-04 0.0009525792 g__Enterococcus_B 3.475714e-04 0.0022665993 g__Egerieousia 3.295199e-04 0.0011408058 g__Stoquefichus 3.137462e-04 0.0020871798 g__Hepatoplasma 3.099135e-04 0.0039567109 g__Paracoccus 3.068016e-04 0.0039169801 g__Moheibacter 2.873650e-04 0.0032049404 g__Scatomorpha 2.738230e-04 0.0010358302 g__Emergencia 2.601331e-04 0.0013298673 g__UBA7185 2.523935e-04 0.0014817660 g__Eubacterium 1.707442e-04 0.0006844943 g__Sphingobacterium 1.561202e-04 0.0012685229 g__Devosia 1.544841e-04 0.0015368528 g__Anaerosporobacter 1.507638e-04 0.0012978048 g__Caccomorpha 1.434035e-04 0.0010730603 g__UBA2658 1.355578e-04 0.0007332702 g__Protoclostridium 1.324439e-04 0.0007783049 g__Angelakisella 1.315171e-04 0.0009387427 g__Cetobacterium_A 9.652924e-05 0.0008876688 g__Rahnella 6.708891e-05 0.0008565338 g__Peptostreptococcus 2.371535e-05 0.0003027773 genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["diversity-analysis.html", "Chapter 6 Diversity analysis 6.1 Alpha diversity 6.2 Beta diversity 6.3 Permanovas", " Chapter 6 Diversity analysis 6.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) 6.1.1 Wild samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.1.2 Acclimation samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.1.3 Antibiotics samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;2_Antibiotics&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.1.4 Transplant_1 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;3_Transplant1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.1.5 Transplant_2 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;4_Transplant2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.1.6 Post-Transplant_1 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.1.7 Post-Transplant_2 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 6.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) beta_q1f &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, dist = dist) 6.3 Permanovas 6.3.0.1 Load required data meta &lt;- column_to_rownames(sample_metadata, &quot;Tube_code&quot;) 6.3.1 1. Are the wild populations similar? 6.3.1.1 Wild: P.muralis vs P.liolepis wild &lt;- meta %&gt;% filter(time_point == &quot;0_Wild&quot;) # Create a temporary modified version of genome_counts_filt temp_genome_counts &lt;- transform(genome_counts_filt, row.names = genome_counts_filt$genome) temp_genome_counts$genome &lt;- NULL wild.counts &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(wild))] identical(sort(colnames(wild.counts)), sort(as.character(rownames(wild)))) wild_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;0_Wild&quot;) 6.3.1.2 Number of samples used [1] 27 beta_div_richness_wild&lt;-hillpair(data=wild.counts, q=0) beta_div_neutral_wild&lt;-hillpair(data=wild.counts, q=1) beta_div_phylo_wild&lt;-hillpair(data=wild.counts, q=1, tree=genome_tree) beta_div_func_wild&lt;-hillpair(data=wild.counts, q=1, dist=dist) 6.3.1.3 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.972 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.973 Podarcis_muralis 0.97302 Df SumOfSqs R2 F Pr(&gt;F) species 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA 6.3.1.4 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.954 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.953 Podarcis_muralis 0.94763 Df SumOfSqs R2 F Pr(&gt;F) species 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA 6.3.1.5 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.111 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.115 Podarcis_muralis 0.12705 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA 6.3.1.6 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.018367 0.018367 1.5597 999 0.231 Residuals 25 0.294402 0.011776 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.232 Podarcis_muralis 0.22328 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.0858578 0.172879 5.225323 0.044 Residual 25 0.4107775 0.827121 NA NA Total 26 0.4966352 1.000000 NA NA beta_q0n_nmds_wild &lt;- beta_div_richness_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) beta_q1n_nmds_wild &lt;- beta_div_neutral_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) beta_q1p_nmds_wild &lt;- beta_div_phylo_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) beta_q1f_nmds_wild &lt;- beta_div_func_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) 6.3.2 2. Do the antibiotics work? 6.3.2.1 Acclimation vs antibiotics treat &lt;- meta %&gt;% #antibiotics samples giving error when plotting filter(time_point == &quot;1_Acclimation&quot; | time_point == &quot;2_Antibiotics&quot;) temp_genome_counts &lt;- transform(genome_counts_filt, row.names = genome_counts_filt$genome) temp_genome_counts$genome &lt;- NULL treat.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(treat))] identical(sort(colnames(treat.counts)),sort(as.character(rownames(treat)))) treat_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;1_Acclimation&quot; | time_point == &quot;2_Antibiotics&quot;) 6.3.2.2 Number of samples used [1] 50 beta_div_richness_treat&lt;-hillpair(data=treat.counts, q=0) beta_div_neutral_treat&lt;-hillpair(data=treat.counts, q=1) beta_div_phylo_treat&lt;-hillpair(data=treat.counts, q=1, tree=genome_tree) beta_div_func_treat&lt;-hillpair(data=treat.counts, q=1, dist=dist) 6.3.2.2.1 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.025318 0.0253178 6.021 999 0.019 * Residuals 48 0.201837 0.0042049 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.027 2_Antibiotics 0.017817 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 1.888584 0.0949462 6.361098 0.001 species 1 2.117109 0.1064350 7.130814 0.001 individual 25 9.353701 0.4702455 1.260199 0.001 Residual 22 6.531709 0.3283734 NA NA Total 49 19.891103 1.0000000 NA NA 6.3.2.2.2 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.039587 0.039587 6.8387 999 0.013 * Residuals 48 0.277854 0.005789 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.011 2_Antibiotics 0.011886 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 2.024181 0.1063620 9.051981 0.001 species 1 2.853103 0.1499183 12.758858 0.001 individual 25 9.234189 0.4852168 1.651783 0.001 Residual 22 4.919584 0.2585029 NA NA Total 49 19.031057 1.0000000 NA NA 6.3.2.2.3 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.58372 0.58372 35.413 999 0.001 *** Residuals 48 0.79119 0.01648 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.001 2_Antibiotics 2.9795e-07 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 1.8065206 0.2113909 18.636551 0.001 species 1 0.7903334 0.0924813 8.153292 0.001 individual 25 3.8164689 0.4465860 1.574869 0.007 Residual 22 2.1325541 0.2495419 NA NA Total 49 8.5458771 1.0000000 NA NA 6.3.2.2.4 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.18591 0.185914 5.0679 999 0.024 * Residuals 48 1.76088 0.036685 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.028 2_Antibiotics 0.028989 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 1.8020952 0.3750193 33.6195614 0.001 species 1 0.0031247 0.0006503 0.0582938 0.830 individual 25 1.8208629 0.3789249 1.3587875 0.226 Residual 22 1.1792568 0.2454055 NA NA Total 49 4.8053396 1.0000000 NA NA beta_richness_nmds_treat &lt;- beta_div_richness_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_neutral_nmds_treat &lt;- beta_div_neutral_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_phylo_nmds_treat &lt;- beta_div_phylo_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = join_by(sample == Tube_code)) beta_func_nmds_treat &lt;- beta_div_func_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = join_by(sample == Tube_code)) 6.3.3 3. Do the FMT work? 6.3.3.1 Comparison between FMT2 vs Post-FMT2 #Create newID to identify duplicated samples transplants_metadata&lt;-sample_metadata%&gt;% mutate(Tube_code=str_remove_all(Tube_code, &quot;_a&quot;)) transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, &quot;_&quot;, transplants_metadata$individual) transplant3&lt;-transplants_metadata%&gt;% filter(time_point == &quot;4_Transplant2&quot; | time_point == &quot;6_Post-FMT2&quot;)%&gt;% column_to_rownames(&quot;newID&quot;) transplant3_nmds &lt;- transplants_metadata %&gt;% filter(time_point == &quot;4_Transplant2&quot; | time_point == &quot;6_Post-FMT2&quot;) full_counts&lt;-temp_genome_counts %&gt;% t()%&gt;% as.data.frame()%&gt;% rownames_to_column(&quot;Tube_code&quot;)%&gt;% full_join(transplants_metadata,by = join_by(Tube_code == Tube_code)) transplant3_counts&lt;-full_counts %&gt;% filter(time_point == &quot;4_Transplant2&quot; | time_point == &quot;6_Post-FMT2&quot;) %&gt;% subset(select=-c(315:324)) %&gt;% column_to_rownames(&quot;newID&quot;)%&gt;% subset(select=-c(1))%&gt;% t() %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) identical(sort(colnames(transplant3_counts)),sort(as.character(rownames(transplant3)))) 6.3.3.2 Number of samples used [1] 49 beta_div_richness_transplant3&lt;-hillpair(data=transplant3_counts, q=0) beta_div_neutral_transplant3&lt;-hillpair(data=transplant3_counts, q=1) beta_div_phylo_transplant3&lt;-hillpair(data=transplant3_counts, q=1, tree=genome_tree) beta_div_func_transplant3&lt;-hillpair(data=transplant3_counts, q=1, dist=dist) #Arrange of metadata dataframe transplant3_arrange&lt;-transplant3[labels(beta_div_neutral_transplant3$S),] 6.3.3.2.1 Richness Df SumOfSqs R2 F Pr(&gt;F) species 1 1.180473 0.0855095 6.984555 0.001 time_point 1 0.860906 0.0623612 5.093759 0.001 type 1 1.459433 0.1057165 8.635089 0.001 individual 24 6.755100 0.4893170 1.665341 0.001 Residual 21 3.549250 0.2570959 NA NA Total 48 13.805162 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 1.4169018 5.739828 0.15622903 0.001 0.003 * 2 Control vs Hot_control 1 2.0940966 8.509112 0.21005427 0.001 0.003 * 3 Treatment vs Hot_control 1 0.3004618 1.265034 0.04179854 0.162 0.486 6.3.3.2.2 Neutral Df SumOfSqs R2 F Pr(&gt;F) species 1 1.2800927 0.0939787 8.796453 0.001 time_point 1 0.9350566 0.0686477 6.425458 0.001 type 1 1.9135997 0.1404879 13.149743 0.001 individual 24 6.4363516 0.4725281 1.842870 0.001 Residual 21 3.0559984 0.2243577 NA NA Total 48 13.6210990 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 1.8758788 8.282671 0.21084796 0.001 0.003 * 2 Control vs Hot_control 1 2.4396317 10.635546 0.24945256 0.001 0.003 * 3 Treatment vs Hot_control 1 0.3158428 1.394345 0.04587515 0.136 0.408 6.3.3.2.3 Phylogenetic Df SumOfSqs R2 F Pr(&gt;F) species 1 0.1400466 0.0952654 6.956436 0.001 time_point 1 0.1138047 0.0774145 5.652939 0.002 type 1 0.1432667 0.0974558 7.116383 0.001 individual 24 0.6501795 0.4422784 1.345663 0.056 Residual 21 0.4227709 0.2875859 NA NA Total 48 1.4700683 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.14387705 5.735321 0.15612552 0.001 0.003 * 2 Control vs Hot_control 1 0.22715701 9.044894 0.22036587 0.001 0.003 * 3 Treatment vs Hot_control 1 0.04648319 1.704277 0.05550617 0.120 0.360 6.3.3.2.4 Functional Df SumOfSqs R2 F Pr(&gt;F) species 1 0.0092808 0.0077189 0.4182529 0.519 time_point 1 -0.0061674 -0.0051295 -0.2779456 0.891 type 1 0.0831052 0.0691191 3.7452726 0.094 individual 24 0.6501528 0.5407359 1.2208414 0.334 Residual 21 0.4659767 0.3875556 NA NA Total 48 1.2023481 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.078539743 4.59293783 0.129040706 0.073 0.219 2 Control vs Hot_control 1 0.052468954 2.13675422 0.062593948 0.182 0.546 3 Treatment vs Hot_control 1 -0.002340352 -0.07432315 -0.002569452 0.862 1.000 beta_richness_nmds_transplant3 &lt;- beta_div_richness_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == newID)) beta_neutral_nmds_transplant3 &lt;- beta_div_neutral_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == newID)) beta_phylo_nmds_transplant3 &lt;- beta_div_phylo_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == newID)) beta_func_nmds_transplant3 &lt;- beta_div_func_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == newID)) p0&lt;-beta_richness_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylo_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_func_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) 6.3.4 4. Are there differences between the control and the treatment group? 6.3.4.1 After 1 week –&gt; Post-FMT1 post1 &lt;- meta %&gt;% filter(time_point == &quot;5_Post-FMT1&quot;) post1.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(post1))] identical(sort(colnames(post1.counts)),sort(as.character(rownames(post1)))) post1_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;5_Post-FMT1&quot;) 6.3.4.2 Number of samples used [1] 26 beta_div_richness_post1&lt;-hillpair(data=post1.counts, q=0) beta_div_neutral_post1&lt;-hillpair(data=post1.counts, q=1) beta_div_phylo_post1&lt;-hillpair(data=post1.counts, q=1, tree=genome_tree) beta_div_func_post1&lt;-hillpair(data=post1.counts, q=1, dist=dist) #Arrange of metadata dataframe post1_arrange&lt;-post1[labels(beta_div_neutral_post1$S),] 6.3.4.2.1 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.017675 0.0088373 2.3825 999 0.117 Residuals 23 0.085312 0.0037092 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.0050000 0.660 Hot_control 0.0068795 0.222 Treatment 0.6248469 0.2084296 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.6340254 0.0768024 2.065607 0.005 type 1 0.5615418 0.0680222 1.829461 0.009 Residual 23 7.0597099 0.8551754 NA NA Total 25 8.2552771 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.5615418 1.729004 0.1033537 0.019 0.057 2 Control vs Hot_control 1 0.8438429 2.793772 0.1486541 0.001 0.003 * 3 Treatment vs Hot_control 1 0.3734921 1.268929 0.0779971 0.095 0.285 6.3.4.2.2 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.011001 0.0055005 0.6303 999 0.573 Residuals 23 0.200714 0.0087267 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.22500 0.962 Hot_control 0.21166 0.444 Treatment 0.95468 0.43604 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.7907904 0.1076445 3.056657 0.001 type 1 0.6051778 0.0823784 2.339205 0.011 Residual 23 5.9503501 0.8099772 NA NA Total 25 7.3463184 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.6051778 2.250849 0.13047758 0.012 0.036 . 2 Control vs Hot_control 1 1.0528902 4.143637 0.20570451 0.001 0.003 * 3 Treatment vs Hot_control 1 0.4150076 1.637268 0.09840968 0.052 0.156 6.3.4.2.3 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00440 0.0021994 0.1369 999 0.898 Residuals 23 0.36941 0.0160614 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.91700 0.692 Hot_control 0.91505 0.757 Treatment 0.63312 0.73046 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.0560850 0.0531376 1.3149967 0.253 type 1 0.0184254 0.0174571 0.4320099 0.797 Residual 23 0.9809570 0.9294053 NA NA Total 25 1.0554673 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.01842535 0.4144162 0.02688498 0.755 1.000 2 Control vs Hot_control 1 0.05987967 1.7387847 0.09802164 0.118 0.354 3 Treatment vs Hot_control 1 0.03212966 0.6477782 0.04139746 0.726 1.000 6.3.4.2.4 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00400 0.0020014 0.145 999 0.872 Residuals 23 0.31753 0.0138057 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.59300 0.747 Hot_control 0.59817 0.845 Treatment 0.75141 0.83718 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.0024979 0.0033024 0.0900845 0.651 type 1 0.1161466 0.1535542 4.1887855 0.095 Residual 23 0.6377435 0.8431434 NA NA Total 25 0.7563879 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.11614656 4.724791 0.23953568 0.076 0.228 2 Control vs Hot_control 1 0.05000930 1.704826 0.09629160 0.202 0.606 3 Treatment vs Hot_control 1 0.01235859 0.423812 0.02747777 0.493 1.000 beta_richness_nmds_post1 &lt;- beta_div_richness_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) beta_neutral_nmds_post1 &lt;- beta_div_neutral_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post1 &lt;- beta_div_phylo_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) beta_functional_nmds_post1 &lt;- beta_div_func_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 6.3.4.3 After 2 weeks –&gt;Post-FMT2 post2 &lt;- meta %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;) post2.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(post2))] identical(sort(colnames(post2.counts)),sort(as.character(rownames(post2)))) post2_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;) 6.3.4.4 Number of samples used [1] 27 beta_div_richness_post2&lt;-hillpair(data=post2.counts, q=0) beta_div_neutral_post2&lt;-hillpair(data=post2.counts, q=1) beta_div_phylo_post2&lt;-hillpair(data=post2.counts, q=1, tree=genome_tree) beta_div_func_post2&lt;-hillpair(data=post2.counts, q=1, dist=dist) #Arrange of metadata dataframe post2_arrange&lt;-post2[labels(beta_div_neutral_post2$S),] 6.3.4.4.1 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002011 0.0010056 0.1982 999 0.831 Residuals 24 0.121775 0.0050740 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.69600 0.808 Hot_control 0.67789 0.626 Treatment 0.79246 0.59820 Df SumOfSqs R2 F Pr(&gt;F) type 2 1.504341 0.1967776 2.939822 0.001 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Treatment vs Control 1 0.6463814 2.560441 0.1379515 0.001 0.003 * 2 Treatment vs Hot_control 1 0.4796256 1.916520 0.1069694 0.002 0.006 * 3 Control vs Hot_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * 6.3.4.4.2 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.008262 0.0041311 0.8024 999 0.461 Residuals 24 0.123559 0.0051483 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.44400 0.667 Hot_control 0.44675 0.243 Treatment 0.65989 0.25095 Df SumOfSqs R2 F Pr(&gt;F) type 2 1.923807 0.2603795 4.224537 0.001 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Treatment vs Control 1 1.0227481 4.648335 0.2251191 0.001 0.003 * 2 Treatment vs Hot_control 1 0.5010202 2.206532 0.1211945 0.001 0.003 * 3 Control vs Hot_control 1 1.3619424 5.771031 0.2650785 0.001 0.003 * 6.3.4.4.3 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.000407 0.0002034 0.0487 999 0.951 Residuals 24 0.100305 0.0041794 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.94600 0.851 Hot_control 0.93765 0.770 Treatment 0.83933 0.76015 Df SumOfSqs R2 F Pr(&gt;F) type 2 0.1594363 0.2042241 3.079623 0.001 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Treatment vs Control 1 0.05927454 2.382025 0.1295845 0.024 0.072 2 Treatment vs Hot_control 1 0.06906280 2.722460 0.1454115 0.004 0.012 . 3 Control vs Hot_control 1 0.11081709 4.043656 0.2017424 0.002 0.006 * 6.3.4.4.4 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01126 0.0056302 0.2861 999 0.794 Residuals 24 0.47233 0.0196806 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.52600 0.638 Hot_control 0.48255 0.824 Treatment 0.60116 0.75643 Df SumOfSqs R2 F Pr(&gt;F) type 2 -0.0038724 -0.0056213 -0.0670788 0.91 Residual 24 0.6927468 1.0056213 NA NA Total 26 0.6888744 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Treatment vs Control 1 -0.008527330 -0.46290555 -0.029793572 0.848 1 2 Treatment vs Hot_control 1 -0.001648721 -0.04717131 -0.002956924 0.906 1 3 Control vs Hot_control 1 0.004367477 0.13147026 0.008149924 0.693 1 beta_richness_nmds_post2 &lt;- beta_div_richness_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) beta_neutral_nmds_post2 &lt;- beta_div_neutral_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post2 &lt;- beta_div_phylo_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) beta_functional_nmds_post2 &lt;- beta_div_func_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) "],["functional-differences.html", "Chapter 7 Functional differences 7.1 Data preparation 7.2 Genomes GIFT profiles 7.3 Function level 7.4 Element level 7.5 Comparison of samples from the 0 Time_point (0_Wild) 7.6 Comparison of samples from the 6th Time_point (6_Post-FMT2) 7.7 Domain level", " Chapter 7 Functional differences load(&quot;data/data.Rdata&quot;) 7.1 Data preparation # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) 7.2 Genomes GIFT profiles GIFTs_elements %&gt;% as_tibble(., rownames = &quot;MAG&quot;) %&gt;% reshape2::melt() %&gt;% rename(Code_element = variable, GIFT = value) %&gt;% inner_join(GIFT_db,by=&quot;Code_element&quot;) %&gt;% ggplot(., aes(x=Code_element, y=MAG, fill=GIFT, group=Code_function))+ geom_tile()+ scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+ scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(. ~ Code_function, scales = &quot;free&quot;, space = &quot;free&quot;)+ theme_grey(base_size=8)+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),strip.text.x = element_text(angle = 90)) 7.3 Function level GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sample&quot;) %&gt;% pivot_longer(!sample,names_to=&quot;trait&quot;,values_to=&quot;gift&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% ggplot(aes(x=trait,y=time_point,fill=gift)) + geom_tile(colour=&quot;white&quot;, size=0.2)+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(type ~ ., scales=&quot;free&quot;,space=&quot;free&quot;) 7.4 Element level GIFTs_elements_community_merged&lt;-GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sample&quot;) %&gt;% pivot_longer(!sample,names_to=&quot;trait&quot;,values_to=&quot;gift&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code))%&gt;% mutate(functionid = substr(trait, 1, 3)) %&gt;% mutate(trait = case_when( trait %in% GIFT_db$Code_element ~ GIFT_db$Element[match(trait, GIFT_db$Code_element)], TRUE ~ trait )) %&gt;% mutate(functionid = case_when( functionid %in% GIFT_db$Code_function ~ GIFT_db$Function[match(functionid, GIFT_db$Code_function)], TRUE ~ functionid )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db$Element))) %&gt;% mutate(functionid=factor(functionid,levels=unique(GIFT_db$Function))) # Create an interaction variable for time_point and sample GIFTs_elements_community_merged$interaction_var &lt;- interaction(GIFTs_elements_community_merged$sample, GIFTs_elements_community_merged$time_point) ggplot(GIFTs_elements_community_merged,aes(x=interaction_var,y=trait,fill=gift)) + geom_tile(colour=&quot;white&quot;, linewidth=0.2)+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(functionid ~ type, scales=&quot;free&quot;,space=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Time_point&quot;,fill=&quot;GIFT&quot;)+ scale_x_discrete(labels = function(x) gsub(&quot;.*\\\\.&quot;, &quot;&quot;, x)) 7.5 Comparison of samples from the 0 Time_point (0_Wild) 7.5.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.327 0.0244 2 Podarcis_muralis 0.346 0.0194 7.5.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% select(c(1:21, 27)) %&gt;% pivot_longer(-c(sample,type),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db$Code_function ~ GIFT_db$Function[match(trait, GIFT_db$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db$Function))) %&gt;% ggplot(aes(x=value, y=type, group=type, fill=type, color=type)) + geom_boxplot() + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 7.5.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.375 0.0315 2 Podarcis_muralis 0.390 0.0208 7.5.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.313 0.0329 2 Podarcis_muralis 0.345 0.0233 sample_metadata_wild &lt;- sample_metadata%&gt;% filter(time_point == &quot;0_Wild&quot;) element_gift_wild &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_wild[c(1,3)], by=&quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_wild, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_wild[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_wild[, !numeric_cols | colnames(element_gift_wild) %in% nonzero_numeric_cols] significant_elements_wild &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,species), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ species, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_wild %&gt;% dplyr::select(-c(species)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_wild$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_wild[c(1,3)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(species) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-species)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_wild[c(1,3)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:30] #always check names(element_gift_names) first to know were your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=species, y=.data[[i]], color = species)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.6 Comparison of samples from the 6th Time_point (6_Post-FMT2) 7.6.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.352 0.0223 2 Hot_control 0.350 0.0293 3 Treatment 0.346 0.0255 7.6.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% select(c(1:21, 27)) %&gt;% pivot_longer(-c(sample,type),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db$Code_function ~ GIFT_db$Function[match(trait, GIFT_db$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db$Function))) %&gt;% ggplot(aes(x=value, y=type, group=type, fill=type, color=type)) + geom_boxplot() + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;,&quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 7.6.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.399 0.0171 2 Hot_control 0.388 0.0321 3 Treatment 0.392 0.0240 7.6.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.357 0.0215 2 Hot_control 0.347 0.0302 3 Treatment 0.350 0.0293 sample_metadata_TM6 &lt;- sample_metadata%&gt;% filter(time_point == &quot;6_Post-FMT2&quot;)%&gt;% filter(type != &quot;Hot_control&quot;) element_gift_TM6 &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(sample_metadata_TM6 %&gt;% select(1, 7), by = &quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_TM6, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_TM6[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_TM6[, !numeric_cols | colnames(element_gift_TM6) %in% nonzero_numeric_cols] significant_elements_TM6 &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_value &lt; 0.05) %&gt;% #take into account that p_value is used and not p_adjust left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_TM6 %&gt;% dplyr::select(-c(type)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_TM6$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM6[c(1,7)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(type) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-type)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM6[c(1,7)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:20] #always check names(element_gift_names) first to now were your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=type, y=.data[[i]], color = type)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 7.7 Domain level 7.7.1 Comparison of samples from the 0 Time_point (0_Wild) #Merge the functional domains with the metadata merge_gift_wild&lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_wild, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Biosynthesis,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Degradation p2 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Degradation,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.45, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Structure p3 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Structure,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Overall p4 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Overall,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) 7.7.2 Comparison of samples from the 6th Time_point (6_Post-FMT2) #Merge the functional domains with the metadata merge_gift_TM6 &lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_TM6, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Biosynthesis,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Type&quot;) #Degradation p2 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Degradation,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Structure p3 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Structure,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Overall p4 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Overall,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
