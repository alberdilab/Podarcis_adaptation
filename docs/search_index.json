[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1,Carlos Cabido2, Kevin Kohl3, Antton Alberdi4 and Ostaizka Aizpurua5 Last update: 2025-03-26 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(lme4) library(emmeans) library(UpSetR) library(ANCOMBC) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Pittsburgh, kkohl78@gmail.com↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!time_point %in% c(&quot;Antibiotics&quot;,&quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) %&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw)%&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Two samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD91&quot;, &quot;AC85&quot;) # Columns to exclude (&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, ) read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Coverage_table genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code %in% colnames(read_counts)) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats &lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data_27022025.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data_27022025.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 3335496930 data_stats$raw_reads %&gt;% mean() [1] 31466952 data_stats$raw_reads %&gt;% sd() [1] 14473977 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.471 0.140 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata[c(1,7, 10)], by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_h6npq9th0jrame2bl6ep, .table th.tinytable_css_h6npq9th0jrame2bl6ep { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2a258u078i28oqkbo1pb, .table th.tinytable_css_2a258u078i28oqkbo1pb { border-bottom: solid #d3d8dc 0.1em; } sample damr time_point type AC79 1.0000000 Acclimation Control AC80 1.0000000 Acclimation Treatment AC81 0.9813013 Acclimation Treatment AC82 0.7490771 Acclimation Treatment AC83 1.0000000 Acclimation Control AC84 1.0000000 Acclimation Control AC86 0.8800275 Acclimation Control AC87 0.9672854 Acclimation Treatment AC88 0.3142108 Acclimation Control AC89 0.9338962 Acclimation Treatment AC90 1.0000000 Acclimation Control AC91 1.0000000 Acclimation Control AC92 1.0000000 Acclimation Control AC93 1.0000000 Acclimation Treatment AC94 0.9159348 Acclimation Treatment AC95 0.9239904 Acclimation Treatment AC96 0.9425962 Acclimation Treatment AC97 0.9394886 Acclimation Hot_control AC98 1.0000000 Acclimation Hot_control AC99 1.0000000 Acclimation Hot_control AD01 1.0000000 Acclimation Hot_control AD02 1.0000000 Acclimation Hot_control AD03 1.0000000 Acclimation Hot_control AD04 0.8896057 Acclimation Hot_control AD05 1.0000000 Acclimation Hot_control AD07 0.9515379 Acclimation Hot_control AD74 0.9017271 FMT1 Control AD75 1.0000000 FMT1 Treatment AD76 0.9862581 FMT1 Treatment AD77 0.8963376 FMT1 Treatment AD78 1.0000000 FMT1 Treatment AD79 1.0000000 FMT1 Control AD80 0.8808155 FMT1 Treatment AD81 1.0000000 FMT1 Control AD82 1.0000000 FMT1 Control AD83 1.0000000 FMT1 Treatment AD84 1.0000000 FMT1 Treatment AD85 1.0000000 FMT1 Control AD86 0.9889084 FMT1 Control AD87 1.0000000 FMT1 Control AD88 1.0000000 FMT1 Treatment AD89 0.9562489 FMT1 Control AD90 1.0000000 FMT1 Control AD93 1.0000000 FMT1 Hot_control AD94 0.7947750 FMT1 Hot_control AD95 0.9506977 FMT1 Hot_control AD96 0.9171413 FMT1 Hot_control AD97 0.9257685 FMT1 Hot_control AD98 0.9048349 FMT1 Hot_control AD99 0.9966152 FMT1 Hot_control AE01 1.0000000 FMT1 Hot_control AE02 1.0000000 FMT1 Hot_control AE04 1.0000000 FMT2 Treatment AE05 1.0000000 FMT2 Treatment AE06 1.0000000 FMT2 Control AE07 0.7797794 FMT2 Control AE08 1.0000000 FMT2 Control AE09 1.0000000 FMT2 Control AE91 0.9259146 FMT2 Treatment AE92 1.0000000 FMT2 Control AE93 1.0000000 FMT2 Control AE94 0.9152960 FMT2 Treatment AE95 1.0000000 FMT2 Treatment AE96 0.7786112 FMT2 Treatment AE97 0.9365037 FMT2 Control AE98 1.0000000 FMT2 Control AE99 0.8513354 FMT2 Treatment AF01 0.9046369 FMT2 Treatment AF02 1.0000000 FMT2 Control AF03 0.9030087 FMT2 Treatment AF04 1.0000000 FMT2 Hot_control AF05 1.0000000 FMT2 Hot_control AF06 1.0000000 FMT2 Hot_control AF07 0.9526443 FMT2 Hot_control AF08 1.0000000 FMT2 Hot_control AF09 1.0000000 FMT2 Hot_control AF10 0.9716162 FMT2 Hot_control AF11 0.9654152 FMT2 Hot_control AF13 0.8818742 FMT2 Hot_control AFU87 0.8810513 Wild Control AFU88 0.8317800 Wild Treatment AFU91 0.8923699 Wild Treatment AFU92 0.8094776 Wild Treatment AFU93 0.8517368 Wild Control AFU94 0.8325385 Wild Treatment AFU95 0.8419270 Wild Treatment AFU96 0.8326820 Wild Control AFU97 0.8107271 Wild Treatment AFU98 0.7506522 Wild Control AFU99 0.8582371 Wild Treatment AFV01 0.9331539 Wild Treatment AFV02 0.8316460 Wild Treatment AFV03 0.8752591 Wild Control AFV04 0.9180285 Wild Control AFV05 1.0000000 Wild Control AFV06 1.0000000 Wild Control AFV07 0.8460805 Wild Control AFV08 0.7497043 Wild Hot_control AFV09 0.5412999 Wild Hot_control AFV10 0.8002499 Wild Hot_control AFV11 0.8225298 Wild Hot_control AFV12 0.7925988 Wild Hot_control AFV14 0.8106269 Wild Hot_control AFV15 0.9691106 Wild Hot_control AFV16 0.8218990 Wild Hot_control AFV17 0.8091152 Wild Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data_27022025.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample # transplants_metadata &lt;- sample_metadata %&gt;% # mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) # transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, # &quot;_&quot;, # transplants_metadata$individual) merged_data &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome), ~ . / sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes( x = sample, y = count, fill = phylum, group = phylum )) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat = &quot;identity&quot;, colour = &quot;white&quot;, linewidth = 0.1) + #plot stacked bars with white borders scale_fill_manual(values = phylum_colors) + facet_nested(. ~ time_point + type , scales = &quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill = &quot;Phylum&quot;, y = &quot;Relative abundance&quot;, x = &quot;Sample&quot;) + theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), strip.background = element_rect(fill =&quot;lightgrey&quot;), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.1.1 Wild samples merged_data %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% ggplot(aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Population, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), strip.background = element_rect(fill =&quot;lightgrey&quot;), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) 5.1.2.1 Cold and wet population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_n1vrt8sab3fqm7lkm0mv, .table th.tinytable_css_n1vrt8sab3fqm7lkm0mv { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_h1rdmymhmweznch5u0zb, .table th.tinytable_css_h1rdmymhmweznch5u0zb { border-bottom: solid #d3d8dc 0.1em; } phylum total p__Bacteroidota 41.93±15.4 p__Bacillota_A 33.96±16.7 p__Bacillota 5.73±4.73 p__Campylobacterota 5.39±4.64 p__Verrucomicrobiota 4.36±3.06 p__Pseudomonadota 3.75±3.76 p__Desulfobacterota 2.31±1.6 p__Bacillota_C 0.85±0.82 p__Cyanobacteriota 0.64±0.83 p__Bacillota_B 0.5±0.77 p__Fusobacteriota 0.37±1.28 p__Spirochaetota 0.12±0.35 p__Actinomycetota 0.09±0.22 5.1.2.2 Hot and dry population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_nvctu52sbt9ahkhmyq7a, .table th.tinytable_css_nvctu52sbt9ahkhmyq7a { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ntrss959asnzvim6d6lq, .table th.tinytable_css_ntrss959asnzvim6d6lq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum total p__Bacillota_A 33.9±16.17 p__Bacteroidota 27.63±17.64 p__Campylobacterota 13.53±20.98 p__Pseudomonadota 10.92±9.94 p__Bacillota 6.09±7.66 p__Spirochaetota 2.66±2.78 p__Desulfobacterota 1.69±1.85 p__Fusobacteriota 1.34±1.73 p__Bacillota_B 0.76±0.73 p__Bacillota_C 0.73±0.5 p__Cyanobacteriota 0.52±0.65 p__Chlamydiota 0.12±0.18 p__Verrucomicrobiota 0.06±0.1 p__Elusimicrobiota 0.05±0.14 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["calculations.html", "Chapter 6 Calculations 6.1 Alpha diversity 6.2 Beta diversity 6.3 Phyloseq object 6.4 Functional data", " Chapter 6 Calculations load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/beta_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 6.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) 6.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) 6.3 Phyloseq object #Phyloseq object count_phy &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% otu_table(., taxa_are_rows=T) sample_info_tab_phy &lt;- sample_metadata%&gt;% column_to_rownames(var=&quot;Tube_code&quot;)%&gt;% sample_data() TAX &lt;- genome_metadata%&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% select(1:7)%&gt;% as.matrix()%&gt;% tax_table() tree &lt;- phy_tree(genome_tree) physeq_all = phyloseq(count_phy, TAX, sample_info_tab_phy, tree) 6.4 Functional data # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) uniqueGIFT_db &lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% left_join(sample_metadata[c(1, 7, 10)], by = &quot;Tube_code&quot;) save(richness, neutral, phylogenetic, alpha_div, physeq_all, beta_q0n, beta_q1n, beta_q1p, GIFTs_elements_filtered, GIFTs_elements_community, GIFTs_functions_community, GIFTs_domains_community, element_gift, uniqueGIFT_db, file = &quot;data/calculations_28022025.Rdata&quot;) "],["is-the-gm-of-cold--vs-warm-adapted-populations-similar-in-the-wild.html", "Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? 7.1 Shared and unique MAGs 7.2 Shapiro test 7.3 Alpha diversity 7.4 Beta diversity 7.5 Differential abundance 7.6 Functional capacity", " Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) #load(&quot;data/ancombc_04032025.Rdata&quot;) 7.1 Shared and unique MAGs locationcolors=c(&#39;#c4d7d1&#39;,&#39;#e08683&#39;) subset_meta &lt;- sample_metadata %&gt;% filter(time_point==&quot;Wild&quot;) genome_counts_rel_fil&lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;, subset_meta$Tube_code))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) genome_counts_rel_pa=1*(genome_counts_rel_fil&gt;0) table_upset_analysis_cont=t(aggregate(t(genome_counts_rel_pa),by=list(subset_meta$Population),FUN=sum)[,-1]) colnames(table_upset_analysis_cont)=levels(as.factor(subset_meta$Population)) table_upset_analysis=(table_upset_analysis_cont&gt;0)*1 table_upset_analysis=data.frame(table_upset_analysis) table_upset_analysis=apply(table_upset_analysis,2,as.integer) rownames(table_upset_analysis) &lt;- rownames(genome_counts_rel_pa) upset(as.data.frame(table_upset_analysis), keep.order = T, sets = rev(c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;)), sets.bar.color= rev(locationcolors), mb.ratio = c(0.55, 0.45), order.by = &quot;freq&quot;) 7.2 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.03999359 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2966492 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.5784544 7.3 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;))) %&gt;% filter(metric==&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;wilcox.test&quot;, size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 7.4 Beta diversity Number of samples used samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) length(samples_to_keep) [1] 27 Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.974 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.972 Hot_dry 0.97302 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_x1id8px5c4kprpzaweyu, .table th.tinytable_css_x1id8px5c4kprpzaweyu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ubt92mn0bkyhdcju335z, .table th.tinytable_css_ubt92mn0bkyhdcju335z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.945 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.945 Hot_dry 0.94763 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_edpjoj3el2chcytyn2r9, .table th.tinytable_css_edpjoj3el2chcytyn2r9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8qc5nle60ond2htsn5hx, .table th.tinytable_css_8qc5nle60ond2htsn5hx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.129 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.132 Hot_dry 0.12705 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_iikub25ehkl40rnvgr7k, .table th.tinytable_css_iikub25ehkl40rnvgr7k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ew1jl6ddi5a3tw87cilo, .table th.tinytable_css_ew1jl6ddi5a3tw87cilo { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA NMDS richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = element_blank (), x = &quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) 7.5 Differential abundance 7.5.1 Structural zeros wild_struc &lt;- structural_zeros %&gt;% filter(present==&quot;Cold_wet&quot;)%&gt;% count(phylum, name = &quot;Cold_wet&quot;) %&gt;% arrange(desc(Cold_wet)) structural_zeros %&gt;% filter(present==&quot;Hot_dry&quot;)%&gt;% count(phylum, name = &quot;Hot_dry&quot;) %&gt;% arrange(desc(Hot_dry)) %&gt;% full_join(., wild_struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_6ffxpbk53fmyq0rrau4r, .table th.tinytable_css_6ffxpbk53fmyq0rrau4r { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_01a65iwvcvuyqbrib09p, .table th.tinytable_css_01a65iwvcvuyqbrib09p { border-bottom: solid #d3d8dc 0.1em; } phylum Hot_dry Cold_wet p__Bacillota_A 31 30 p__Bacteroidota 26 14 p__Bacillota 14 10 p__Pseudomonadota 12 8 p__Cyanobacteriota 5 4 p__Desulfobacterota 3 1 p__Bacillota_C 1 0 p__Chlamydiota 1 0 p__Elusimicrobiota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 3 p__Actinomycetota 0 1 p__Bacillota_B 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% mutate_all( ~ replace(., . == 0, 0.00001)) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% mutate(genome2 = genome) %&gt;% column_to_rownames(&quot;genome2&quot;) %&gt;% dplyr::select(domain, phylum, class, order, family, genus, species, genome) %&gt;% as.matrix() %&gt;% tax_table() physeq_sample_wild &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) physeq_sample_wild &lt;- prune_taxa(taxa_sums(physeq_sample_wild)&gt;0, physeq_sample_wild) 7.5.2 Phylum ancom_rand_output_wild_phylum = ancombc2( data = physeq_sample_wild, assay_name = &quot;counts&quot;, tax_level = &quot;phylum&quot;, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut = 0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list( tol = 1e-5, max_iter = 20, verbose = FALSE ), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL ) save(ancom_rand_output_wild_phylum, file=&quot;data/ancom_rand_output_wild_phylum.RData&quot;) load(&quot;data/ancom_rand_output_wild_phylum.RData&quot;) ancom_rand_output_wild_phylum$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) taxon lfc_PopulationHot_dry p_PopulationHot_dry 1 p__Spirochaetota 10.437170 0.000212584 2 p__Verrucomicrobiota -7.396883 0.004337700 7.5.3 MAG level physeq_wild_mag &lt;- subset_samples(physeq_all, time_point == &quot;Wild&quot;) physeq_wild_mag &lt;- prune_taxa(taxa_sums(physeq_wild_mag)&gt;0, physeq_wild_mag) ancom_rand_output_mag_wild = ancombc2( data = physeq_wild_mag, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut = 0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list( tol = 1e-5, max_iter = 20, verbose = FALSE ), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL ) save(ancom_rand_output_mag_wild, file=&quot;data/ancom_rand_output_mag_wild.RData&quot;) Differentially abundant MAGs taxon lfc_PopulationHot_dry p_PopulationHot_dry domain phylum class 1 AH1_2nd_16:bin_000008 -2.3169976 1.160094e-03 d__Bacteria Bacillota_A c__Clostridia 2 AH1_2nd_14:bin_000052 -1.9338966 3.200769e-06 d__Bacteria Bacteroidota c__Bacteroidia 3 AH1_2nd_11:bin_000008 -1.6078296 3.271075e-04 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae 4 AH1_2nd_5:bin_000001 -1.2294521 2.142214e-03 d__Bacteria Bacillota_C c__Negativicutes 5 AH1_2nd_10:bin_000007 -1.1638531 4.467159e-03 d__Bacteria Bacillota_A c__Clostridia 6 AH1_2nd_19:bin_000055 -1.1535004 3.958513e-03 d__Bacteria Bacteroidota c__Bacteroidia 7 AH1_2nd_1:bin_000015 -1.1156016 1.800234e-02 d__Bacteria Bacillota_A c__Clostridia 8 AH1_2nd_6:bin_000046 -1.1074881 3.390141e-02 d__Bacteria Bacteroidota c__Bacteroidia 9 AH1_2nd_15:bin_000043 -1.0795980 2.128222e-02 d__Bacteria Bacteroidota c__Bacteroidia 10 AH1_2nd_20:bin_000004 -1.0699685 4.124048e-02 d__Bacteria Bacillota_A c__Clostridia 11 AH1_2nd_9:bin_000002 -1.0564580 1.158724e-02 d__Bacteria Bacteroidota c__Bacteroidia 12 AH1_2nd_1:bin_000039 -1.0301421 4.074524e-03 d__Bacteria Bacteroidota c__Bacteroidia 13 LI1_2nd_4:bin_000026 -0.9769547 6.924871e-03 d__Bacteria Bacteroidota c__Bacteroidia 14 AH1_2nd_12:bin_000012 -0.9171823 6.710191e-03 d__Bacteria Campylobacterota c__Campylobacteria 15 AH1_2nd_1:bin_000003 -0.9008034 1.563707e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia 16 AH1_2nd_16:bin_000011 -0.8882510 1.604888e-02 d__Bacteria Bacillota_A c__Clostridia 17 AH1_2nd_12:bin_000018 -0.8857429 7.990416e-03 d__Bacteria Bacteroidota c__Bacteroidia 18 AH1_2nd_1:bin_000023 -0.7855826 2.510823e-02 d__Bacteria Bacillota_A c__Clostridia 19 AH1_2nd_15:bin_000004 -0.7407240 1.583868e-02 d__Bacteria Bacillota_A c__Clostridia 20 AH1_2nd_8:bin_000056 -0.7178242 2.746974e-02 d__Bacteria Bacteroidota c__Bacteroidia 21 AH1_2nd_7:bin_000011 0.7116366 3.877738e-02 d__Bacteria Bacillota_A c__Clostridia 22 AH1_2nd_7:bin_000055 0.8505725 4.817745e-02 d__Bacteria Bacillota c__Bacilli 23 AH1_2nd_20:bin_000075 0.8989975 2.058668e-02 d__Bacteria Desulfobacterota c__Desulfovibrionia 24 LI1_2nd_8:bin_000033 1.0012730 2.220648e-03 d__Bacteria Bacillota_C c__Negativicutes 25 AH1_2nd_1:bin_000028 1.0562209 3.950963e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria 26 LI1_2nd_4:bin_000001 1.0743058 7.401175e-03 d__Bacteria Bacillota_A c__Clostridia 27 LI1_2nd_9:bin_000032 1.0943233 2.466421e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria 28 AH1_2nd_16:bin_000058 1.1405745 5.256134e-03 d__Bacteria Bacillota_A c__Clostridia 29 LI1_2nd_7:bin_000051 1.1773688 7.489030e-03 d__Bacteria Bacillota_A c__Clostridia 30 AH1_2nd_11:bin_000005 1.1863288 2.217208e-02 d__Bacteria Fusobacteriota c__Fusobacteriia 31 LI1_2nd_7:bin_000008 1.2007603 1.152955e-02 d__Bacteria Bacillota c__Bacilli 32 LI1_2nd_4:bin_000045 1.2010771 3.848382e-03 d__Bacteria Bacillota_A c__Clostridia 33 LI1_2nd_2:bin_000006 1.2527113 2.763221e-02 d__Bacteria Bacillota_A c__Clostridia 34 LI1_2nd_4:bin_000041 1.3587556 6.516552e-04 d__Bacteria Bacillota_A c__Clostridia 35 LI1_2nd_8:bin_000019 1.4756993 7.874701e-04 d__Bacteria Bacillota_A c__Clostridia 36 AH1_2nd_19:bin_000005 1.8846731 6.950340e-04 d__Bacteria Bacillota_A c__Clostridia 37 LI1_2nd_5:bin_000023 2.4997493 9.080697e-04 d__Bacteria Pseudomonadota c__Alphaproteobacteria order family genus species 1 Lachnospirales 2 Bacteroidales Bacteroidaceae Bacteroides 3 Verrucomicrobiales Akkermansiaceae Akkermansia 4 Selenomonadales 5 Lachnospirales 6 Bacteroidales Tannerellaceae Parabacteroides 7 Lachnospirales Lachnospiraceae MGBC136627 8 Bacteroidales Bacteroidaceae Bacteroides 9 Bacteroidales Bacteroidaceae Bacteroides 10 Lachnospirales Lachnospiraceae Roseburia 11 Bacteroidales Bacteroidaceae Phocaeicola 12 Bacteroidales Marinifilaceae Odoribacter 13 Bacteroidales Marinifilaceae Odoribacter 14 Campylobacterales Helicobacteraceae Helicobacter_J 15 Gastranaerophilales Gastranaerophilaceae Scatousia 16 Lachnospirales Anaerotignaceae 17 Bacteroidales Rikenellaceae Alistipes 18 Lachnospirales Lachnospiraceae 19 Lachnospirales Lachnospiraceae UMGS1251 20 Bacteroidales Bacteroidaceae Bacteroides 21 Lachnospirales Lachnospiraceae Lacrimispora 22 Mycoplasmatales Mycoplasmoidaceae Ureaplasma 23 Desulfovibrionales Desulfovibrionaceae Mailhella 24 Selenomonadales 25 Rickettsiales UBA1997 CALXRO01 26 Christensenellales 27 RF32 CAG-239 CAZU01 28 Lachnospirales Lachnospiraceae Enterocloster 29 Lachnospirales Lachnospiraceae RGIG4733 30 Fusobacteriales Fusobacteriaceae Fusobacterium_A Fusobacterium_A ulcerans 31 Erysipelotrichales Erysipelotrichaceae Breznakia 32 Peptostreptococcales Anaerovoracaceae IOR16 33 Christensenellales MGBC116941 MGBC116941 34 Lachnospirales Lachnospiraceae Clostridium_Q 35 Christensenellales UBA3700 36 Lachnospirales Lachnospiraceae Roseburia 37 UBA3830 Phyla of the significant MAGs in warm ancombc_rand_table_mag %&gt;% filter(lfc_PopulationHot_dry &gt; 0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 9 2 Pseudomonadota 3 3 Bacillota 2 4 Bacillota_C 1 5 Desulfobacterota 1 6 Fusobacteriota 1 Phyla of the significant MAGs in cold ancombc_rand_table_mag %&gt;% filter(lfc_PopulationHot_dry &lt; 0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 9 2 Bacillota_A 7 3 Bacillota_C 1 4 Campylobacterota 1 5 Cyanobacteriota 1 6 Verrucomicrobiota 1 7.6 Functional capacity 7.6.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.346 0.0194 2 Hot_dry 0.327 0.0244 MCI_element_wild &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Wild&quot;) shapiro.test(MCI_element_wild$value) #normality test Shapiro-Wilk normality test data: MCI_element_wild$value W = 0.96385, p-value = 0.4503 var.test(value ~ Population, data = MCI_element_wild) F test to compare two variances data: value by Population F = 0.63604, num df = 17, denom df = 8, p-value = 0.4114 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.1569001 1.9468860 sample estimates: ratio of variances 0.636035 t.test(value ~ Population, data = MCI_element_wild, var.equal = TRUE) Two Sample t-test data: value by Population t = 2.2416, df = 25, p-value = 0.03411 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: 0.001570698 0.037107300 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3461279 0.3267889 7.6.2 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code, Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(., uniqueGIFT_db[c(1, 3, 4)], by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference = Cold_wet - Hot_dry) %&gt;% mutate(group_color = ifelse(Difference &lt; 0, &quot;Hot&quot;, &quot;Cold&quot;)) difference_table_wild %&gt;% ggplot(aes(x = forcats::fct_reorder(Function, Difference),y = Difference,fill = group_color)) + geom_col() + scale_fill_manual(values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + geom_hline(yintercept = 0) + coord_flip() + theme( axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line( size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot; ) ) + xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["do-populations-mantain-a-different-gm-after-acclimation.html", "Chapter 8 Do populations mantain a different GM after acclimation? 8.1 Shapiro test 8.2 Alpha diversity 8.3 Beta diversity 8.4 Functional capacity", " Chapter 8 Do populations mantain a different GM after acclimation? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 8.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2445285 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.4803302 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3335912 8.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.3 Beta diversity Number of samples used samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) length(samples_to_keep_accli) [1] 26 Richness richness_accli &lt;- as.matrix(beta_q0n$S) richness_accli &lt;- as.dist(richness_accli[rownames(richness_accli) %in% samples_to_keep_accli, colnames(richness_accli) %in% samples_to_keep_accli]) betadisper(richness_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.093187 0.093187 11.812 999 0.004 ** Residuals 24 0.189340 0.007889 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.003 Hot_dry 0.0021532 adonis2(richness_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(richness_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.639630 0.1929088 5.736415 0.001 Residual 24 6.859879 0.8070912 NA NA Total 25 8.499509 1.0000000 NA NA Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.05603 0.056026 4.1918 999 0.05 * Residuals 24 0.32077 0.013365 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.042 Hot_dry 0.051717 adonis2(neutral_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nmvce8fw40ditobn0t5e, .table th.tinytable_css_nmvce8fw40ditobn0t5e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9219ensdmx0dk9hm8ftj, .table th.tinytable_css_9219ensdmx0dk9hm8ftj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.961192 0.2493171 7.970889 0.001 Residual 24 5.905063 0.7506829 NA NA Total 25 7.866255 1.0000000 NA NA Phylogenetic phylo_accli &lt;- as.matrix(beta_q1p$S) phylo_accli &lt;- as.dist(phylo_accli[rownames(phylo_accli) %in% samples_to_keep_accli, colnames(phylo_accli) %in% samples_to_keep_accli]) betadisper(phylo_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03637 0.036365 2.3087 999 0.147 Residuals 24 0.37804 0.015752 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.137 Hot_dry 0.14172 adonis2(phylo_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(phylo_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_k810rky4s5ugx6j7ykr1, .table th.tinytable_css_k810rky4s5ugx6j7ykr1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eij79dsx7oaprbxzfovk, .table th.tinytable_css_eij79dsx7oaprbxzfovk { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2113395 0.1379515 3.84066 0.017 Residual 24 1.3206449 0.8620485 NA NA Total 25 1.5319844 1.0000000 NA NA NMDS richness_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) 8.4 Functional capacity 8.4.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.329 0.0319 2 Hot_dry 0.348 0.0158 MCI_element_acclimation&lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) shapiro.test(MCI_element_acclimation$value) #normality test Shapiro-Wilk normality test data: MCI_element_acclimation$value W = 0.92832, p-value = 0.0707 var.test(value ~ Population, data = MCI_element_acclimation) F test to compare two variances data: value by Population F = 4.0687, num df = 16, denom df = 8, p-value = 0.05027 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.9981905 12.7140279 sample estimates: ratio of variances 4.06872 t.test(value ~ Population, data=MCI_element_acclimation, var.equal = TRUE) Two Sample t-test data: value by Population t = -1.633, df = 24, p-value = 0.1155 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: -0.042021638 0.004897661 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3292377 0.3477997 8.4.2 Differences in functional pathways element_gift_acclimation&lt;- element_gift %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_acclimation &lt;- element_gift_acclimation %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_acclimation &lt;- element_gift_acclimation %&gt;% select(Tube_code, all_of(intersect( significant_elements_acclimation$trait, colnames(element_gift_acclimation) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_acclimation &lt;- element_gift_sig_acclimation %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_wet-Hot_dry)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Hot&quot;,&quot;Cold&quot;)) difference_table_acclimation %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["faecal-microbiota-transplantation-fmt.html", "Chapter 9 Faecal Microbiota Transplantation (FMT) 9.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 9.2 Is the GM of the intervention group still more similar to warm population after one week from FMT?", " Chapter 9 Faecal Microbiota Transplantation (FMT) load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 9.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 9.1.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6077531 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3357428 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.9273925 9.1.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) ***p&lt;0.05 when comparing neutral beta diversity between Cold-control and Warm-control 9.1.3 Beta diversity Number of samples used samples_to_keep_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) length(samples_to_keep_post1) [1] 26 Richness richness_post1 &lt;- as.matrix(beta_q0n$S) richness_post1 &lt;- as.dist(richness_post1[rownames(richness_post1) %in% samples_to_keep_post1, colnames(richness_post1) %in% samples_to_keep_post1]) betadisper(richness_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01060 0.0052999 1.1619 999 0.38 Residuals 23 0.10491 0.0045613 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.046000 0.675 Hot_control 0.055742 0.454 Treatment 0.625388 0.420078 adonis2(richness_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.195567 0.1448246 1.947534 0.002 Residual 23 7.059710 0.8551754 NA NA Total 25 8.255277 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(richness_post1),] pairwise &lt;- pairwise.adonis(richness_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_o6hfkymqdo9hxh65gzhu, .table th.tinytable_css_o6hfkymqdo9hxh65gzhu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9sbj2gho4zrm24unutke, .table th.tinytable_css_9sbj2gho4zrm24unutke { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.5615418 1.729004 0.1033537 0.013 0.039 . Control vs Hot_control 1 0.8438429 2.793772 0.1486541 0.002 0.006 * Treatment vs Hot_control 1 0.3734921 1.268929 0.0779971 0.108 0.324 Neutral neutral_post1 &lt;- as.matrix(beta_q1n$S) neutral_post1 &lt;- as.dist(neutral_post1[rownames(neutral_post1) %in% samples_to_keep_post1, colnames(neutral_post1) %in% samples_to_keep_post1]) betadisper(neutral_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002996 0.0014982 0.1374 999 0.883 Residuals 23 0.250747 0.0109020 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.55300 0.877 Hot_control 0.55320 0.784 Treatment 0.86589 0.76648 adonis2(neutral_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_khx4bnmx7jbjcsfx68bi, .table th.tinytable_css_khx4bnmx7jbjcsfx68bi { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8cttbobld5mvixvext93, .table th.tinytable_css_8cttbobld5mvixvext93 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.395968 0.1900228 2.697931 0.002 Residual 23 5.950350 0.8099772 NA NA Total 25 7.346318 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(neutral_post1),] pairwise &lt;- pairwise.adonis(neutral_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xmij3se8qn5wlzp8tmi1, .table th.tinytable_css_xmij3se8qn5wlzp8tmi1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9xrgxg2vvuw38m1dsj9w, .table th.tinytable_css_9xrgxg2vvuw38m1dsj9w { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6051778 2.250849 0.13047758 0.013 0.039 . Control vs Hot_control 1 1.0528902 4.143637 0.20570451 0.001 0.003 * Treatment vs Hot_control 1 0.4150076 1.637268 0.09840968 0.047 0.141 Phylogenetic phylo_post1 &lt;- as.matrix(beta_q1p$S) phylo_post1 &lt;- as.dist(phylo_post1[rownames(phylo_post1) %in% samples_to_keep_post1, colnames(phylo_post1) %in% samples_to_keep_post1]) betadisper(phylo_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00399 0.0019943 0.1213 999 0.912 Residuals 23 0.37812 0.0164399 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.92600 0.710 Hot_control 0.91065 0.775 Treatment 0.65272 0.74852 adonis2(phylo_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_7a8inmgyn0mmupla9vna, .table th.tinytable_css_7a8inmgyn0mmupla9vna { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0ssnpq3yjg5qrvzsh2cb, .table th.tinytable_css_0ssnpq3yjg5qrvzsh2cb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.07451036 0.07059466 0.8735033 0.558 Residual 23 0.98095695 0.92940534 NA NA Total 25 1.05546731 1.00000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(phylo_post1),] pairwise &lt;- pairwise.adonis(phylo_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ev1ny2r44i4l031yei42, .table th.tinytable_css_ev1ny2r44i4l031yei42 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5h88gplddkwnz5mha69l, .table th.tinytable_css_5h88gplddkwnz5mha69l { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.01842535 0.4144162 0.02688498 0.772 1.000 Control vs Hot_control 1 0.05987967 1.7387847 0.09802164 0.133 0.399 Treatment vs Hot_control 1 0.03212966 0.6477782 0.04139746 0.705 1.000 NMDS richness_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) 9.1.4 Differentially abundant MAGs 9.1.4.1 Warm vs Intervention Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;warm_control&quot;)%&gt;% count(phylum, name = &quot;Hot_control&quot;) %&gt;% arrange(desc(Hot_control)) structural_zeros %&gt;% filter(present==&quot;treatment&quot;)%&gt;% count(phylum, name = &quot;Treatment&quot;) %&gt;% arrange(desc(Treatment)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_ym655txa0c3xtggai8kk, .table th.tinytable_css_ym655txa0c3xtggai8kk { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_hv8ssyfljbj91kyz9s94, .table th.tinytable_css_hv8ssyfljbj91kyz9s94 { border-bottom: solid #d3d8dc 0.1em; } phylum Treatment Hot_control p__Bacillota_A 9 12 p__Bacteroidota 8 5 p__Bacillota 3 9 p__Desulfobacterota 2 1 p__Actinomycetota 1 1 p__Campylobacterota 1 0 p__Cyanobacteriota 1 4 p__Verrucomicrobiota 1 0 p__Pseudomonadota 0 5 p__Bacillota_C 0 2 p__Bacillota_B 0 1 p__Chlamydiota 0 1 p__Spirochaetota 0 1 physeq_FMT1 &lt;- subset_samples(physeq_all, type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) physeq_FMT1 &lt;- prune_taxa(taxa_sums(physeq_FMT1)&gt;0, physeq_FMT1) ancom_rand_output_fmt1 = ancombc2(data = physeq_FMT1, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_fmt1, file=&quot;data/ancom_rand_output_fmt1.RData&quot;) load(&quot;data/ancom_rand_output_fmt1.RData&quot;) ancom_rand_output_fmt1$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) taxon lfc_typeTreatment p_typeTreatment 1 AH1_2nd_2:bin_000001 1.5624677 0.018641387 2 LI1_2nd_9:bin_000007 -1.7396762 0.049924046 3 AH1_2nd_16:bin_000020 1.2543468 0.020997275 4 AH1_2nd_8:bin_000006 -1.4308506 0.037799325 5 AH1_2nd_1:bin_000023 1.6503345 0.002495972 6 AH1_2nd_16:bin_000058 1.3473611 0.022280401 7 AH1_2nd_2:bin_000017 1.7705419 0.024865927 8 LI1_2nd_8:bin_000019 -2.1022782 0.011005642 9 AH1_2nd_1:bin_000048 0.8195104 0.035758754 10 AH1_2nd_5:bin_000006 1.8686151 0.013777916 11 AH1_2nd_20:bin_000016 -1.4853429 0.016974603 12 LI1_2nd_4:bin_000003 -1.6188761 0.003324944 13 AH1_2nd_20:bin_000073 -1.9847277 0.049409557 taxon lfc_typeTreatment p_typeTreatment domain phylum class order 1 LI1_2nd_8:bin_000019 -2.1022782 0.011005642 d__Bacteria Bacillota_A c__Clostridia Christensenellales 2 AH1_2nd_20:bin_000073 -1.9847277 0.049409557 d__Bacteria Bacillota c__Bacilli Lactobacillales 3 LI1_2nd_9:bin_000007 -1.7396762 0.049924046 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 4 LI1_2nd_4:bin_000003 -1.6188761 0.003324944 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 5 AH1_2nd_20:bin_000016 -1.4853429 0.016974603 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 6 AH1_2nd_8:bin_000006 -1.4308506 0.037799325 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 7 AH1_2nd_1:bin_000048 0.8195104 0.035758754 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales 8 AH1_2nd_16:bin_000020 1.2543468 0.020997275 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales 9 AH1_2nd_16:bin_000058 1.3473611 0.022280401 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 10 AH1_2nd_2:bin_000001 1.5624677 0.018641387 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 11 AH1_2nd_1:bin_000023 1.6503345 0.002495972 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 12 AH1_2nd_2:bin_000017 1.7705419 0.024865927 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 13 AH1_2nd_5:bin_000006 1.8686151 0.013777916 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales family genus species 1 UBA3700 2 Enterococcaceae Enterococcus Enterococcus sp002174455 3 CAG-239 CAJLXD01 4 Erysipelotrichaceae Dielma 5 Erysipelotrichaceae 6 Lachnospiraceae CAG-95 7 Anaerovoracaceae 8 Desulfovibrionaceae Bilophila 9 Lachnospiraceae Enterocloster 10 Bacteroidaceae 11 Lachnospiraceae 12 Lachnospiraceae Copromonas 13 Acidaminococcaceae Phascolarctobacterium Phascolarctobacterium sp900544795 Phyla of the significant MAGs in warm control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 4 2 Bacillota_C 1 3 Bacteroidota 1 4 Desulfobacterota 1 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota 3 2 Bacillota_A 2 3 Pseudomonadota 1 9.1.4.1.1 Intervention vs cold control Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;cold_control&quot;)%&gt;% count(phylum, name = &quot;Cold_control&quot;) %&gt;% arrange(desc(Cold_control)) structural_zeros %&gt;% filter(present==&quot;treatment&quot;)%&gt;% count(phylum, name = &quot;Treatment&quot;) %&gt;% arrange(desc(Treatment)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_y05yyv5xa1s65tjyx4u2, .table th.tinytable_css_y05yyv5xa1s65tjyx4u2 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_hu1x5h8qrg9nvfokq8wm, .table th.tinytable_css_hu1x5h8qrg9nvfokq8wm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Treatment Cold_control p__Bacteroidota 24 10 p__Bacillota_A 16 4 p__Desulfobacterota 3 3 p__Bacillota 2 3 p__Campylobacterota 2 0 p__Cyanobacteriota 2 2 p__Bacillota_C 1 2 p__Elusimicrobiota 1 0 p__Pseudomonadota 1 4 p__Actinomycetota 0 1 p__Chlamydiota 0 1 physeq_FMT1_cold &lt;- subset_samples(physeq_all, type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) physeq_FMT1_cold &lt;- prune_taxa(taxa_sums(physeq_FMT1_cold)&gt;0, physeq_FMT1_cold) ancom_rand_output_cold = ancombc2(data = physeq_FMT1_cold, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_cold, file=&quot;data/ancom_rand_output_cold.RData&quot;) load(&quot;data/ancom_rand_output_cold.RData&quot;) ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,8,9,10) %&gt;% tt() .table td.tinytable_css_cnlv46w9wkgplyzp0vjd, .table th.tinytable_css_cnlv46w9wkgplyzp0vjd { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8xt5ozbyitqay9sjlbzf, .table th.tinytable_css_8xt5ozbyitqay9sjlbzf { border-bottom: solid #d3d8dc 0.1em; } lfc_typeTreatment p_typeTreatment family genus species 1.2256059 0.043646388 f__Bacteroidaceae g__Bacteroides s__Bacteroides thetaiotaomicron -1.2462017 0.012035285 f__Bacteroidaceae g__Bacteroides s__ -1.0062665 0.031899559 f__Bacteroidaceae g__Bacteroides s__ -1.0621004 0.043181367 f__Bacteroidaceae g__Bacteroides s__ 0.9921852 0.040291679 f__Bacteroidaceae g__ s__ -0.9535619 0.022378827 f__Tannerellaceae g__Parabacteroides s__ -1.5082708 0.005921075 f__Tannerellaceae g__Parabacteroides s__ 1.1151699 0.039269787 f__Enterobacteriaceae g__Citrobacter_A s__Citrobacter_A amalonaticus -1.5520996 0.007891467 f__Enterobacteriaceae g__Proteus s__Proteus cibarius -0.9485898 0.028338796 f__Oscillospiraceae g__Intestinimonas s__ -1.3011091 0.025966631 f__Lachnospiraceae g__JALFVM01 s__ -1.1660509 0.024698949 f__Lachnospiraceae g__Ventrimonas s__ -1.7559585 0.018538511 f__UBA3700 g__ s__ -0.9047364 0.017320934 f__Mycoplasmoidaceae g__Ureaplasma s__ 1.4093883 0.038813162 f__Enterococcaceae g__Enterococcus s__Enterococcus sp002174455 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 2 2 Bacillota 1 3 Pseudomonadota 1 Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 5 2 Bacillota_A 4 3 Bacillota 1 4 Pseudomonadota 1 9.1.4.2 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.373 0.0247 2 Hot_control 0.372 0.0367 3 Treatment 0.353 0.0186 MCI_tm5_ele &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT1&quot;) shapiro.test(MCI_tm5_ele$value)#normality test Shapiro-Wilk normality test data: MCI_tm5_ele$value W = 0.92343, p-value = 0.05415 res.aov &lt;- aov(value ~ type, data = MCI_tm5_ele)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00216 0.0010798 1.371 0.274 Residuals 23 0.01811 0.0007875 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 9.2 Is the GM of the intervention group still more similar to warm population after one week from FMT? 9.2.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1683943 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6310339 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3446539 9.2.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) ***p&lt;0.05 when comparing richness and neutral beta diversity between Cold-control and Cold-intervention 9.2.3 Beta diversity Number of samples used samples_to_keep_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) length(samples_to_keep_FMT2) [1] 27 Richness richness_FMT2 &lt;- as.matrix(beta_q0n$S) richness_FMT2 &lt;- as.dist(richness_FMT2[rownames(richness_FMT2) %in% samples_to_keep_FMT2, colnames(richness_FMT2) %in% samples_to_keep_FMT2]) betadisper(richness_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.003043 0.0015214 0.2578 999 0.777 Residuals 24 0.141630 0.0059013 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.93700 0.529 Hot_control 0.93628 0.538 Treatment 0.50455 0.54043 adonis2(richness_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(richness_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_h19wqgpmlul56q1xp976, .table th.tinytable_css_h19wqgpmlul56q1xp976 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5qefl7x44of5mhxa4xv4, .table th.tinytable_css_5qefl7x44of5mhxa4xv4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.504341 0.1967776 2.939822 0.001 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(richness_FMT2),] pairwise &lt;- pairwise.adonis(richness_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_u17ngwyrt0vslfxzx6rn, .table th.tinytable_css_u17ngwyrt0vslfxzx6rn { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_l7u5nwsqcwleyy09y6qr, .table th.tinytable_css_l7u5nwsqcwleyy09y6qr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6463814 2.560441 0.1379515 0.002 0.006 * Control vs Hot_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * Treatment vs Hot_control 1 0.4796256 1.916520 0.1069694 0.001 0.003 * Neutral neutral_FMT2 &lt;- as.matrix(beta_q1n$S) neutral_FMT2 &lt;- as.dist(neutral_FMT2[rownames(neutral_FMT2) %in% samples_to_keep_FMT2, colnames(neutral_FMT2) %in% samples_to_keep_FMT2]) betadisper(neutral_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.005365 0.0026827 0.309 999 0.767 Residuals 24 0.208332 0.0086805 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.76000 0.676 Hot_control 0.75233 0.461 Treatment 0.64640 0.46107 adonis2(neutral_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(neutral_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_re443eqn9ypdvth9da5x, .table th.tinytable_css_re443eqn9ypdvth9da5x { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5kij3zdojo2yscsat04a, .table th.tinytable_css_5kij3zdojo2yscsat04a { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.923807 0.2603795 4.224537 0.001 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(neutral_FMT2),] pairwise &lt;- pairwise.adonis(neutral_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_w1ph0jg5kue5cb3trudh, .table th.tinytable_css_w1ph0jg5kue5cb3trudh { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_jy6o2vh78t5neznteg7s, .table th.tinytable_css_jy6o2vh78t5neznteg7s { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 1.0227481 4.648335 0.2251191 0.001 0.003 * Control vs Hot_control 1 1.3619424 5.771031 0.2650785 0.001 0.003 * Treatment vs Hot_control 1 0.5010202 2.206532 0.1211945 0.003 0.009 * Phylogenetic phylo_FMT2 &lt;- as.matrix(beta_q1p$S) phylo_FMT2 &lt;- as.dist(phylo_FMT2[rownames(phylo_FMT2) %in% samples_to_keep_FMT2, colnames(phylo_FMT2) %in% samples_to_keep_FMT2]) betadisper(phylo_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002880 0.0014398 0.3483 999 0.686 Residuals 24 0.099207 0.0041336 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.80400 0.610 Hot_control 0.79696 0.399 Treatment 0.60817 0.41749 adonis2(phylo_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(phylo_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_q16727ehpbw5fh1ypdjn, .table th.tinytable_css_q16727ehpbw5fh1ypdjn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0uethtoi7zfvducezjh8, .table th.tinytable_css_0uethtoi7zfvducezjh8 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.1594363 0.2042241 3.079623 0.001 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(phylo_FMT2),] pairwise &lt;- pairwise.adonis(phylo_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_pa8o31qpapde75bs2f9l, .table th.tinytable_css_pa8o31qpapde75bs2f9l { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9il8t18rhelg02nlmybk, .table th.tinytable_css_9il8t18rhelg02nlmybk { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.05927454 2.382025 0.1295845 0.030 0.090 Control vs Hot_control 1 0.11081709 4.043656 0.2017424 0.002 0.006 * Treatment vs Hot_control 1 0.06906280 2.722460 0.1454115 0.002 0.006 * NMDS richness_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) 9.2.4 Differentially abundant MAGs 9.2.4.1 Warm vs Intervention Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;warm_control&quot;)%&gt;% count(phylum, name = &quot;Hot_control&quot;) %&gt;% arrange(desc(Hot_control)) structural_zeros %&gt;% filter(present==&quot;treatment&quot;)%&gt;% count(phylum, name = &quot;Treatment&quot;) %&gt;% arrange(desc(Treatment)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_gk5sptodykfbi28rjk5d, .table th.tinytable_css_gk5sptodykfbi28rjk5d { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_czvebnkmmusgelz2t9py, .table th.tinytable_css_czvebnkmmusgelz2t9py { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Treatment Hot_control p__Bacillota_A 21 12 p__Bacteroidota 12 8 p__Pseudomonadota 10 3 p__Bacillota 9 12 p__Desulfobacterota 2 1 p__Verrucomicrobiota 2 1 p__Bacillota_C 1 1 p__Bacillota_B 0 2 p__Actinomycetota 0 1 p__Chlamydiota 0 1 p__Cyanobacteriota 0 1 physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output_fmt2 = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_fmt2, file=&quot;data/ancom_rand_output_fmt2.RData&quot;) load(&quot;data/ancom_rand_output_fmt2.RData&quot;) ancom_rand_output_fmt2$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_mlk7no1z53xeeugqol95, .table th.tinytable_css_mlk7no1z53xeeugqol95 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_483h2fpigyjnv61vqfcf, .table th.tinytable_css_483h2fpigyjnv61vqfcf { border-bottom: solid #d3d8dc 0.1em; } lfc_typeTreatment p_typeTreatment order family genus -0.9799517 0.010240224 o__Bacteroidales f__Marinifilaceae g__Odoribacter -2.0630951 0.002999285 o__Bacteroidales f__UBA932 g__Egerieousia -1.1480131 0.046135545 o__Bacteroidales f__Rikenellaceae g__Alistipes 0.7991767 0.045711616 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.3259567 0.001830616 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -1.1645959 0.017457156 o__Bacteroidales f__Bacteroidaceae g__ 1.1208856 0.014803041 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.8614896 0.015218970 o__Bacteroidales f__Tannerellaceae g__Parabacteroides_B -0.8790352 0.019288325 o__Flavobacteriales f__UBA1820 g__Merdimorpha -2.1415160 0.010360257 o__Campylobacterales f__Helicobacteraceae g__NHYM01 -0.8729378 0.034039449 o__RF32 f__CAG-239 g__MGBC133411 -1.0598733 0.017277511 o__UBA3830 f__UBA3830 g__ 0.9281080 0.007983668 o__Desulfovibrionales f__Desulfovibrionaceae g__ 0.7610045 0.018943923 o__Oscillospirales f__Oscillospiraceae g__Scatomorpha -2.2773130 0.012290653 o__TANB77 f__CAG-508 g__CAG-269 -1.7222700 0.031082350 o__Lachnospirales f__Lachnospiraceae g__Roseburia 1.4250884 0.007300342 o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 -1.6691461 0.013546149 o__Lachnospirales f__Lachnospiraceae g__Kineothrix -0.9669977 0.021904408 o__Lachnospirales f__Lachnospiraceae g__CAG-95 0.7230780 0.036363774 o__Lachnospirales f__Lachnospiraceae g__ -1.2650492 0.001659719 o__Lachnospirales f__Lachnospiraceae g__Ventrimonas 1.1910492 0.014313824 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A -0.7312316 0.034090605 o__Lachnospirales f__Lachnospiraceae g__Enterocloster -1.0215502 0.007649379 o__Christensenellales f__UBA3700 g__ -1.2441842 0.011185776 o__Christensenellales f__DTU072 g__ -1.4267645 0.002034489 o__Christensenellales f__ g__ -0.9656400 0.003991841 o__Christensenellales f__MGBC116941 g__MGBC116941 -0.8042352 0.042298258 o__Acidaminococcales f__Acidaminococcaceae g__Phascolarctobacterium -1.2364531 0.013817739 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ -0.9974743 0.017633030 o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma taxon lfc_typeTreatment p_typeTreatment domain phylum class order 1 LI1_2nd_3:bin_000017 -2.2773130 0.012290653 d__Bacteria Bacillota_A c__Clostridia TANB77 2 AH1_2nd_7:bin_000028 -2.1415160 0.010360257 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales 3 AH1_2nd_6:bin_000037 -2.0630951 0.002999285 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 4 LI1_2nd_7:bin_000038 -1.8614896 0.015218970 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 5 AH1_2nd_19:bin_000005 -1.7222700 0.031082350 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 6 AH1_2nd_20:bin_000009 -1.6691461 0.013546149 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 7 LI1_2nd_4:bin_000001 -1.4267645 0.002034489 d__Bacteria Bacillota_A c__Clostridia Christensenellales 8 LI1_2nd_7:bin_000005 -1.2650492 0.001659719 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 9 LI1_2nd_5:bin_000013 -1.2441842 0.011185776 d__Bacteria Bacillota_A c__Clostridia Christensenellales 10 LI1_2nd_7:bin_000016 -1.2364531 0.013817739 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 11 LI1_2nd_4:bin_000036 -1.1645959 0.017457156 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 12 AH1_2nd_16:bin_000019 -1.1480131 0.046135545 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 13 AH1_2nd_6:bin_000030 -1.0598733 0.017277511 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 14 AH1_2nd_16:bin_000018 -1.0215502 0.007649379 d__Bacteria Bacillota_A c__Clostridia Christensenellales 15 LI1_2nd_4:bin_000003 -0.9974743 0.017633030 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 16 LI1_2nd_5:bin_000037 -0.9799517 0.010240224 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 17 AH1_2nd_8:bin_000006 -0.9669977 0.021904408 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 18 LI1_2nd_2:bin_000006 -0.9656400 0.003991841 d__Bacteria Bacillota_A c__Clostridia Christensenellales 19 LI1_2nd_7:bin_000014 -0.8790352 0.019288325 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales 20 AH1_2nd_13:bin_000011 -0.8729378 0.034039449 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 21 AH1_2nd_5:bin_000006 -0.8042352 0.042298258 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales 22 LI1_2nd_4:bin_000052 -0.7312316 0.034090605 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 23 AH1_2nd_1:bin_000023 0.7230780 0.036363774 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 24 AH1_2nd_16:bin_000064 0.7610045 0.018943923 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 25 AH1_2nd_13:bin_000055 0.7991767 0.045711616 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 26 LI1_2nd_1:bin_000014 0.9281080 0.007983668 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales 27 AH1_2nd_10:bin_000097 1.1208856 0.014803041 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 28 AH1_2nd_14:bin_000003 1.1910492 0.014313824 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 29 AH1_2nd_11:bin_000028 1.3259567 0.001830616 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 30 AH1_2nd_2:bin_000003 1.4250884 0.007300342 d__Bacteria Bacillota_A c__Clostridia Lachnospirales family genus species 1 CAG-508 CAG-269 2 Helicobacteraceae NHYM01 3 UBA932 Egerieousia 4 Tannerellaceae Parabacteroides_B 5 Lachnospiraceae Roseburia 6 Lachnospiraceae Kineothrix 7 8 Lachnospiraceae Ventrimonas 9 DTU072 10 Erysipelotrichaceae Clostridium_AQ 11 Bacteroidaceae 12 Rikenellaceae Alistipes 13 UBA3830 14 UBA3700 15 Erysipelotrichaceae Dielma 16 Marinifilaceae Odoribacter 17 Lachnospiraceae CAG-95 18 MGBC116941 MGBC116941 19 UBA1820 Merdimorpha 20 CAG-239 MGBC133411 21 Acidaminococcaceae Phascolarctobacterium Phascolarctobacterium sp900544795 22 Lachnospiraceae Enterocloster 23 Lachnospiraceae 24 Oscillospiraceae Scatomorpha 25 Bacteroidaceae Bacteroides Bacteroides fragilis_B 26 Desulfovibrionaceae 27 Tannerellaceae Parabacteroides 28 Lachnospiraceae Hungatella_A 29 Bacteroidaceae Bacteroides 30 Lachnospiraceae JAAYNV01 Phyla of the significant MAGs in warm control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 4 2 Bacteroidota 3 3 Desulfobacterota 1 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 10 2 Bacteroidota 6 3 Bacillota 2 4 Pseudomonadota 2 5 Bacillota_C 1 6 Campylobacterota 1 9.2.4.1.1 Intervention vs cold control Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;cold_control&quot;)%&gt;% count(phylum, name = &quot;Cold_control&quot;) %&gt;% arrange(desc(Cold_control)) structural_zeros %&gt;% filter(present==&quot;treatment&quot;)%&gt;% count(phylum, name = &quot;Treatment&quot;) %&gt;% arrange(desc(Treatment)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_kh3akm7desemeorkcy0t, .table th.tinytable_css_kh3akm7desemeorkcy0t { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7s5itmywro5dj297rxv0, .table th.tinytable_css_7s5itmywro5dj297rxv0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Treatment Cold_control p__Bacteroidota 25 5 p__Bacillota_A 22 12 p__Pseudomonadota 10 3 p__Cyanobacteriota 5 2 p__Bacillota 2 3 p__Desulfobacterota 2 1 p__Bacillota_C 1 1 p__Elusimicrobiota 1 0 p__Spirochaetota 1 0 p__Verrucomicrobiota 1 0 p__Actinomycetota 0 1 p__Chlamydiota 0 1 physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output_cold_fmt2 = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_cold_fmt2, file=&quot;data/ancom_rand_output_cold_fmt2.RData&quot;) load(&quot;data/ancom_rand_output_cold_fmt2.RData&quot;) ancom_rand_output_cold_fmt2$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_7ubq6qjyrzaeon9e51t3, .table th.tinytable_css_7ubq6qjyrzaeon9e51t3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2629mqlhjoemy7wj4se8, .table th.tinytable_css_2629mqlhjoemy7wj4se8 { border-bottom: solid #d3d8dc 0.1em; } lfc_typeTreatment p_typeTreatment order family genus 2.0051519 1.152900e-02 o__Opitutales f__LL51 g__ 2.3284281 2.348687e-02 o__Opitutales f__LL51 g__ -1.7569061 1.580590e-02 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.4187676 4.264344e-02 o__Bacteroidales f__Rikenellaceae g__Alistipes 1.3480932 1.947976e-03 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -0.6584569 4.887177e-02 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.5576447 1.385143e-03 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.4351800 6.365210e-03 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -0.9800862 3.716670e-02 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 2.7879501 2.491407e-04 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.0180722 4.539850e-02 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -1.0649675 1.353487e-02 o__Bacteroidales f__Bacteroidaceae g__ -2.7491777 6.824667e-05 o__Bacteroidales f__Tannerellaceae g__Parabacteroides 0.9679065 2.988554e-02 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.3438014 2.593287e-02 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.8611557 1.182286e-02 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -3.1284556 4.564624e-02 o__Campylobacterales f__Helicobacteraceae g__NHYM01 -1.1609230 1.405843e-02 o__RF32 f__CAG-239 g__MGBC133411 2.9527332 4.794393e-02 o__Enterobacterales f__Enterobacteriaceae g__Proteus 0.9352681 1.239637e-02 o__Desulfovibrionales f__Desulfovibrionaceae g__Mailhella 1.3408559 3.043233e-03 o__Desulfovibrionales f__Desulfovibrionaceae g__Bilophila -1.1305900 4.113893e-03 o__Oscillospirales f__Acutalibacteraceae g__ -2.4924748 2.164763e-02 o__Lachnospirales f__Lachnospiraceae g__Roseburia -1.1013291 3.286587e-02 o__Lachnospirales f__Lachnospiraceae g__ 1.4594281 1.579270e-02 o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 -1.0908051 2.139197e-02 o__Lachnospirales f__Lachnospiraceae g__Ventrimonas 1.2159564 1.572759e-02 o__Lachnospirales f__Lachnospiraceae g__Copromonas 1.1567255 1.964848e-02 o__Lachnospirales f__Lachnospiraceae g__Hungatella 1.1231216 2.533168e-02 o__Lachnospirales f__Lachnospiraceae g__ 1.2067622 3.114696e-02 o__Lachnospirales f__Lachnospiraceae g__MGBC136627 1.0298803 4.155744e-02 o__Christensenellales f__UBA3700 g__ 1.4624813 1.127300e-02 o__Christensenellales f__UBA3700 g__ 1.5979498 2.309533e-02 o__Selenomonadales f__ g__ 0.9939076 2.781430e-02 o__Peptococcales f__Peptococcaceae g__RGIG6463 -0.9891962 3.433356e-02 o__Mycoplasmatales f__Mycoplasmoidaceae g__Mycoplasmoides 1.1811988 4.678811e-02 o__Erysipelotrichales f__Erysipelotrichaceae g__NSJ-61 1.4322566 2.252102e-02 o__Gastranaerophilales f__Gastranaerophilaceae g__CALURL01 -1.2831333 2.147405e-02 o__Gastranaerophilales f__Gastranaerophilaceae g__Scatousia Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 7 2 Bacteroidota 6 3 Desulfobacterota 2 4 Verrucomicrobiota 2 5 Bacillota 1 6 Bacillota_B 1 7 Bacillota_C 1 8 Cyanobacteriota 1 9 Pseudomonadota 1 Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 7 2 Bacillota_A 4 3 Campylobacterota 2 4 Bacillota 1 5 Cyanobacteriota 1 6 Pseudomonadota 1 9.2.4.2 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.352 0.0223 2 Hot_control 0.350 0.0293 3 Treatment 0.346 0.0255 MCI_FMT2 &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT2&quot;) shapiro.test(MCI_FMT2$value) Shapiro-Wilk normality test data: MCI_FMT2$value W = 0.96248, p-value = 0.4203 res.aov &lt;- aov(value ~ type, data = MCI_FMT2) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00017 0.0000852 0.127 0.881 Residuals 24 0.01604 0.0006682 Functional differences CC and CI significant_elements&lt;-element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_elements$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 7)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(type!=&quot;Hot_control&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code) %&gt;% group_by(type) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Control-Treatment)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Control&quot;,&quot;Treatment&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; "],["changes-after-fmt-compared-to-acclimation.html", "Chapter 10 Changes after FMT compared to acclimation 10.1 What is the trend of the microbiota in each type after FMT? 10.2 What is the effect of FMT and temperature on the GM after 1 week compared to acclimation? 10.3 What is the effect of FMT and temperature on the GM after 2 weeks caompared to acclimation?", " Chapter 10 Changes after FMT compared to acclimation load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 10.1 What is the trend of the microbiota in each type after FMT? 10.1.1 Alpha diversity label_map &lt;- c( &quot;Control&quot; = &quot;Cold-control&quot;, &quot;Treatment&quot; = &quot;Cold-intervention&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;, &quot;FMT2&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.7695) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 757.7 783.7 -367.8 735.7 68 Scaled residuals: Min 1Q Median 3Q Max -2.01194 -0.49653 0.06196 0.55789 1.90953 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.02586 0.1608 Number of obs: 79, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9089 0.1696 23.046 &lt;2e-16 *** typeHot_control 0.5568 0.2283 2.439 0.0147 * typeTreatment -0.1233 0.2297 -0.537 0.5915 time_pointFMT1 -0.3140 0.2167 -1.449 0.1473 time_pointFMT2 0.1487 0.2173 0.684 0.4937 typeHot_control:time_pointFMT1 -0.1155 0.2983 -0.387 0.6986 typeTreatment:time_pointFMT1 0.4309 0.3068 1.404 0.1602 typeHot_control:time_pointFMT2 -0.3876 0.2988 -1.297 0.1945 typeTreatment:time_pointFMT2 0.4093 0.2990 1.369 0.1710 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typHt_ typTrt t_FMT1 t_FMT2 tH_:_FMT1 tT:_FMT1 tH_:_FMT2 typHt_cntrl -0.741 typeTretmnt -0.721 0.535 tim_pntFMT1 -0.677 0.503 0.497 tim_pntFMT2 -0.702 0.520 0.507 0.532 typH_:_FMT1 0.496 -0.671 -0.362 -0.727 -0.389 typTr:_FMT1 0.482 -0.357 -0.664 -0.707 -0.378 0.515 typH_:_FMT2 0.515 -0.684 -0.370 -0.388 -0.730 0.516 0.276 typTr:_FMT2 0.498 -0.370 -0.686 -0.384 -0.719 0.280 0.511 0.524 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Control 3.85 0.1050 Inf 3.65 4.06 Hot_control 4.24 0.0996 Inf 4.05 4.44 Treatment 4.01 0.1030 Inf 3.81 4.21 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Control - Hot_control -0.389 0.144 Inf -2.711 0.0184 Control - Treatment -0.157 0.145 Inf -1.083 0.5246 Hot_control - Treatment 0.232 0.143 Inf 1.627 0.2342 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.05 0.0938 Inf 3.87 4.24 FMT1 3.84 0.0949 Inf 3.66 4.03 FMT2 4.21 0.0895 Inf 4.03 4.38 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - FMT1 0.209 0.123 Inf 1.700 0.2050 Acclimation - FMT2 -0.156 0.121 Inf -1.286 0.4028 FMT1 - FMT2 -0.365 0.122 Inf -2.997 0.0077 Results are averaged over the levels of: type Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates Neutral Modelq1n &lt;- nlme::lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 563.2664 587.9998 -270.6332 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.551076 9.160157 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.343055 3.603126 46 5.923483 0.0000 typeHot_control 23.258307 4.960549 24 4.688656 0.0001 typeTreatment -3.944072 4.960549 24 -0.795088 0.4344 time_pointFMT1 -3.983722 4.472618 46 -0.890691 0.3777 time_pointFMT2 2.374489 4.472618 46 0.530895 0.5980 typeHot_control:time_pointFMT1 -14.877819 6.216964 46 -2.393101 0.0208 typeTreatment:time_pointFMT1 11.253000 6.325237 46 1.779064 0.0818 typeHot_control:time_pointFMT2 -14.775497 6.216964 46 -2.376642 0.0217 typeTreatment:time_pointFMT2 20.108022 6.216964 46 3.234380 0.0023 Correlation: (Intr) typHt_ typTrt t_FMT1 t_FMT2 tH_:_FMT1 tT:_FMT1 tH_:_FMT2 typeHot_control -0.726 typeTreatment -0.726 0.528 time_pointFMT1 -0.663 0.481 0.481 time_pointFMT2 -0.663 0.481 0.481 0.534 typeHot_control:time_pointFMT1 0.477 -0.649 -0.346 -0.719 -0.384 typeTreatment:time_pointFMT1 0.469 -0.340 -0.638 -0.707 -0.378 0.509 typeHot_control:time_pointFMT2 0.477 -0.649 -0.346 -0.384 -0.719 0.518 0.272 typeTreatment:time_pointFMT2 0.477 -0.346 -0.649 -0.384 -0.719 0.276 0.509 0.518 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.1324340 -0.7088533 0.0456110 0.6569569 1.9681295 Number of Observations: 79 Number of Groups: 27 emmeans::emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 20.8 2.36 26 16.0 25.7 Hot_control 34.2 2.33 24 29.4 39.0 Treatment 27.3 2.36 24 22.4 32.2 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Hot_control -13.37 3.31 24 -4.038 0.0013 Control - Treatment -6.51 3.33 24 -1.952 0.1461 Hot_control - Treatment 6.86 3.31 24 2.073 0.1170 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 27.8 2.01 24 23.6 31.9 FMT1 22.6 2.01 24 18.4 26.7 FMT2 31.9 1.97 24 27.9 36.0 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 5.19 2.55 46 2.034 0.1156 Acclimation - FMT2 -4.15 2.52 46 -1.646 0.2372 FMT1 - FMT2 -9.34 2.52 46 -3.703 0.0016 Results are averaged over the levels of: type Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Phylogenetic Model_phylo &lt;- nlme::lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 269.7976 294.5311 -123.8988 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.4986226 1.145917 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.256251 0.4407611 46 11.925398 0.0000 typeHot_control 1.266332 0.6064636 24 2.088060 0.0476 typeTreatment 0.283689 0.6064636 24 0.467776 0.6442 time_pointFMT1 -0.837008 0.5590601 46 -1.497169 0.1412 time_pointFMT2 -0.481515 0.5590601 46 -0.861293 0.3935 typeHot_control:time_pointFMT1 -1.410952 0.7774021 46 -1.814958 0.0761 typeTreatment:time_pointFMT1 -0.545877 0.7906304 46 -0.690432 0.4934 typeHot_control:time_pointFMT2 -0.585100 0.7774021 46 -0.752635 0.4555 typeTreatment:time_pointFMT2 0.056099 0.7774021 46 0.072162 0.9428 Correlation: (Intr) typHt_ typTrt t_FMT1 t_FMT2 tH_:_FMT1 tT:_FMT1 tH_:_FMT2 typeHot_control -0.727 typeTreatment -0.727 0.528 time_pointFMT1 -0.676 0.492 0.492 time_pointFMT2 -0.676 0.492 0.492 0.533 typeHot_control:time_pointFMT1 0.486 -0.663 -0.353 -0.719 -0.383 typeTreatment:time_pointFMT1 0.478 -0.348 -0.652 -0.707 -0.377 0.509 typeHot_control:time_pointFMT2 0.486 -0.663 -0.353 -0.383 -0.719 0.517 0.271 typeTreatment:time_pointFMT2 0.486 -0.353 -0.663 -0.383 -0.719 0.276 0.509 0.517 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.81722823 -0.52018811 -0.06481484 0.55835817 2.23628404 Number of Observations: 79 Number of Groups: 27 emmeans::emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Control 4.82 0.280 26 4.24 5.39 Hot_control 5.42 0.276 24 4.85 5.99 Treatment 4.94 0.280 24 4.36 5.52 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Control - Hot_control -0.601 0.393 24 -1.527 0.2963 Control - Treatment -0.120 0.396 24 -0.304 0.9505 Hot_control - Treatment 0.481 0.393 24 1.221 0.4525 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 5.77 0.245 24 5.27 6.28 FMT1 4.28 0.245 24 3.78 4.79 FMT2 5.12 0.241 24 4.62 5.61 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 1.489 0.319 46 4.666 0.0001 Acclimation - FMT2 0.658 0.316 46 2.085 0.1042 FMT1 - FMT2 -0.831 0.316 46 -2.635 0.0302 Results are averaged over the levels of: type Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates 10.1.1.1 Beta diversity Number of samples used samples_to_keep_post7 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post7 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) subset_meta_post7$time_point&lt;-as.factor(subset_meta_post7$time_point) subset_meta_post7$type&lt;-as.factor(subset_meta_post7$type) length(samples_to_keep_post7) [1] 79 Richness richness_post7 &lt;- as.matrix(beta_q0n$S) richness_post7 &lt;- as.dist(richness_post7[rownames(richness_post7) %in% samples_to_keep_post7, colnames(richness_post7) %in% samples_to_keep_post7]) betadisper(richness_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.06454 0.032268 4.9753 999 0.01 ** Residuals 76 0.49290 0.006485 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.0160000 0.697 Hot_control 0.0119513 0.002 Treatment 0.6817089 0.0035106 adonis2(richness_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(richness_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(richness_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_oydgv29n7n7c4hnrlw1m, .table th.tinytable_css_oydgv29n7n7c4hnrlw1m { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_fbrvn0jbx1bu9m4c05zg, .table th.tinytable_css_fbrvn0jbx1bu9m4c05zg { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 2 3.120806 0.11961754 5.546155 0.001 time_point 2 1.703776 0.06530413 3.027874 0.001 type:time_point 4 1.570884 0.06021051 1.395852 0.001 Residual 70 19.694403 0.75486782 NA NA Total 78 26.089870 1.00000000 NA NA Neutral neutral_post7 &lt;- as.matrix(beta_q1n$S) neutral_post7 &lt;- as.dist(neutral_post7[rownames(neutral_post7) %in% samples_to_keep_post7, colnames(neutral_post7) %in% samples_to_keep_post7]) betadisper(neutral_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.06738 0.033689 3.8309 999 0.031 * Residuals 76 0.66833 0.008794 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.2150000 0.186 Hot_control 0.1985046 0.009 Treatment 0.1611083 0.0069718 adonis2(neutral_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(neutral_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(neutral_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lhmgx8xdcpwakcekrsmo, .table th.tinytable_css_lhmgx8xdcpwakcekrsmo { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_exxtqajgn8zasuols284, .table th.tinytable_css_exxtqajgn8zasuols284 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 2 3.705559 0.14953527 7.609355 0.001 time_point 2 2.217656 0.08949199 4.553951 0.001 type:time_point 4 1.813192 0.07317011 1.861693 0.001 Residual 70 17.044094 0.68780262 NA NA Total 78 24.780501 1.00000000 NA NA Phylogenetic phylo_post7 &lt;- as.matrix(beta_q1p$S) phylo_post7 &lt;- as.dist(phylo_post7[rownames(phylo_post7) %in% samples_to_keep_post7, colnames(phylo_post7) %in% samples_to_keep_post7]) betadisper(phylo_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.05438 0.027192 2.1499 999 0.116 Residuals 76 0.96123 0.012648 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.704000 0.164 Hot_control 0.697512 0.083 Treatment 0.155309 0.083221 adonis2(phylo_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(phylo_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(phylo_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_b8kaowhncd8u1vz0g0c1, .table th.tinytable_css_b8kaowhncd8u1vz0g0c1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1pmzbp3kfedhut72ncqa, .table th.tinytable_css_1pmzbp3kfedhut72ncqa { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 2 0.2941494 0.07500331 3.592254 0.001 time_point 2 0.5528857 0.14097688 6.752032 0.001 type:time_point 4 0.2088312 0.05324856 1.275159 0.147 Residual 70 2.8659522 0.73077126 NA NA Total 78 3.9218184 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_richness_nmds_post7 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_neutral_nmds_post7 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_phylogenetic_nmds_post7 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post7, beta_neutral_nmds_post7, beta_phylogenetic_nmds_post7, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) beta_neutral_nmds_post7 10.2 What is the effect of FMT and temperature on the GM after 1 week compared to acclimation? 10.2.1 CI vs CC 10.2.1.1 Alpha diversity label_map &lt;- c( &quot;Control&quot; = &quot;Cold-control&quot;, &quot;Treatment&quot; = &quot;Cold-intervention&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type %in% c(&quot;Control&quot;,&quot;Treatment&quot;) &amp; time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(2.5327) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 329.2 338.4 -158.6 317.2 28 Scaled residuals: Min 1Q Median 3Q Max -1.4046 -0.7191 0.1331 0.6747 1.4330 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 4.531e-12 2.129e-06 Number of obs: 34, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9512 0.2275 17.368 &lt;2e-16 *** typeTreatment -0.1372 0.3132 -0.438 0.661 time_pointFMT1 -0.3225 0.3140 -1.027 0.304 typeTreatment:time_pointFMT1 0.4500 0.4435 1.015 0.310 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT1 typeTretmnt -0.726 tim_pntFMT1 -0.725 0.526 typTr:_FMT1 0.513 -0.706 -0.708 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 244.9928 253.4 -116.4964 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 6.116057 8.521967 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.027978 3.684717 16 5.706810 0.0000 typeTreatment -3.628995 5.079636 16 -0.714420 0.4853 time_pointFMT1 -3.668645 4.182131 14 -0.877219 0.3952 typeTreatment:time_pointFMT1 10.917012 5.914427 14 1.845828 0.0862 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.725 time_pointFMT1 -0.611 0.443 typeTreatment:time_pointFMT1 0.432 -0.582 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.79785802 -0.67295800 0.08387402 0.71606547 1.30935708 Number of Observations: 34 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 125.282 133.6892 -56.64101 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 7.864049e-05 1.386163 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.227341 0.4900827 16 10.666243 0.0000 typeTreatment 0.312600 0.6735542 16 0.464105 0.6488 time_pointFMT1 -0.808097 0.6735542 14 -1.199751 0.2501 typeTreatment:time_pointFMT1 -0.541741 0.9525495 14 -0.568728 0.5786 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.728 time_pointFMT1 -0.728 0.529 typeTreatment:time_pointFMT1 0.514 -0.707 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.630942795 -0.368275262 0.004976243 0.364227875 2.050663052 Number of Observations: 34 Number of Groups: 18 10.2.1.2 Beta diversity Number of samples used samples_to_keep_post3 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post3 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) subset_meta_post3$time_point&lt;-as.factor(subset_meta_post3$time_point) subset_meta_post3$type&lt;-as.factor(subset_meta_post3$type) length(samples_to_keep_post3) [1] 34 Richness richness_post3 &lt;- as.matrix(beta_q0n$S) richness_post3 &lt;- as.dist(richness_post3[rownames(richness_post3) %in% samples_to_keep_post3, colnames(richness_post3) %in% samples_to_keep_post3]) betadisper(richness_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002424 0.0024241 0.4717 999 0.525 Residuals 32 0.164445 0.0051389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.515 Treatment 0.49714 adonis2(richness_post3 ~ type*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(richness_post3))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_l0uee914x78nucsk8qs3, .table th.tinytable_css_l0uee914x78nucsk8qs3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7uxujq7idissll5n7ed8, .table th.tinytable_css_7uxujq7idissll5n7ed8 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 0.4269704 0.03612811 1.312996 0.001 time_point 1 1.1427754 0.09669595 3.514201 0.001 type:time_point 1 0.4928541 0.04170286 1.515598 0.070 Residual 30 9.7556341 0.82547308 NA NA Total 33 11.8182341 1.00000000 NA NA Neutral neutral_post3 &lt;- as.matrix(beta_q1n$S) neutral_post3 &lt;- as.dist(neutral_post3[rownames(neutral_post3) %in% samples_to_keep_post3, colnames(neutral_post3) %in% samples_to_keep_post3]) betadisper(neutral_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.019686 0.0196859 2.8068 999 0.11 Residuals 32 0.224435 0.0070136 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.103 Treatment 0.10361 adonis2(neutral_post3 ~ type*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(neutral_post3))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_cluy76d6jrhvnh2ic7bg, .table th.tinytable_css_cluy76d6jrhvnh2ic7bg { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_982klztkaqemhyx8fdf0, .table th.tinytable_css_982klztkaqemhyx8fdf0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.4361022 0.04050485 1.595030 0.001 time_point 1 1.6965854 0.15757761 6.205206 0.001 type:time_point 1 0.4315814 0.04008496 1.578495 0.125 Residual 30 8.2023961 0.76183257 NA NA Total 33 10.7666650 1.00000000 NA NA Phylogenetic phylo_post3 &lt;- as.matrix(beta_q1p$S) phylo_post3 &lt;- as.dist(phylo_post3[rownames(phylo_post3) %in% samples_to_keep_post3, colnames(phylo_post3) %in% samples_to_keep_post3]) betadisper(phylo_post3, subset_meta_post3$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04697 0.046974 2.8076 999 0.111 Residuals 32 0.53540 0.016731 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.11 Treatment 0.10357 adonis2(phylo_post3 ~ type*time_point, data = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))), permutations = 999, strata = subset_meta_post3 %&gt;% arrange(match(Tube_code,labels(phylo_post3))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zwi2fr6x422vnh72a3x0, .table th.tinytable_css_zwi2fr6x422vnh72a3x0 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_8g8uwcbe1ldkf1x1agkh, .table th.tinytable_css_8g8uwcbe1ldkf1x1agkh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.03710337 0.01720754 0.6366663 0.004 time_point 1 0.32272550 0.14967132 5.5377295 0.003 type:time_point 1 0.04807164 0.02229432 0.8248736 0.447 Residual 30 1.74832756 0.81082682 NA NA Total 33 2.15622808 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post3 ~ subset_meta_post3$time_point* subset_meta_post3$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post3, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post3$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post3$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post3$time_pointFMT1:subset_meta_post3$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_richness_nmds_post3 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post3 ~ subset_meta_post3$time_point* subset_meta_post3$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post3, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post3$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post3$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post3$time_pointFMT1:subset_meta_post3$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_neutral_nmds_post3 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post3 ~ subset_meta_post3$time_point* subset_meta_post3$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post3, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post3$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post3$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post3$time_pointFMT1:subset_meta_post3$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_phylogenetic_nmds_post3 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post3, beta_neutral_nmds_post3, beta_phylogenetic_nmds_post3, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.2.2 Functional differences CC from acclimation to FMT1 significant_element&lt;-element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_element$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 7, 10)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;))%&gt;% filter(type==&quot;Control&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code, -type) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-FMT1)%&gt;% mutate(group_color = ifelse(Difference &lt;0,&quot;FMT1&quot;, &quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#4477AA&quot;,&#39;#008080&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) CI from acclimation to FMT1 significant_element&lt;-element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Treatment&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_element$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 7, 10)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;))%&gt;% filter(type==&quot;Treatment&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code, -type) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-FMT1)%&gt;% mutate(group_color = ifelse(Difference &lt;0,&quot;FMT1&quot;, &quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#76b183&quot;,&#39;#008080&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) 10.2.3 CI vs WC 10.2.3.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=8))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.0429) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 338.8 348.1 -163.4 326.8 29 Scaled residuals: Min 1Q Median 3Q Max -1.85185 -0.65278 0.06667 0.54823 1.97668 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.315e-11 3.627e-06 Number of obs: 35, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.4697 0.1527 29.279 &lt; 2e-16 *** typeTreatment -0.6557 0.2186 -2.999 0.00271 ** time_pointFMT1 -0.4208 0.2174 -1.936 0.05292 . typeTreatment:time_pointFMT1 0.5484 0.3146 1.743 0.08131 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT1 typeTretmnt -0.698 tim_pntFMT1 -0.702 0.490 typTr:_FMT1 0.485 -0.695 -0.691 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta,) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 250.0982 258.7021 -119.0491 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.122922 8.546652 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 44.60136 3.321472 16 13.428192 0e+00 typeTreatment -27.20238 4.697271 16 -5.791103 0e+00 time_pointFMT1 -18.86154 4.028930 15 -4.681526 3e-04 typeTreatment:time_pointFMT1 26.15805 5.809237 15 4.502838 4e-04 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.707 time_pointFMT1 -0.606 0.429 typeTreatment:time_pointFMT1 0.421 -0.595 -0.694 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.903393212 -0.678106330 0.002306491 0.652929042 1.401732098 Number of Observations: 35 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 124.0635 132.6674 -56.03174 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.0002455288 1.282332 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 6.522583 0.4274440 16 15.259503 0.0000 typeTreatment -0.982643 0.6044971 16 -1.625554 0.1236 time_pointFMT1 -2.247960 0.6044971 15 -3.718727 0.0021 typeTreatment:time_pointFMT1 0.898121 0.8681429 15 1.034531 0.3173 Correlation: (Intr) typTrt t_FMT1 typeTreatment -0.707 time_pointFMT1 -0.707 0.500 typeTreatment:time_pointFMT1 0.492 -0.696 -0.696 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.40177643 -0.54641173 -0.06022755 0.42683546 2.21670618 Number of Observations: 35 Number of Groups: 18 10.2.3.2 Beta diversity Number of samples used samples_to_keep_post4 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post4 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) subset_meta_post4$time_point&lt;-as.factor(subset_meta_post4$time_point) subset_meta_post4$type&lt;-as.factor(subset_meta_post4$type) length(samples_to_keep_post4) [1] 35 Richness richness_post4 &lt;- as.matrix(beta_q0n$S) richness_post4 &lt;- as.dist(richness_post4[rownames(richness_post4) %in% samples_to_keep_post4, colnames(richness_post4) %in% samples_to_keep_post4]) betadisper(richness_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.076276 0.076276 19.518 999 0.001 *** Residuals 33 0.128967 0.003908 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.001 Treatment 0.00010134 adonis2(richness_post4 ~ type*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(richness_post4))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_akclo8tt2a4myy4zyiwx, .table th.tinytable_css_akclo8tt2a4myy4zyiwx { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_40f2gnj25o8oxt7jgtmp, .table th.tinytable_css_40f2gnj25o8oxt7jgtmp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.1360754 0.09995918 4.050611 0.001 time_point 1 0.9251516 0.08140076 3.298575 0.001 type:time_point 1 0.6095926 0.05363586 2.173467 0.004 Residual 31 8.6945735 0.76500420 NA NA Total 34 11.3653932 1.00000000 NA NA Neutral neutral_post4 &lt;- as.matrix(beta_q1n$S) neutral_post4 &lt;- as.dist(neutral_post4[rownames(neutral_post4) %in% samples_to_keep_post4, colnames(neutral_post4) %in% samples_to_keep_post4]) betadisper(neutral_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.087335 0.087335 15.924 999 0.001 *** Residuals 33 0.180987 0.005484 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.003 Treatment 0.00034565 adonis2(neutral_post4 ~ type*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(neutral_post4))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_joejavrug3gljfyjquh7, .table th.tinytable_css_joejavrug3gljfyjquh7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7mz9y8a3m8kzerj1t830, .table th.tinytable_css_7mz9y8a3m8kzerj1t830 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 1.3325426 0.12145986 5.413823 0.001 time_point 1 1.2692344 0.11568938 5.156616 0.001 type:time_point 1 0.7390264 0.06736148 3.002499 0.006 Residual 31 7.6302501 0.69548928 NA NA Total 34 10.9710536 1.00000000 NA NA Phylogenetic phylo_post4 &lt;- as.matrix(beta_q1p$S) phylo_post4 &lt;- as.dist(phylo_post4[rownames(phylo_post4) %in% samples_to_keep_post4, colnames(phylo_post4) %in% samples_to_keep_post4]) betadisper(phylo_post4, subset_meta_post4$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07659 0.076588 5.0159 999 0.026 * Residuals 33 0.50388 0.015269 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.027 Treatment 0.031971 adonis2(phylo_post4 ~ type*time_point, data = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))), permutations = 999, strata = subset_meta_post4 %&gt;% arrange(match(Tube_code,labels(phylo_post4))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lhfhlztg95e9t89rdzs9, .table th.tinytable_css_lhfhlztg95e9t89rdzs9 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9cmh0vg93gt5jevanr9v, .table th.tinytable_css_9cmh0vg93gt5jevanr9v { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.20707792 0.09373244 3.875413 0.011 time_point 1 0.28096358 0.12717629 5.258166 0.001 type:time_point 1 0.06475669 0.02931169 1.211906 0.289 Residual 31 1.65644672 0.74977958 NA NA Total 34 2.20924491 1.00000000 NA NA RDA #Richness cca_ord &lt;- capscale(formula = richness_post4 ~ subset_meta_post4$time_point* subset_meta_post4$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post4, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post4$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post4$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post4$time_pointFMT1:subset_meta_post4$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post4 ~ subset_meta_post4$time_point* subset_meta_post4$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post4, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post4$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post4$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post4$time_pointFMT1:subset_meta_post4$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post4 ~ subset_meta_post4$time_point* subset_meta_post4$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post4, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post4$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post4$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post4$time_pointFMT1:subset_meta_post4$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() 10.2.3.3 Functional differences WC from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Hot_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; 10.3 What is the effect of FMT and temperature on the GM after 2 weeks caompared to acclimation? 10.3.1 CI vs CC 10.3.1.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type %in% c(&quot;Control&quot;,&quot;Treatment&quot;) &amp; time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), values=c(&quot;#4477AA50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.0875) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 342.9 352.2 -165.5 330.9 29 Scaled residuals: Min 1Q Median 3Q Max -1.7595 -0.2361 0.2110 0.4983 1.1980 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 6.519e-12 2.553e-06 Number of obs: 35, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9512 0.1816 21.756 &lt;2e-16 *** typeTreatment -0.1372 0.2502 -0.548 0.583 time_pointFMT2 0.1206 0.2491 0.484 0.628 typeTreatment:time_pointFMT2 0.4149 0.3469 1.196 0.232 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT2 typeTretmnt -0.726 tim_pntFMT2 -0.729 0.529 typTr:_FMT2 0.524 -0.721 -0.718 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 253.6069 262.2108 -120.8034 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.268167 9.858563 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.455542 3.670059 16 5.846103 0.0000 typeTreatment -4.056558 5.045308 16 -0.804026 0.4332 time_pointFMT2 2.262002 4.804331 15 0.470826 0.6445 typeTreatment:time_pointFMT2 20.220508 6.684284 15 3.025082 0.0085 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.727 time_pointFMT2 -0.697 0.507 typeTreatment:time_pointFMT2 0.501 -0.684 -0.719 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.7676771 -0.6504757 0.2922823 0.6462932 2.0120364 Number of Observations: 35 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 133.508 142.1119 -60.75399 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.2974732 1.463985 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.233354 0.5281280 16 9.909252 0.0000 typeTreatment 0.306587 0.7258724 16 0.422370 0.6784 time_pointFMT2 -0.458617 0.7121982 15 -0.643946 0.5293 typeTreatment:time_pointFMT2 0.033201 0.9917181 15 0.033479 0.9737 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.728 time_pointFMT2 -0.715 0.521 typeTreatment:time_pointFMT2 0.514 -0.705 -0.718 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.403145672 -0.437916442 -0.005178256 0.313089271 1.956678742 Number of Observations: 35 Number of Groups: 18 10.3.1.2 Beta diversity Number of samples used samples_to_keep_post5 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post5 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Hot_control&quot;) subset_meta_post5$time_point&lt;-as.factor(subset_meta_post5$time_point) subset_meta_post5$type&lt;-as.factor(subset_meta_post5$type) length(samples_to_keep_post5) [1] 35 Richness richness_post5 &lt;- as.matrix(beta_q0n$S) richness_post5 &lt;- as.dist(richness_post5[rownames(richness_post5) %in% samples_to_keep_post5, colnames(richness_post5) %in% samples_to_keep_post5]) betadisper(richness_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004294 0.0042942 0.4761 999 0.507 Residuals 33 0.297625 0.0090189 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.504 Treatment 0.49501 adonis2(richness_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(richness_post5))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ztwduhtckkmc66nr332e, .table th.tinytable_css_ztwduhtckkmc66nr332e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_j7lylnijofgta90d46x7, .table th.tinytable_css_j7lylnijofgta90d46x7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 0.5174241 0.04775345 1.797587 0.001 time_point 1 0.9068994 0.08369841 3.150666 0.001 type:time_point 1 0.4878440 0.04502349 1.694822 0.028 Residual 31 8.9231562 0.82352465 NA NA Total 34 10.8353238 1.00000000 NA NA Neutral neutral_post5 &lt;- as.matrix(beta_q1n$S) neutral_post5 &lt;- as.dist(neutral_post5[rownames(neutral_post5) %in% samples_to_keep_post5, colnames(neutral_post5) %in% samples_to_keep_post5]) betadisper(neutral_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.034255 0.034255 3.9748 999 0.049 * Residuals 33 0.284399 0.008618 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.061 Treatment 0.054506 adonis2(neutral_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(neutral_post5))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_oqcyifzchbzpuxv9t7q5, .table th.tinytable_css_oqcyifzchbzpuxv9t7q5 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_2hsv80g6p18irumb1n8g, .table th.tinytable_css_2hsv80g6p18irumb1n8g { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.6424540 0.06322634 2.589936 0.001 time_point 1 1.1894033 0.11705370 4.794863 0.001 type:time_point 1 0.6395258 0.06293816 2.578132 0.015 Residual 31 7.6897933 0.75678179 NA NA Total 34 10.1611764 1.00000000 NA NA Phylogenetic phylo_post5 &lt;- as.matrix(beta_q1p$S) phylo_post5 &lt;- as.dist(phylo_post5[rownames(phylo_post5) %in% samples_to_keep_post5, colnames(phylo_post5) %in% samples_to_keep_post5]) betadisper(phylo_post5, subset_meta_post5$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02670 0.026703 1.6775 999 0.226 Residuals 33 0.52532 0.015919 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Treatment Control 0.219 Treatment 0.20425 adonis2(phylo_post5 ~ type*time_point, data = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))), permutations = 999, strata = subset_meta_post5 %&gt;% arrange(match(Tube_code,labels(phylo_post5))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ori60ws130m2eukayage, .table th.tinytable_css_ori60ws130m2eukayage { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ff8egdtnjhxxzxq40ny8, .table th.tinytable_css_ff8egdtnjhxxzxq40ny8 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value type 1 0.03644585 0.01867131 0.7636208 0.004 time_point 1 0.35441680 0.18156873 7.4258113 0.002 type:time_point 1 0.08154954 0.04177806 1.7086422 0.175 Residual 31 1.47955831 0.75798190 NA NA Total 34 1.95197051 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post5 ~ subset_meta_post5$time_point* subset_meta_post5$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post5, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post5$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post5$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post5$time_pointFMT2:subset_meta_post5$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_richness_nmds_post5 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post5 ~ subset_meta_post5$time_point* subset_meta_post5$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post5, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post5$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post5$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post5$time_pointFMT2:subset_meta_post5$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_neutral_nmds_post5 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post5 ~ subset_meta_post5$time_point* subset_meta_post5$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post5, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post5$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post5$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post5$time_pointFMT2:subset_meta_post5$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) beta_phylogenetic_nmds_post5 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post5, beta_neutral_nmds_post5, beta_phylogenetic_nmds_post5, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) 10.3.1.3 Functional differences CC from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; CI from acclimation to FMT2 significant_element&lt;-element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Treatment&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_element$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 7, 10)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;))%&gt;% filter(type==&quot;Treatment&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code, -type) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-FMT2)%&gt;% mutate(group_color = ifelse(Difference &lt;0,&quot;FMT2&quot;, &quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#76b183&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) 10.3.2 CI vs WC 10.3.2.1 Alpha alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), values=c(&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=8))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(10.176) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 339.6 349.1 -163.8 327.6 30 Scaled residuals: Min 1Q Median 3Q Max -2.3741 -0.4004 0.1336 0.5764 1.4414 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 4.034e-12 2.008e-06 Number of obs: 36, groups: individual, 18 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.4697 0.1104 40.482 &lt; 2e-16 *** typeTreatment -0.6557 0.1599 -4.101 4.11e-05 *** time_pointFMT2 -0.2292 0.1572 -1.458 0.144824 typeTreatment:time_pointFMT2 0.7647 0.2246 3.405 0.000661 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typTrt t_FMT2 typeTretmnt -0.691 tim_pntFMT2 -0.702 0.485 typTr:_FMT2 0.492 -0.712 -0.700 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Modelq1n &lt;- lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 255.5098 264.3042 -121.7549 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.317597 9.38306 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 44.60136 3.158373 16 14.121626 0.0000 typeTreatment -27.20238 4.466614 16 -6.090157 0.0000 time_pointFMT2 -12.40101 4.423217 16 -2.803618 0.0127 typeTreatment:time_pointFMT2 34.88352 6.255373 16 5.576569 0.0000 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.707 time_pointFMT2 -0.700 0.495 typeTreatment:time_pointFMT2 0.495 -0.700 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.1054551 -0.5575213 0.2345834 0.5912103 2.0213400 Number of Observations: 36 Number of Groups: 18 Phylogenetic Model_phylo &lt;- lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 132.8692 141.6636 -60.43459 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7604222 1.204042 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 6.522583 0.4746882 16 13.740774 0.0000 typeTreatment -0.982643 0.6713105 16 -1.463768 0.1626 time_pointFMT2 -1.066614 0.5675911 16 -1.879195 0.0786 typeTreatment:time_pointFMT2 0.641199 0.8026950 16 0.798807 0.4361 Correlation: (Intr) typTrt t_FMT2 typeTreatment -0.707 time_pointFMT2 -0.598 0.423 typeTreatment:time_pointFMT2 0.423 -0.598 -0.707 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.90560105 -0.54341938 -0.06251794 0.39498845 1.94321495 Number of Observations: 36 Number of Groups: 18 10.3.2.2 Beta diversity Number of samples used samples_to_keep_post6 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post6 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT2&quot;|time_point==&quot;Acclimation&quot;) %&gt;% filter(type!=&quot;Control&quot;) subset_meta_post6$time_point&lt;-as.factor(subset_meta_post6$time_point) subset_meta_post6$type&lt;-as.factor(subset_meta_post6$type) length(samples_to_keep_post6) [1] 36 Richness richness_post6 &lt;- as.matrix(beta_q0n$S) richness_post6 &lt;- as.dist(richness_post6[rownames(richness_post6) %in% samples_to_keep_post6, colnames(richness_post6) %in% samples_to_keep_post6]) betadisper(richness_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.054351 0.054351 9.1422 999 0.006 ** Residuals 34 0.202132 0.005945 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.005 Treatment 0.0047271 adonis2(richness_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(richness_post6))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_cembk1a4959tbwzrz6ii, .table th.tinytable_css_cembk1a4959tbwzrz6ii { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_41t8ci9jniubkau87ly0, .table th.tinytable_css_41t8ci9jniubkau87ly0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.2570893 0.11659822 4.856166 0.001 time_point 1 0.6574224 0.06097760 2.539639 0.001 type:time_point 1 0.5831993 0.05409322 2.252913 0.002 Residual 32 8.2836650 0.76833097 NA NA Total 35 10.7813760 1.00000000 NA NA Neutral neutral_post6 &lt;- as.matrix(beta_q1n$S) neutral_post6 &lt;- as.dist(neutral_post6[rownames(neutral_post6) %in% samples_to_keep_post6, colnames(neutral_post6) %in% samples_to_keep_post6]) betadisper(neutral_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.078328 0.078328 12.006 999 0.003 ** Residuals 34 0.221814 0.006524 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.003 Treatment 0.0014541 adonis2(neutral_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(neutral_post6))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_za7hj2pcj9274rj4zjx2, .table th.tinytable_css_za7hj2pcj9274rj4zjx2 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_cnsgcms9xf7iia4dn6rj, .table th.tinytable_css_cnsgcms9xf7iia4dn6rj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 1.3255629 0.12619423 5.685213 0.001 time_point 1 0.9072453 0.08637020 3.891089 0.002 type:time_point 1 0.8102276 0.07713406 3.474989 0.003 Residual 32 7.4611123 0.71030151 NA NA Total 35 10.5041482 1.00000000 NA NA Phylogenetic phylo_post6 &lt;- as.matrix(beta_q1p$S) phylo_post6 &lt;- as.dist(phylo_post6[rownames(phylo_post6) %in% samples_to_keep_post6, colnames(phylo_post6) %in% samples_to_keep_post6]) betadisper(phylo_post6, subset_meta_post6$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04938 0.049381 3.8729 999 0.036 * Residuals 34 0.43351 0.012750 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Hot_control Treatment Hot_control 0.036 Treatment 0.057271 adonis2(phylo_post6 ~ type*time_point, data = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))), permutations = 999, strata = subset_meta_post6 %&gt;% arrange(match(Tube_code,labels(phylo_post6))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_bugfl8jtuh01dmaukykk, .table th.tinytable_css_bugfl8jtuh01dmaukykk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4sflm068dw0oozvr1k62, .table th.tinytable_css_4sflm068dw0oozvr1k62 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 1 0.1600877 0.08395907 3.885816 0.001 time_point 1 0.2882491 0.15117420 6.996685 0.001 type:time_point 1 0.1400636 0.07345727 3.399769 0.030 Residual 32 1.3183347 0.69140946 NA NA Total 35 1.9067351 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post6 ~ subset_meta_post6$time_point* subset_meta_post6$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post6, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post6$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post6$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post6$time_pointFMT2:subset_meta_post6$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post6 ~ subset_meta_post6$time_point* subset_meta_post6$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post6, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post6$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post6$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post6$time_pointFMT2:subset_meta_post6$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post6 ~ subset_meta_post6$time_point* subset_meta_post6$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post6, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post6$time_pointFMT2&quot; = &quot;FMT2&quot;, &quot;subset_meta_post6$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post6$time_pointFMT2:subset_meta_post6$typeTreatment&quot; = &quot;Interaction in Cold-intervention&quot;) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() 10.3.2.3 Functional differences WC from acclimation to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Hot_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 10)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; "],["physiological-measurements.html", "Chapter 11 Physiological measurements 11.1 Respirometry 11.2 PHA test", " Chapter 11 Physiological measurements 11.1 Respirometry load(&quot;data/data_27022025.Rdata&quot;) respirometry_resp2 &lt;- read_excel(&quot;data/respirometry_resp2.xlsx&quot;) respirometry_resp2$individual &lt;- as.factor(respirometry_resp2$individual) respirometry_resp2$cage &lt;- as.factor(respirometry_resp2$cage) respirometry_resp2$time_point &lt;- as.factor(respirometry_resp2$time_point) respirometry_resp2$type &lt;- as.factor(respirometry_resp2$type) respirometry_resp2$population &lt;- as.factor(respirometry_resp2$population) respirometry_resp2$QC_normalized &lt;- as.numeric(respirometry_resp2$QC_normalized) respirometry_resp2$r2 &lt;- as.numeric(respirometry_resp2$r2) #Filter NA values respirometry_resp2&lt;-respirometry_resp2 %&gt;% filter(QC_normalized!=&quot;NA&quot;) 11.1.1 Acclimation oxygen consumption respirometry_resp2 %&gt;% filter(time_point==&quot;0&quot;)%&gt;% filter(individual!=&quot;AH1_2nd_8&quot;) %&gt;% filter(individual!=&quot;LI1_2nd_4&quot;) %&gt;% filter(individual!=&quot;LI1_2nd_3&quot;) %&gt;% #lizard doesn&#39;t stop moving during the whole measurement, increasing the value and making it and outlier filter(individual!=&quot;LI1_2nd_10&quot;) %&gt;% ggplot(aes(x = population, y = QC_normalized, color=population, fill=population, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ #geom_text(aes(label = individual), hjust = 0, nudge_x = 0.05) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+ stat_compare_means(size=3,vjust = 3, hjust=1 )+ theme(legend.position=&quot;none&quot;, panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme_minimal()+ labs(x = &quot;Population&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;) 11.1.2 Time-point oxygen consumption respirometry_resp2 %&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% #r2 low ggplot(aes(x = time_point, y = QC_normalized, color=time_point, fill=time_point, alpha=0.2, label=cage)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;, &quot;#6E5244&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;,&quot;#6E524450&quot;))+ geom_text()+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;) respirometry_resp2 %&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% ggplot(aes(x = time_point, y = QC_normalized, color=time_point, fill=time_point, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;, &quot;#6E5244&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;,&quot;#6E524450&quot;))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;)+ geom_signif(comparisons = list(c(&quot;0&quot;, &quot;1&quot;), c(&quot;0&quot;, &quot;2&quot;), c(&quot;1&quot;, &quot;2&quot;)), map_signif_level = TRUE) 11.1.3 Data modelling 11.1.3.1 CC vs CI Raw data modelling (LMM) #subset all the wrong measurements respirometry_resp2_subset&lt;-respirometry_resp2%&gt;% filter(type!=&quot;WC&quot;)%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point+type, data = respirometry_resp2_subset, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subset AIC BIC logLik -499.7762 -490.7972 255.8881 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 2.828782e-05 8.566976e-05 Fixed effects: QC_normalized ~ time_point + type Value Std.Error DF t-value p-value (Intercept) 0.0004015990 3.245994e-05 21 12.372144 0.0000 time_point1 -0.0000856584 3.541372e-05 21 -2.418792 0.0247 time_point2 -0.0002059412 3.378535e-05 21 -6.095577 0.0000 typeCI 0.0000094826 3.334928e-05 12 0.284343 0.7810 Correlation: (Intr) tm_pn1 tm_pn2 time_point1 -0.530 time_point2 -0.478 0.472 typeCI -0.638 0.055 -0.063 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.6356763 -0.5924021 -0.1745956 0.3513655 2.8648961 Number of Observations: 37 Number of Groups: 14 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.4855379 0.536115 11.1.3.2 CI vs WC Raw data modelling (LMM) #Filter out WC from the dataframe and create a subset respirometry_resp2_subset&lt;-respirometry_resp2%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point+type, data = respirometry_resp2_subset, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subset AIC BIC logLik -765.5592 -752.0364 389.7796 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 7.00926e-05 8.491172e-05 Fixed effects: QC_normalized ~ time_point + type Value Std.Error DF t-value p-value (Intercept) 0.0003725904 4.195910e-05 33 8.879849 0.0000 time_point1 -0.0000487464 2.909231e-05 33 -1.675576 0.1033 time_point2 -0.0001601635 2.806418e-05 33 -5.707045 0.0000 typeCI 0.0000122457 4.883159e-05 18 0.250774 0.8048 typeWC -0.0000129492 5.103162e-05 18 -0.253748 0.8026 Correlation: (Intr) tm_pn1 tm_pn2 typeCI time_point1 -0.347 time_point2 -0.314 0.517 typeCI -0.736 0.030 -0.038 typeWC -0.683 -0.036 -0.060 0.606 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.5658463 -0.5182418 -0.1041003 0.5945025 2.3909153 Number of Observations: 56 Number of Groups: 21 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.2849197 0.5747142 11.2 PHA test pha_rep2 &lt;- read_tsv(&quot;data/Fito_2023.tsv&quot;) pha_rep2$Individual&lt;-as.factor(pha_rep2$Individual) pha_rep2$Cage&lt;-as.factor(pha_rep2$Cage) pha_rep2$time_point&lt;-as.factor(pha_rep2$time_point) pha_rep2$Type&lt;-as.factor(pha_rep2$Type) 11.2.1 PHA measurements pha_rep2 %&gt;% ggplot(aes(x = Weight, y = Mean_value)) + geom_point() + geom_smooth(method = lm, formula = y ~ x) + ggpmisc::stat_poly_eq()+ facet_nested(~ time_point+Type)+ labs(x = &quot;Weight (g)&quot;, y=&quot;Measurement (mm)&quot;) 11.2.1.1 Average PHA measurements pha_rep2 %&gt;% rowwise() %&gt;% mutate( mean = round(mean(c(Value1, Value2, Value3, Value4, Value5)), 2), sd = round(sd(c(Value1, Value2, Value3, Value4, Value5)), 2) ) %&gt;% unite(&quot;Average&quot;, mean, sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% select(Individual, time_point, Average) %&gt;% tt() .table td.tinytable_css_ufnygwgt19caopfpkqyg, .table th.tinytable_css_ufnygwgt19caopfpkqyg { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3kjrpizw3d7gwg1qoh5r, .table th.tinytable_css_3kjrpizw3d7gwg1qoh5r { border-bottom: solid #d3d8dc 0.1em; } Individual time_point Average AH1_2nd_8 0 1.08 ± 0.01 AH1_2nd_5 0 0.99 ± 0.01 AH1_2nd_9 0 1.04 ± 0.02 AH1_2nd_14 0 1.1 ± 0.03 AH1_2nd_19 0 1.08 ± 0.01 AH1_2nd_7 0 1.02 ± 0.01 AH1_2nd_1 0 1.01 ± 0.01 AH1_2nd_2 0 0.97 ± 0.01 AH1_2nd_12 0 0.96 ± 0.02 AH1_2nd_11 0 1 ± 0.01 AH1_2nd_10 0 0.9 ± 0.01 AH1_2nd_13 0 0.87 ± 0.01 AH1_2nd_15 0 0.92 ± 0.01 AH1_2nd_17 0 0.94 ± 0.01 AH1_2nd_6 0 1.07 ± 0.02 AH1_2nd_16 0 0.82 ± 0.01 AH1_2nd_20 0 0.9 ± 0.01 AH1_2nd_18 0 1.02 ± 0.02 LI1_2nd_10 0 1 ± 0.01 LI1_2nd_9 0 1.06 ± 0.01 LI1_2nd_1 0 1 ± 0.01 LI1_2nd_4 0 1.02 ± 0.01 LI1_2nd_2 0 1.03 ± 0.02 LI1_2nd_7 0 0.91 ± 0.01 LI1_2nd_3 0 1.03 ± 0.01 LI1_2nd_8 0 1 ± 0.01 LI1_2nd_5 0 1.02 ± 0.01 LI1_2nd_6 0 1.03 ± 0.02 AH1_2nd_8 1 1.3 ± 0.02 AH1_2nd_5 1 1.3 ± 0.01 AH1_2nd_9 1 1.33 ± 0.02 AH1_2nd_14 1 1.29 ± 0.01 AH1_2nd_2 1 1.3 ± 0.01 AH1_2nd_1 1 1.18 ± 0.02 AH1_2nd_7 1 1.18 ± 0.01 AH1_2nd_19 1 1.24 ± 0.01 AH1_2nd_12 1 1.17 ± 0.01 AH1_2nd_11 1 1.19 ± 0.02 AH1_2nd_10 1 0.96 ± 0.03 AH1_2nd_13 1 1.17 ± 0.01 AH1_2nd_15 1 1.27 ± 0.01 AH1_2nd_17 1 1.27 ± 0.01 AH1_2nd_6 1 1.59 ± 0.01 AH1_2nd_16 1 0.96 ± 0.02 LI1_2nd_10 1 1.5 ± 0.02 LI1_2nd_9 1 1.4 ± 0.01 AH1_2nd_20 1 1.15 ± 0.02 AH1_2nd_18 1 1.38 ± 0.01 LI1_2nd_7 1 1.37 ± 0.03 LI1_2nd_4 1 1.4 ± 0.01 LI1_2nd_2 1 1.28 ± 0.02 LI1_2nd_1 1 1.21 ± 0.05 LI1_2nd_6 1 1.3 ± 0.01 LI1_2nd_3 1 1.18 ± 0.01 LI1_2nd_8 1 1.3 ± 0.01 LI1_2nd_5 1 1.31 ± 0.02 11.2.2 Time-point measurements pha_rep2 %&gt;% ggplot(aes(x = time_point, y = normalized, color=time_point, fill=time_point, alpha=0.2 )) + geom_boxplot()+ geom_jitter() + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;))+ facet_wrap(~ factor(Type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized measurement (mm/g)&quot;) 11.2.3 Time-point measurements, linking individuals pha_rep2 %&gt;% ggplot(aes(x = interaction(time_point, Individual), y = normalized, color=time_point, fill=time_point, alpha=0.2 )) + geom_boxplot()+ geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ geom_line(aes(group=Individual)) + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;), labels=c(&quot;Pre&quot;,&quot;24h&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;))+ facet_wrap(~ factor(Type),scales = &quot;free&quot;)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized measurement (mm/g)&quot;) 11.2.4 Data modelling 11.2.4.1 Raw data modelling (LMM) #Create linear model formula model6 &lt;- lme(fixed = normalized ~ time_point*Type, data = pha_rep2, random = ~ 1 | Individual) #Print the model summary summary(model6) Linear mixed-effects model fit by REML Data: pha_rep2 AIC BIC logLik -179.2493 -163.9531 97.62463 Random effects: Formula: ~1 | Individual (Intercept) Residual StdDev: 0.03592694 0.01685279 Fixed effects: normalized ~ time_point * Type Value Std.Error DF t-value p-value (Intercept) 0.21051532 0.013227757 25 15.914665 0.0000 time_point1 0.05232865 0.007944483 25 6.586791 0.0000 TypeCI 0.03197587 0.018706873 25 1.709312 0.0998 TypeWC -0.01288531 0.018233204 25 -0.706695 0.4863 time_point1:TypeCI 0.00988802 0.011235195 25 0.880094 0.3872 time_point1:TypeWC 0.00919483 0.010950714 25 0.839655 0.4091 Correlation: (Intr) tm_pn1 TypeCI TypeWC t_1:TC time_point1 -0.300 TypeCI -0.707 0.212 TypeWC -0.725 0.218 0.513 time_point1:TypeCI 0.212 -0.707 -0.300 -0.154 time_point1:TypeWC 0.218 -0.725 -0.154 -0.300 0.513 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.11959410 -0.53372045 -0.09031554 0.45767238 1.76747080 Number of Observations: 56 Number of Groups: 28 MuMIn::r.squaredGLMM(model6) R2m R2c [1,] 0.4474354 0.9003421 11.2.4.2 Raw data modelling (LM) without random effect #Create linear model formula formula7 &lt;- formula(normalized ~ time_point*Type) #Fit the linear model model7 &lt;- lm(formula7, data = pha_rep2) #Print the model summary summary(model7) Call: lm(formula = formula7, data = pha_rep2) Residuals: Min 1Q Median 3Q Max -0.077837 -0.023166 -0.004332 0.024254 0.109477 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 0.210515 0.013228 15.915 &lt;2e-16 *** time_point1 0.052329 0.018707 2.797 0.0073 ** TypeCI 0.031976 0.018707 1.709 0.0936 . TypeWC -0.012885 0.018233 -0.707 0.4830 time_point1:TypeCI 0.009888 0.026456 0.374 0.7102 time_point1:TypeWC 0.009195 0.025786 0.357 0.7229 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.03968 on 50 degrees of freedom Multiple R-squared: 0.4711, Adjusted R-squared: 0.4182 F-statistic: 8.907 on 5 and 50 DF, p-value: 4.235e-06 11.2.5 Data modeling without WC 11.2.5.1 Raw data modelling (LMM) #Filter out WC measurements pha_rep2_cold&lt;-pha_rep2 %&gt;% filter(Type!=&quot;WC&quot;) #Create linear model formula model8 &lt;- lme(fixed = normalized ~ time_point*Type, data = pha_rep2_cold, random = ~ 1 | Individual) #Print the model summary summary(model8) Linear mixed-effects model fit by REML Data: pha_rep2_cold AIC BIC logLik -105.8477 -97.05328 58.92385 Random effects: Formula: ~1 | Individual (Intercept) Residual StdDev: 0.04285079 0.01772373 Fixed effects: normalized ~ time_point * Type Value Std.Error DF t-value p-value (Intercept) 0.21051532 0.015457185 16 13.619254 0.0000 time_point1 0.05232865 0.008355044 16 6.263120 0.0000 TypeCI 0.03197587 0.021859760 16 1.462773 0.1629 time_point1:TypeCI 0.00988802 0.011815817 16 0.836846 0.4150 Correlation: (Intr) tm_pn1 TypeCI time_point1 -0.270 TypeCI -0.707 0.191 time_point1:TypeCI 0.191 -0.707 -0.270 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.05423257 -0.64335101 -0.09689866 0.45912524 1.57921682 Number of Observations: 36 Number of Groups: 18 MuMIn::r.squaredGLMM(model8) R2m R2c [1,] 0.3582245 0.906246 11.2.5.2 Raw data modelling (LM) without random effect #Create linear model formula formula9 &lt;- formula(normalized ~ time_point*Type) #Fit the linear model model9 &lt;- lm(formula9, data = pha_rep2_cold) #Print the model summary summary(model9) Call: lm(formula = formula9, data = pha_rep2_cold) Residuals: Min 1Q Median 3Q Max -0.07784 -0.02913 -0.01037 0.03610 0.10948 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 0.210515 0.015457 13.619 7.28e-15 *** time_point1 0.052329 0.021860 2.394 0.0227 * TypeCI 0.031976 0.021860 1.463 0.1533 time_point1:TypeCI 0.009888 0.030914 0.320 0.7512 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.04637 on 32 degrees of freedom Multiple R-squared: 0.3791, Adjusted R-squared: 0.3209 F-statistic: 6.512 on 3 and 32 DF, p-value: 0.001452 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
