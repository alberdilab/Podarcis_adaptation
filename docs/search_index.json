[["index.html", "AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2024 Study title to be added Garazi Martin-Bideguren1, Ostaizka Aizpurua2, Carlos Cabido3 and Antton Alberdi4 Last update: 2024-05-24 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering 5 samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, &quot;AD69&quot;, &quot;AD91&quot;) # Columns to exclude read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code != &quot;AD16&quot;) %&gt;% filter(Tube_code != &quot;AD23&quot;) %&gt;% filter(Tube_code != &quot;AD25&quot;) %&gt;% filter(Tube_code != &quot;AD69&quot;) %&gt;% filter(Tube_code != &quot;AD91&quot;) #Coverage_table columns_to_exclude &lt;- c(&quot;AD16&quot;, &quot;AD23&quot;, &quot;AD25&quot;, &quot;AD69&quot;, &quot;AD91&quot;) # Columns to exclude genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19)) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(mapped_lizard) ) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats&lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 4855690940 data_stats$raw_reads %&gt;% mean() [1] 28067578 data_stats$raw_reads %&gt;% sd() [1] 13132040 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.438 0.207 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% #left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% #pivot_longer(cols = c(low_quality, mapped_lizard, mapped_mags, unmapped_reads), #names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% #mutate(sample=factor(sample,levels=c(&quot;Sg1&quot;,&quot;Sg2&quot;,&quot;Sg3&quot;,&quot;Sg4&quot;,&quot;Sg5&quot;,&quot;Sg6&quot;,&quot;Sg7&quot;,&quot;Sg8&quot;,&quot;Sg9&quot;,&quot;Sg10&quot;))) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_SceUnd&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ #facet_wrap(~species, scales = &quot;free&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=4)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% #separate(col = &quot;sample&quot;, into = c(&quot;sample&quot;, &quot;tissue&quot;), sep = &quot;\\\\.&quot;, remove = FALSE) %&gt;% #mutate(sample=factor(sample,levels=rev(c(&quot;Sg1&quot;,&quot;Sg2&quot;,&quot;Sg3&quot;,&quot;Sg4&quot;,&quot;Sg5&quot;,&quot;Sg6&quot;,&quot;Sg7&quot;,&quot;Sg8&quot;,&quot;Sg9&quot;,&quot;Sg10&quot;)))) %&gt;% ggplot(aes(x = value, y = sample, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ #facet_wrap(tissue~., scales = &quot;free&quot;, labeller = labeller(tissue = c(cloaca=&quot;Cloaca&quot;,feces=&quot;Feces&quot;))) + theme_minimal() + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_x_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 6), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% select(sample,damr, time_point, species, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() tinytable_mynyystg1ev1cgdst04f .table td.tinytable_css_4rjstnuua061ygvibr2p, .table th.tinytable_css_4rjstnuua061ygvibr2p { border-bottom: solid 0.1em #d3d8dc; } sample damr time_point species type AC79 1.0000000 1_Acclimation Podarcis_muralis Control AC80 1.0000000 1_Acclimation Podarcis_muralis Treatment AC81 0.9813013 1_Acclimation Podarcis_muralis Treatment AC82 0.7490771 1_Acclimation Podarcis_muralis Treatment AC83 1.0000000 1_Acclimation Podarcis_muralis Control AC84 1.0000000 1_Acclimation Podarcis_muralis Control AC85 0.8363777 1_Acclimation Podarcis_muralis Control AC86 0.8800275 1_Acclimation Podarcis_muralis Control AC87 0.9672854 1_Acclimation Podarcis_muralis Treatment AC88 0.3142108 1_Acclimation Podarcis_muralis Control AC89 0.9338962 1_Acclimation Podarcis_muralis Treatment AC90 1.0000000 1_Acclimation Podarcis_muralis Control AC91 1.0000000 1_Acclimation Podarcis_muralis Control AC92 1.0000000 1_Acclimation Podarcis_muralis Control AC93 1.0000000 1_Acclimation Podarcis_muralis Treatment AC94 0.9159348 1_Acclimation Podarcis_muralis Treatment AC95 0.9239904 1_Acclimation Podarcis_muralis Treatment AC96 0.9425962 1_Acclimation Podarcis_muralis Treatment AC97 0.9394886 1_Acclimation Podarcis_liolepis Hot_control AC98 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AC99 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD01 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD02 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD03 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD04 0.8896057 1_Acclimation Podarcis_liolepis Hot_control AD05 1.0000000 1_Acclimation Podarcis_liolepis Hot_control AD06 0.9853930 1_Acclimation Podarcis_liolepis Hot_control AD07 0.9515379 1_Acclimation Podarcis_liolepis Hot_control AD08 0.7045003 2_Antibiotics Podarcis_muralis Control AD09 1.0000000 2_Antibiotics Podarcis_muralis Control AD10 0.9598720 2_Antibiotics Podarcis_muralis Control AD11 0.6230176 2_Antibiotics Podarcis_muralis Control AD12 0.7487463 2_Antibiotics Podarcis_muralis Control AD13 1.0000000 2_Antibiotics Podarcis_muralis Control AD14 0.4536529 2_Antibiotics Podarcis_muralis Control AD15 1.0000000 2_Antibiotics Podarcis_muralis Control AD16 NA NA NA NA AD17 0.8774871 2_Antibiotics Podarcis_muralis Treatment AD18 0.4991585 2_Antibiotics Podarcis_muralis Treatment AD19 0.4060523 2_Antibiotics Podarcis_muralis Treatment AD20 0.5227482 2_Antibiotics Podarcis_muralis Treatment AD21 0.6551882 2_Antibiotics Podarcis_muralis Treatment AD22 0.9106725 2_Antibiotics Podarcis_muralis Treatment AD23 0.2426698 NA NA NA AD24 0.5972915 2_Antibiotics Podarcis_muralis Treatment AD25 0.4083656 NA NA NA AD26 0.9204825 2_Antibiotics Podarcis_liolepis Hot_control AD27 0.5215059 2_Antibiotics Podarcis_liolepis Hot_control AD28 0.8180607 2_Antibiotics Podarcis_liolepis Hot_control AD29 0.7175978 2_Antibiotics Podarcis_liolepis Hot_control AD30 0.9937574 2_Antibiotics Podarcis_liolepis Hot_control AD31 0.6692127 2_Antibiotics Podarcis_liolepis Hot_control AD32 0.6710817 2_Antibiotics Podarcis_liolepis Hot_control AD33 0.6778368 2_Antibiotics Podarcis_liolepis Hot_control AD34 0.4642326 2_Antibiotics Podarcis_liolepis Hot_control AD36 0.8288365 3_Transplant1 Podarcis_muralis Control AD37 0.9530848 3_Transplant1 Podarcis_muralis Control AD38 0.9247925 3_Transplant1 Podarcis_muralis Control AD39 1.0000000 3_Transplant1 Podarcis_muralis Control AD40 0.9991552 3_Transplant1 Podarcis_muralis Control AD41 0.9550964 3_Transplant1 Podarcis_muralis Control AD42 1.0000000 3_Transplant1 Podarcis_muralis Control AD43 1.0000000 3_Transplant1 Podarcis_muralis Control AD44 0.9108807 3_Transplant1 Podarcis_muralis Control AD46 0.8708468 3_Transplant1 Podarcis_muralis Treatment AD47 0.8328653 3_Transplant1 Podarcis_muralis Treatment AD49 0.8940294 3_Transplant1 Podarcis_muralis Treatment AD50 0.8757711 3_Transplant1 Podarcis_muralis Treatment AD51 0.8479193 3_Transplant1 Podarcis_muralis Treatment AD52 0.8596870 3_Transplant1 Podarcis_muralis Treatment AD53 0.8528974 3_Transplant1 Podarcis_muralis Treatment AD54 1.0000000 3_Transplant1 Podarcis_liolepis Hot_control AD55 1.0000000 4_Transplant2 Podarcis_muralis Control AD56 0.9327538 4_Transplant2 Podarcis_muralis Control AD57 1.0000000 4_Transplant2 Podarcis_muralis Control AD58 1.0000000 4_Transplant2 Podarcis_muralis Control AD59 1.0000000 4_Transplant2 Podarcis_muralis Control AD60 0.7988844 4_Transplant2 Podarcis_muralis Control AD61 1.0000000 4_Transplant2 Podarcis_muralis Control AD62 1.0000000 4_Transplant2 Podarcis_muralis Control AD63 0.8992048 4_Transplant2 Podarcis_muralis Control AD65 1.0000000 4_Transplant2 Podarcis_muralis Treatment AD66 0.8821027 4_Transplant2 Podarcis_muralis Treatment AD68 0.8820274 4_Transplant2 Podarcis_muralis Treatment AD69 NA NA NA NA AD70 0.9590793 4_Transplant2 Podarcis_muralis Treatment AD71 0.8360540 4_Transplant2 Podarcis_muralis Treatment AD72 0.8835253 4_Transplant2 Podarcis_muralis Treatment AD73 1.0000000 4_Transplant2 Podarcis_liolepis Hot_control AD74 0.9017271 5_Post-FMT1 Podarcis_muralis Control AD75 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD76 0.9862581 5_Post-FMT1 Podarcis_muralis Treatment AD77 0.8963376 5_Post-FMT1 Podarcis_muralis Treatment AD78 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD79 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD80 0.8808155 5_Post-FMT1 Podarcis_muralis Treatment AD81 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD82 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD83 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD84 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD85 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD86 0.9889084 5_Post-FMT1 Podarcis_muralis Control AD87 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD88 1.0000000 5_Post-FMT1 Podarcis_muralis Treatment AD89 0.9562489 5_Post-FMT1 Podarcis_muralis Control AD90 1.0000000 5_Post-FMT1 Podarcis_muralis Control AD91 0.2426698 NA NA NA AD93 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AD94 0.7947750 5_Post-FMT1 Podarcis_liolepis Hot_control AD95 0.9506977 5_Post-FMT1 Podarcis_liolepis Hot_control AD96 0.9171413 5_Post-FMT1 Podarcis_liolepis Hot_control AD97 0.9257685 5_Post-FMT1 Podarcis_liolepis Hot_control AD98 0.9048349 5_Post-FMT1 Podarcis_liolepis Hot_control AD99 0.9966152 5_Post-FMT1 Podarcis_liolepis Hot_control AE01 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE02 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE03 1.0000000 5_Post-FMT1 Podarcis_liolepis Hot_control AE04 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE05 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE06 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE07 0.7797794 6_Post-FMT2 Podarcis_muralis Control AE08 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE09 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE91 0.9259146 6_Post-FMT2 Podarcis_muralis Treatment AE92 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE93 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE94 0.9152960 6_Post-FMT2 Podarcis_muralis Treatment AE95 1.0000000 6_Post-FMT2 Podarcis_muralis Treatment AE96 0.7786112 6_Post-FMT2 Podarcis_muralis Treatment AE97 0.9365037 6_Post-FMT2 Podarcis_muralis Control AE98 1.0000000 6_Post-FMT2 Podarcis_muralis Control AE99 0.8513354 6_Post-FMT2 Podarcis_muralis Treatment AF01 0.9046369 6_Post-FMT2 Podarcis_muralis Treatment AF02 1.0000000 6_Post-FMT2 Podarcis_muralis Control AF03 0.9030087 6_Post-FMT2 Podarcis_muralis Treatment AF04 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF05 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF06 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF07 0.9526443 6_Post-FMT2 Podarcis_liolepis Hot_control AF08 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF09 1.0000000 6_Post-FMT2 Podarcis_liolepis Hot_control AF10 0.9716162 6_Post-FMT2 Podarcis_liolepis Hot_control AF11 0.9654152 6_Post-FMT2 Podarcis_liolepis Hot_control AF12 0.9391626 6_Post-FMT2 Podarcis_liolepis Hot_control AF13 0.8818742 6_Post-FMT2 Podarcis_liolepis Hot_control AFU87 0.8810513 0_Wild Podarcis_muralis Control AFU88 0.8317800 0_Wild Podarcis_muralis Treatment AFU91 0.8923699 0_Wild Podarcis_muralis Treatment AFU92 0.8094776 0_Wild Podarcis_muralis Treatment AFU93 0.8517368 0_Wild Podarcis_muralis Control AFU94 0.8325385 0_Wild Podarcis_muralis Treatment AFU95 0.8419270 0_Wild Podarcis_muralis Treatment AFU96 0.8326820 0_Wild Podarcis_muralis Control AFU97 0.8107271 0_Wild Podarcis_muralis Treatment AFU98 0.7506522 0_Wild Podarcis_muralis Control AFU99 0.8582371 0_Wild Podarcis_muralis Treatment AFV01 0.9331539 0_Wild Podarcis_muralis Treatment AFV02 0.8316460 0_Wild Podarcis_muralis Treatment AFV03 0.8752591 0_Wild Podarcis_muralis Control AFV04 0.9180285 0_Wild Podarcis_muralis Control AFV05 1.0000000 0_Wild Podarcis_muralis Control AFV06 1.0000000 0_Wild Podarcis_muralis Control AFV07 0.8460805 0_Wild Podarcis_muralis Control AFV08 0.7497043 0_Wild Podarcis_liolepis Hot_control AFV09 0.5412999 0_Wild Podarcis_liolepis Hot_control AFV10 0.8002499 0_Wild Podarcis_liolepis Hot_control AFV11 0.8225298 0_Wild Podarcis_liolepis Hot_control AFV12 0.7925988 0_Wild Podarcis_liolepis Hot_control AFV13 0.6509898 0_Wild Podarcis_liolepis Hot_control AFV14 0.8106269 0_Wild Podarcis_liolepis Hot_control AFV15 0.9691106 0_Wild Podarcis_liolepis Hot_control AFV16 0.8218990 0_Wild Podarcis_liolepis Hot_control AFV17 0.8091152 0_Wild Podarcis_liolepis Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot 5.3 Alpha diversity 5.4 Beta diversity 5.5 Permanovas", " Chapter 5 Community composition load(&quot;data/data.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample merged_data&lt;-genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts # Create an interaction variable for time_point and sample merged_data$interaction_var &lt;- interaction(merged_data$sample, merged_data$time_point) ggplot(merged_data, aes(x=interaction_var,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ type, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), axis.title.x = element_blank(), panel.background = element_blank(), panel.border = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(linewidth = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Samples&quot;)+ scale_x_discrete(labels = function(x) gsub(&quot;.*\\\\.&quot;, &quot;&quot;, x)) + facet_wrap(~type, scales = &quot;free&quot;, labeller = as_labeller(function(label) gsub(&quot;.*\\\\.&quot;, &quot;&quot;, label))) #only show time_point label 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_96tlbr7yta7x19qx594q .table td.tinytable_css_rk7iczhyvqvz3dxfuqsf, .table th.tinytable_css_rk7iczhyvqvz3dxfuqsf { border-bottom: solid 0.1em #d3d8dc; } phylum mean sd p__Bacteroidota 0.383073524 0.200556253 p__Bacillota_A 0.255324749 0.163209517 p__Bacillota 0.118782585 0.146832611 p__Pseudomonadota 0.094122159 0.156932597 p__Campylobacterota 0.053366123 0.093185234 p__Verrucomicrobiota 0.027449290 0.066220962 p__Desulfobacterota 0.023720834 0.036545754 p__Chlamydiota 0.010635637 0.059863092 p__Fusobacteriota 0.010544526 0.028384721 p__Cyanobacteriota 0.009261265 0.016525997 p__Bacillota_C 0.004741218 0.006655526 p__Spirochaetota 0.004033548 0.012340900 p__Bacillota_B 0.002480140 0.004938693 p__Actinomycetota 0.001243097 0.006365104 p__Elusimicrobiota 0.001221306 0.006520508 phylum_arrange &lt;- phylum_summary %&gt;% group_by(phylum) %&gt;% summarise(mean=mean(relabun)) %&gt;% arrange(-mean) %&gt;% select(phylum) %&gt;% pull() phylum_summary %&gt;% filter(phylum %in% phylum_arrange) %&gt;% mutate(phylum=factor(phylum,levels=rev(phylum_arrange))) %&gt;% ggplot(aes(x=relabun, y=phylum, group=phylum, color=phylum)) + scale_color_manual(values=phylum_colors[rev(phylum_arrange)]) + geom_jitter(alpha=0.5) + theme_minimal() + theme(legend.position=&quot;none&quot;) + labs(y=&quot;Phylum&quot;,x=&quot;Relative abundance&quot;) 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_summary %&gt;% group_by(family) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_5sgigi9whnyw943pevpo .table td.tinytable_css_u8pg3qyzz8x44nu0at8v, .table th.tinytable_css_u8pg3qyzz8x44nu0at8v { border-bottom: solid 0.1em #d3d8dc; } family mean sd f__Bacteroidaceae 2.228331e-01 0.1385585120 f__Lachnospiraceae 1.414562e-01 0.1083170968 f__Tannerellaceae 1.034197e-01 0.0797797418 f__Helicobacteraceae 5.290294e-02 0.0927590950 f__Mycoplasmoidaceae 3.716482e-02 0.0758142978 f__Erysipelotrichaceae 3.523239e-02 0.0451748821 f__UBA3700 3.438944e-02 0.0558522623 f__Marinifilaceae 2.790560e-02 0.0271961340 f__DTU072 2.716390e-02 0.0530196982 f__Rikenellaceae 2.712953e-02 0.0465396092 f__Enterobacteriaceae 2.707699e-02 0.0920895535 f__Coprobacillaceae 2.566962e-02 0.0894627842 f__ 2.527324e-02 0.0777603339 f__Desulfovibrionaceae 2.372083e-02 0.0365457537 f__Ruminococcaceae 1.871009e-02 0.0430525690 f__UBA3830 1.588214e-02 0.0455209161 f__Rhizobiaceae 1.532665e-02 0.0768399323 f__LL51 1.510265e-02 0.0608228261 f__Akkermansiaceae 1.234664e-02 0.0317643089 f__Chlamydiaceae 1.063564e-02 0.0598630919 f__Fusobacteriaceae 1.054453e-02 0.0283847213 f__CAG-239 9.195743e-03 0.0151277476 f__Enterococcaceae 8.470645e-03 0.0467930117 f__Gastranaerophilaceae 7.774775e-03 0.0144711894 f__Oscillospiraceae 6.682761e-03 0.0078169630 f__UBA1997 6.416374e-03 0.0310554945 f__Streptococcaceae 6.404337e-03 0.0343162283 f__UBA1242 4.701177e-03 0.0154146977 f__Brevinemataceae 4.033548e-03 0.0123409004 f__Acutalibacteraceae 3.394636e-03 0.0109856431 f__UBA660 3.215538e-03 0.0139953943 f__Clostridiaceae 2.859123e-03 0.0171837280 f__RUG11792 2.834502e-03 0.0251869021 f__Peptococcaceae 2.480140e-03 0.0049386928 f__MGBC116941 2.173027e-03 0.0094092981 f__Acidaminococcaceae 1.955375e-03 0.0050449819 f__CAG-508 1.818740e-03 0.0064351937 f__Anaerovoracaceae 1.578874e-03 0.0036560185 f__Moraxellaceae 1.494257e-03 0.0097731073 f__RUG14156 1.486490e-03 0.0045970591 f__Staphylococcaceae 1.369815e-03 0.0051004179 f__Elusimicrobiaceae 1.221306e-03 0.0065205081 f__CAG-288 9.547359e-04 0.0060374248 f__Anaerotignaceae 9.043255e-04 0.0040584492 f__CALVMC01 7.561589e-04 0.0043736226 f__Eggerthellaceae 6.446025e-04 0.0021324245 f__Massilibacillaceae 6.272186e-04 0.0016392219 f__Mycobacteriaceae 5.984944e-04 0.0060578862 f__UBA1820 4.764220e-04 0.0013091229 f__Arcobacteraceae 4.631865e-04 0.0050473402 f__CAG-274 4.546649e-04 0.0022091547 f__Burkholderiaceae_C 3.721451e-04 0.0048235514 f__Muribaculaceae 3.639429e-04 0.0009801614 f__UBA932 3.439904e-04 0.0011614775 f__Hepatoplasmataceae 3.006899e-04 0.0038973865 f__Rhodobacteraceae 2.976706e-04 0.0038582514 f__Weeksellaceae 2.788124e-04 0.0031569776 f__Eubacteriaceae 1.656625e-04 0.0006747973 f__Sphingobacteriaceae 1.514738e-04 0.0012496721 f__Devosiaceae 1.498864e-04 0.0015139002 f__Pumilibacteraceae 1.285021e-04 0.0007668974 f__WRAU01 9.660522e-05 0.0012521468 f__Peptostreptococcaceae 2.300953e-05 0.0002982376 family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=mean(relabun, na.rm=TRUE),sd=sd(relabun, na.rm=TRUE)) %&gt;% arrange(-mean) %&gt;% tt() tinytable_z0fl9hamrbeet34h5bar .table td.tinytable_css_ixoufqlg0vjd2xcc9wyt, .table th.tinytable_css_ixoufqlg0vjd2xcc9wyt { border-bottom: solid 0.1em #d3d8dc; } genus mean sd g__Bacteroides 1.360888e-01 0.0920042645 g__Parabacteroides 9.738932e-02 0.0800669017 g__Phocaeicola 6.976407e-02 0.0795272001 g__Mycoplasmoides 3.069452e-02 0.0755136832 g__Helicobacter_J 3.026915e-02 0.0596129112 g__Odoribacter 2.567500e-02 0.0267638614 g__Roseburia 2.398913e-02 0.0560807126 g__NHYM01 2.263379e-02 0.0799142802 g__Alistipes 2.221496e-02 0.0283922644 g__Coprobacillus 2.025846e-02 0.0881340464 g__Agrobacterium 1.532665e-02 0.0768399323 g__Akkermansia 1.234664e-02 0.0317643089 g__Fusobacterium_A 1.045087e-02 0.0283902792 g__Kineothrix 8.853496e-03 0.0410203841 g__Proteus 8.709520e-03 0.0683836665 g__Dielma 8.629168e-03 0.0090864942 g__CAG-95 8.157620e-03 0.0205536177 g__JAAYNV01 8.042189e-03 0.0195890923 g__UBA866 7.303541e-03 0.0294323192 g__Desulfovibrio 7.059930e-03 0.0212042084 g__Enterococcus 7.042975e-03 0.0457933183 g__Ureaplasma 6.470299e-03 0.0138334733 g__Lactococcus 6.404337e-03 0.0343162283 g__Lacrimispora 6.100861e-03 0.0098371428 g__Parabacteroides_B 6.030362e-03 0.0100365790 g__CALXRO01 5.800048e-03 0.0309414387 g__Citrobacter 5.751065e-03 0.0335518785 g__NSJ-61 5.593207e-03 0.0199387071 g__Breznakia 5.537293e-03 0.0237686728 g__Clostridium_AQ 5.357893e-03 0.0121988801 g__Salmonella 5.164140e-03 0.0185065215 g__Bilophila 5.013506e-03 0.0088636099 g__Hungatella_A 4.840444e-03 0.0095762431 g__MGBC136627 4.390777e-03 0.0163455561 g__Escherichia 4.213296e-03 0.0266876301 g__UMGS1251 4.184603e-03 0.0072862642 g__Hungatella 4.140890e-03 0.0191331978 g__Clostridium_Q 4.035877e-03 0.0052190471 g__Brevinema 4.033548e-03 0.0123409004 g__Thomasclavelia 3.925809e-03 0.0109326053 g__Scatousia 3.671667e-03 0.0102995947 g__Enterocloster 3.641933e-03 0.0047397590 g__Mailhella 3.633580e-03 0.0102738868 g__Copromonas 3.620793e-03 0.0050252903 g__Ventrimonas 3.534268e-03 0.0071394041 g__Caccovivens 3.363217e-03 0.0122532776 g__Lawsonia 3.308592e-03 0.0117503555 g__Fournierella 3.236376e-03 0.0062446298 g__Limenecus 3.182108e-03 0.0065882600 g__MGBC133411 3.060527e-03 0.0074762303 g__Mucinivorans 2.917358e-03 0.0374302862 g__Sarcina 2.859123e-03 0.0171837280 g__Acetatifactor 2.754437e-03 0.0058585690 g__Eisenbergiella 2.713468e-03 0.0068503944 g__Bacteroides_G 2.698691e-03 0.0347178966 g__CAJLXD01 2.649496e-03 0.0087733544 g__Blautia 2.573938e-03 0.0061559204 g__C-19 2.289060e-03 0.0048805592 g__Butyricimonas 2.230601e-03 0.0050201300 g__Velocimicrobium 2.214326e-03 0.0066941819 g__CAZU01 2.209459e-03 0.0066119796 g__MGBC116941 2.173027e-03 0.0094092981 g__Intestinimonas 2.094290e-03 0.0039467287 g__Negativibacillus 2.081393e-03 0.0055279017 g__Rikenella 1.997207e-03 0.0037146132 g__Phascolarctobacterium 1.955375e-03 0.0050449819 g__RGIG6463 1.800497e-03 0.0039777189 g__JALFVM01 1.752732e-03 0.0038715710 g__Oscillibacter 1.519449e-03 0.0025039951 g__Pseudoflavonifractor 1.511922e-03 0.0027764599 g__Acinetobacter 1.494257e-03 0.0097731073 g__Citrobacter_A 1.401214e-03 0.0060519635 g__Staphylococcus 1.369815e-03 0.0051004179 g__RGIG4733 1.311551e-03 0.0040589196 g__UBA1436 1.221306e-03 0.0065205081 g__Lachnotalea 1.215388e-03 0.0049307664 g__Ruthenibacterium 1.209176e-03 0.0053784424 g__14-2 1.191694e-03 0.0096582871 g__Beduini 1.180938e-03 0.0025200906 g__Scatocola 1.127866e-03 0.0045101626 g__Faecisoma 1.092047e-03 0.0055756491 g__Enterococcus_A 1.090444e-03 0.0099443378 g__Faecimonas 9.939338e-04 0.0083324084 g__RGIG9287 9.696200e-04 0.0093504118 g__CAG-345 9.547359e-04 0.0060374248 g__Blautia_A 9.262837e-04 0.0029160490 g__RGIG1896 8.393274e-04 0.0062956893 g__CAG-269 8.029962e-04 0.0047313823 g__Marseille-P3106 7.985520e-04 0.0017660762 g__WRHT01 6.467835e-04 0.0027055875 g__Eggerthella 6.446025e-04 0.0021324245 g__IOR16 6.437031e-04 0.0020707005 g__Anaerotruncus 6.302739e-04 0.0016992229 g__RUG14156 6.188398e-04 0.0022208214 g__CHH4-2 6.181620e-04 0.0020051727 g__Corynebacterium 5.984944e-04 0.0060578862 g__Serratia_A 5.895501e-04 0.0076414423 g__CAG-56 4.944690e-04 0.0016386388 g__Merdimorpha 4.764220e-04 0.0013091229 g__MGBC140009 4.707187e-04 0.0024136538 g__CALURL01 4.662877e-04 0.0016783668 g__Aliarcobacter 4.631865e-04 0.0050473402 g__Scatenecus 4.547121e-04 0.0019816847 g__RGIG8482 4.425249e-04 0.0029840978 g__Enterobacter 4.097683e-04 0.0041440045 g__Klebsiella 4.078573e-04 0.0049056069 g__Caccenecus 3.964657e-04 0.0017852972 g__Alcaligenes 3.721451e-04 0.0048235514 g__Plesiomonas 3.654875e-04 0.0027184625 g__HGM05232 3.639429e-04 0.0009801614 g__JAHHSE01 3.613502e-04 0.0014942841 g__Egerieousia 3.439904e-04 0.0011614775 g__Emergencia 3.433949e-04 0.0017500504 g__Enterococcus_B 3.372270e-04 0.0022331962 g__Stoquefichus 3.044085e-04 0.0020563925 g__Hepatoplasma 3.006899e-04 0.0038973865 g__Paracoccus 2.976706e-04 0.0038582514 g__Moheibacter 2.788124e-04 0.0031569776 g__Scatomorpha 2.656736e-04 0.0010212728 g__UBA7185 2.448818e-04 0.0014600491 g__Eubacterium 1.656625e-04 0.0006747973 g__Sphingobacterium 1.514738e-04 0.0012496721 g__Devosia 1.498864e-04 0.0015139002 g__Anaerosporobacter 1.462768e-04 0.0012784872 g__Caccomorpha 1.391355e-04 0.0010571570 g__UBA2658 1.315233e-04 0.0007225792 g__Protoclostridium 1.285021e-04 0.0007668974 g__Angelakisella 1.276029e-04 0.0009248545 g__Cetobacterium_A 9.365634e-05 0.0008744341 g__Rahnella 6.509221e-05 0.0008436915 g__Peptostreptococcus 2.300953e-05 0.0002982376 genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.3 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Aggregate basal GIFT into elements dist &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% traits2dist(., method = &quot;gower&quot;) functional &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, dist = dist) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(functional = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) %&gt;% mutate(functional = if_else(is.nan(functional), 1, functional)) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) %&gt;% full_join(functional, by = join_by(sample == sample)) 5.3.1 Wild samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = species, group=species, color=species, fill=species)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + scale_fill_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b50&quot;, &quot;#6b739850&quot;)) + facet_wrap(. ~ metric ) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.3.2 Acclimation samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;1_Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = species, group=species, color=species, fill=species)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + scale_fill_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b50&quot;, &quot;#6b739850&quot;)) + facet_wrap(. ~ metric) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.3.3 Antibiotics samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;2_Antibiotics&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = species, group=species, color=species, fill=species)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + scale_fill_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b50&quot;, &quot;#6b739850&quot;)) + facet_wrap(. ~ metric) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.3.4 Transplant_1 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;3_Transplant1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b18350&quot;,&quot;#d57d2c50&quot;, &quot;#4477AA50&quot;)) + facet_wrap(. ~ metric) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.3.5 Transplant_2 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;4_Transplant2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b18350&quot;,&quot;#d57d2c50&quot;, &quot;#4477AA50&quot;)) + facet_wrap(. ~ metric) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.3.6 Post-Transplant_1 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;5_Post-FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b18350&quot;,&quot;#d57d2c50&quot;, &quot;#4477AA50&quot;)) + facet_wrap(. ~ metric) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.3.7 Post-Transplant_2 samples alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b18350&quot;,&quot;#d57d2c50&quot;, &quot;#4477AA50&quot;)) + facet_wrap(. ~ metric) + coord_cartesian(xlim = c(1, NA)) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.x = element_text(angle = 45, hjust = 1), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) 5.4 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) beta_q1f &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, dist = dist) 5.5 Permanovas 5.5.0.1 Load required data meta &lt;- column_to_rownames(sample_metadata, &quot;Tube_code&quot;) 5.5.1 1. Are the wild populations similar? 5.5.1.1 Wild: P.muralis vs P.liolepis wild &lt;- meta %&gt;% filter(time_point == &quot;0_Wild&quot;) # Create a temporary modified version of genome_counts_filt temp_genome_counts &lt;- transform(genome_counts_filt, row.names = genome_counts_filt$genome) temp_genome_counts$genome &lt;- NULL wild.counts &lt;- temp_genome_counts[, which(colnames(temp_genome_counts) %in% rownames(wild))] identical(sort(colnames(wild.counts)), sort(as.character(rownames(wild)))) wild_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;0_Wild&quot;) 5.5.1.2 Number of samples used [1] 28 beta_div_richness_wild&lt;-hillpair(data=wild.counts, q=0) beta_div_neutral_wild&lt;-hillpair(data=wild.counts, q=1) beta_div_phylo_wild&lt;-hillpair(data=wild.counts, q=1, tree=genome_tree) beta_div_func_wild&lt;-hillpair(data=wild.counts, q=1, dist=dist) 5.5.1.3 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002848 0.0028483 0.2723 999 0.624 Residuals 26 0.272017 0.0104622 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.619 Podarcis_muralis 0.60624 Df SumOfSqs R2 F Pr(&gt;F) species 1 1.631953 0.207198 6.795072 0.001 Residual 26 6.244347 0.792802 NA NA Total 27 7.876300 1.000000 NA NA 5.5.1.4 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002893 0.0028935 0.2628 999 0.598 Residuals 26 0.286298 0.0110115 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.593 Podarcis_muralis 0.61255 Df SumOfSqs R2 F Pr(&gt;F) species 1 2.018797 0.2566342 8.976049 0.001 Residual 26 5.847641 0.7433658 NA NA Total 27 7.866438 1.0000000 NA NA 5.5.1.5 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.07936 0.079362 4.7909 999 0.037 * Residuals 26 0.43070 0.016565 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.033 Podarcis_muralis 0.037786 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.3786052 0.2108638 6.947419 0.001 Residual 26 1.4168908 0.7891362 NA NA Total 27 1.7954960 1.0000000 NA NA 5.5.1.6 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.016513 0.016513 1.4504 999 0.254 Residuals 26 0.296006 0.011385 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Podarcis_liolepis Podarcis_muralis Podarcis_liolepis 0.277 Podarcis_muralis 0.23931 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.0787916 0.1594096 4.930642 0.072 Residual 26 0.4154800 0.8405904 NA NA Total 27 0.4942716 1.0000000 NA NA beta_q0n_nmds_wild &lt;- beta_div_richness_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) beta_q1n_nmds_wild &lt;- beta_div_neutral_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) beta_q1p_nmds_wild &lt;- beta_div_phylo_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) beta_q1f_nmds_wild &lt;- beta_div_func_wild$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(wild_nmds, by = join_by(sample == Tube_code)) 5.5.2 2. Do the antibiotics work? 5.5.2.1 Acclimation vs antibiotics treat &lt;- meta %&gt;% #antibiotics samples giving error when plotting filter(time_point == &quot;1_Acclimation&quot; | time_point == &quot;2_Antibiotics&quot;) temp_genome_counts &lt;- transform(genome_counts_filt, row.names = genome_counts_filt$genome) temp_genome_counts$genome &lt;- NULL treat.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(treat))] identical(sort(colnames(treat.counts)),sort(as.character(rownames(treat)))) treat_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;1_Acclimation&quot; | time_point == &quot;2_Antibiotics&quot;) 5.5.2.2 Number of samples used [1] 52 beta_div_richness_treat&lt;-hillpair(data=treat.counts, q=0) beta_div_neutral_treat&lt;-hillpair(data=treat.counts, q=1) beta_div_phylo_treat&lt;-hillpair(data=treat.counts, q=1, tree=genome_tree) beta_div_func_treat&lt;-hillpair(data=treat.counts, q=1, dist=dist) 5.5.2.2.1 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.027648 0.0276478 6.8746 999 0.01 ** Residuals 50 0.201088 0.0040218 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.015 2_Antibiotics 0.011555 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 1.952865 0.0941315 6.574358 0.001 species 1 2.299135 0.1108223 7.740081 0.001 individual 26 9.662166 0.4657330 1.251072 0.003 Residual 23 6.831983 0.3293133 NA NA Total 51 20.746150 1.0000000 NA NA 5.5.2.2.2 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.043782 0.043782 8.3826 999 0.004 ** Residuals 50 0.261147 0.005223 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.005 2_Antibiotics 0.0056034 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 2.078576 0.1048012 9.380227 0.001 species 1 3.046369 0.1535971 13.747699 0.001 individual 26 9.611970 0.4846327 1.668348 0.001 Residual 23 5.096598 0.2569690 NA NA Total 51 19.833512 1.0000000 NA NA 5.5.2.2.3 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.60296 0.60296 37.862 999 0.001 *** Residuals 50 0.79626 0.01593 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.001 2_Antibiotics 1.2645e-07 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 1.8994052 0.2145480 20.282274 0.001 species 1 0.8219541 0.0928441 8.777010 0.001 individual 26 3.9777800 0.4493115 1.633678 0.003 Residual 23 2.1539163 0.2432964 NA NA Total 51 8.8530557 1.0000000 NA NA 5.5.2.2.4 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.18583 0.185833 5.3501 999 0.03 * Residuals 50 1.73673 0.034735 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) 1_Acclimation 2_Antibiotics 1_Acclimation 0.032 2_Antibiotics 0.024874 Df SumOfSqs R2 F Pr(&gt;F) time_point 1 1.935980 0.3884761 38.1894171 0.001 species 1 0.003156 0.0006333 0.0622557 0.809 individual 26 1.878423 0.3769266 1.4251551 0.172 Residual 23 1.165966 0.2339640 NA NA Total 51 4.983525 1.0000000 NA NA beta_richness_nmds_treat &lt;- beta_div_richness_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_neutral_nmds_treat &lt;- beta_div_neutral_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = c(&quot;sample&quot; = &quot;Tube_code&quot;)) beta_phylo_nmds_treat &lt;- beta_div_phylo_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = join_by(sample == Tube_code)) beta_func_nmds_treat &lt;- beta_div_func_treat$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(treat_nmds, by = join_by(sample == Tube_code)) 5.5.3 3. Do the FMT work? 5.5.3.1 Comparison between FMT2 vs Post-FMT2 transplant3 &lt;- meta %&gt;% filter(time_point == &quot;4_Transplant2&quot; | time_point == &quot;6_Post-FMT2&quot;) transplant3.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(transplant3))] identical(sort(colnames(transplant3.counts)),sort(as.character(rownames(transplant3)))) transplant3_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;4_Transplant2&quot; | time_point == &quot;6_Post-FMT2&quot;) 5.5.3.2 Number of samples used [1] 53 beta_div_richness_transplant3&lt;-hillpair(data=transplant3.counts, q=0) beta_div_neutral_transplant3&lt;-hillpair(data=transplant3.counts, q=1) beta_div_phylo_transplant3&lt;-hillpair(data=transplant3.counts, q=1, tree=genome_tree) beta_div_func_transplant3&lt;-hillpair(data=transplant3.counts, q=1, dist=dist) 5.5.3.2.1 Richness Df SumOfSqs R2 F Pr(&gt;F) species 1 0.9809525 0.0778442 5.775712 0.001 time_point 1 0.7092107 0.0562799 4.175734 0.001 type 1 1.4479860 0.1149060 8.525540 0.001 individual 25 6.9157236 0.5488022 1.628753 0.001 Residual 15 2.5476146 0.2021678 NA NA Total 43 12.6014875 1.0000000 NA NA 5.5.3.2.2 Neutral Df SumOfSqs R2 F Pr(&gt;F) species 1 1.1101711 0.0895457 7.879642 0.001 time_point 1 0.7363935 0.0593971 5.226687 0.001 type 1 1.9027421 0.1534740 13.505059 0.001 individual 25 6.5351386 0.5271203 1.855374 0.001 Residual 15 2.1133659 0.1704628 NA NA Total 43 12.3978112 1.0000000 NA NA 5.5.3.2.3 Phylogenetic Df SumOfSqs R2 F Pr(&gt;F) species 1 0.1341431 0.1005265 6.921553 0.001 time_point 1 0.1159136 0.0868654 5.980943 0.001 type 1 0.1423573 0.1066822 7.345390 0.001 individual 25 0.6512838 0.4880704 1.344205 0.067 Residual 15 0.2907075 0.2178554 NA NA Total 43 1.3344053 1.0000000 NA NA 5.5.3.2.4 Functional Df SumOfSqs R2 F Pr(&gt;F) species 1 -0.0031096 -0.0030953 -0.1177247 0.824 time_point 1 -0.0045864 -0.0045653 -0.1736359 0.833 type 1 0.0775554 0.0771987 2.9361453 0.141 individual 25 0.5385511 0.5360739 0.8155530 0.621 Residual 15 0.3962105 0.3943880 NA NA Total 43 1.0046211 1.0000000 NA NA beta_richness_nmds_transplant3 &lt;- beta_div_richness_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == Tube_code)) beta_neutral_nmds_transplant3 &lt;- beta_div_neutral_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == Tube_code)) beta_phylo_nmds_transplant3 &lt;- beta_div_phylo_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == Tube_code)) beta_func_nmds_transplant3 &lt;- beta_div_func_transplant3$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(transplant3_nmds, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylo_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_func_nmds_transplant3 %&gt;% group_by(individual) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) 5.5.4 4. Are there differences between the control and the treatment group? 5.5.4.1 After 1 week –&gt; Post-FMT1 post1 &lt;- meta %&gt;% filter(time_point == &quot;5_Post-FMT1&quot;) post1.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(post1))] identical(sort(colnames(post1.counts)),sort(as.character(rownames(post1)))) post1_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;5_Post-FMT1&quot;) 5.5.4.2 Number of samples used [1] 27 beta_div_richness_post1&lt;-hillpair(data=post1.counts, q=0) beta_div_neutral_post1&lt;-hillpair(data=post1.counts, q=1) beta_div_phylo_post1&lt;-hillpair(data=post1.counts, q=1, tree=genome_tree) beta_div_func_post1&lt;-hillpair(data=post1.counts, q=1, dist=dist) 5.5.4.2.1 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.015090 0.0075452 2.1059 999 0.136 Residuals 24 0.085988 0.0035828 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.004000 0.638 Hot_control 0.009502 0.220 Treatment 0.624826 0.248542 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.6488906 0.0757032 2.115638 0.002 type 1 0.5615418 0.0655126 1.830847 0.008 Residual 24 7.3610760 0.8587842 NA NA Total 26 8.5715084 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.3294975 0.9684059 0.06064512 0.499 1.000 2 Control vs Hot_control 1 0.7123847 2.3071902 0.11949901 0.003 0.009 * 3 Treatment vs Hot_control 1 0.4044284 1.3387544 0.07721168 0.054 0.162 5.5.4.2.2 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.006755 0.0033773 0.4095 999 0.69 Residuals 24 0.197956 0.0082482 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.30200 0.957 Hot_control 0.30023 0.565 Treatment 0.95485 0.53193 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.7984743 0.104299 3.065171 0.001 type 1 0.6051778 0.079050 2.323148 0.006 Residual 24 6.2519772 0.816651 NA NA Total 26 7.6556293 1.000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.2860314 0.9858296 0.06166897 0.427 1.000 2 Control vs Hot_control 1 0.8705308 3.2919398 0.16222894 0.003 0.009 * 3 Treatment vs Hot_control 1 0.4377241 1.6307998 0.09249721 0.037 0.111 5.5.4.2.3 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00404 0.0020184 0.1345 999 0.909 Residuals 24 0.36024 0.0150100 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.84200 0.693 Hot_control 0.81332 0.812 Treatment 0.63160 0.76897 Df SumOfSqs R2 F Pr(&gt;F) species 1 0.0700374 0.0635900 1.6594454 0.15 type 1 0.0184254 0.0167292 0.4365646 0.80 Residual 24 1.0129278 0.9196808 NA NA Total 26 1.1013906 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.01869516 0.4206549 0.02727867 0.781 1.000 2 Control vs Hot_control 1 0.07762661 2.2806818 0.11828844 0.036 0.108 3 Treatment vs Hot_control 1 0.03350315 0.6872008 0.04118131 0.668 1.000 5.5.4.2.4 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01287 0.0064374 0.4319 999 0.66 Residuals 24 0.35771 0.0149044 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.38600 0.758 Hot_control 0.38202 0.598 Treatment 0.75152 0.59510 Df SumOfSqs R2 F Pr(&gt;F) species 1 -0.0048931 -0.0058792 -0.1628739 0.826 type 1 0.1161466 0.1395538 3.8660898 0.100 Residual 24 0.7210172 0.8663254 NA NA Total 26 0.8322707 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.14708071 6.531088 0.30333294 0.043 0.129 2 Control vs Hot_control 1 0.03067531 1.027084 0.05697451 0.341 1.000 3 Treatment vs Hot_control 1 0.04199233 1.256701 0.07282392 0.301 0.903 beta_richness_nmds_post1 &lt;- beta_div_richness_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) beta_neutral_nmds_post1 &lt;- beta_div_neutral_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post1 &lt;- beta_div_phylo_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) beta_functional_nmds_post1 &lt;- beta_div_func_post1$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post1_nmds, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p1&lt;-beta_neutral_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post1 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 5.5.4.3 After 2 weeks –&gt;Post-FMT2 post2 &lt;- meta %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;) post2.counts &lt;- temp_genome_counts[,which(colnames(temp_genome_counts) %in% rownames(post2))] identical(sort(colnames(post2.counts)),sort(as.character(rownames(post2)))) post2_nmds &lt;- sample_metadata %&gt;% filter(time_point == &quot;6_Post-FMT2&quot;) 5.5.4.4 Number of samples used [1] 28 beta_div_richness_post2&lt;-hillpair(data=post2.counts, q=0) beta_div_neutral_post2&lt;-hillpair(data=post2.counts, q=1) beta_div_phylo_post2&lt;-hillpair(data=post2.counts, q=1, tree=genome_tree) beta_div_func_post2&lt;-hillpair(data=post2.counts, q=1, dist=dist) 5.5.4.4.1 Richness Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.001996 0.0009978 0.2043 999 0.825 Residuals 25 0.122093 0.0048837 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.70400 0.805 Hot_control 0.67713 0.609 Treatment 0.79246 0.58926 Df SumOfSqs R2 F Pr(&gt;F) type 2 1.542992 0.1948479 3.025016 0.001 Residual 25 6.375966 0.8051521 NA NA Total 27 7.918958 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.2206497 0.7906964 0.04709134 0.862 1.000 2 Control vs Hot_control 1 0.7211095 2.7164967 0.13777786 0.001 0.003 * 3 Treatment vs Hot_control 1 0.7163430 2.6326288 0.13409456 0.001 0.003 * 5.5.4.4.2 Neutral Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.007233 0.0036166 0.6989 999 0.497 Residuals 25 0.129365 0.0051746 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.51500 0.645 Hot_control 0.49241 0.283 Treatment 0.65999 0.28046 Df SumOfSqs R2 F Pr(&gt;F) type 2 1.962645 0.2556667 4.293552 0.001 Residual 25 5.713932 0.7443333 NA NA Total 27 7.676577 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.1081320 0.3901033 0.02380115 0.998 1.000 2 Control vs Hot_control 1 0.7336222 2.8624966 0.14411565 0.001 0.003 * 3 Treatment vs Hot_control 1 0.7084005 2.6970385 0.13692609 0.001 0.003 * 5.5.4.4.3 Phylogenetic Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.000406 0.0002032 0.0494 999 0.963 Residuals 25 0.102865 0.0041146 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.94000 0.831 Hot_control 0.93747 0.787 Treatment 0.84169 0.75551 Df SumOfSqs R2 F Pr(&gt;F) type 2 0.1793566 0.2173098 3.470559 0.001 Residual 25 0.6459931 0.7826902 NA NA Total 27 0.8253496 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.005034708 0.178068 0.01100675 0.979 1.000 2 Control vs Hot_control 1 0.099703372 3.519604 0.17152397 0.003 0.009 * 3 Treatment vs Hot_control 1 0.079909458 2.912000 0.14624347 0.004 0.012 . 5.5.4.4.4 Functional Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00836 0.0041823 0.2225 999 0.844 Residuals 25 0.46991 0.0187964 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.58600 0.679 Hot_control 0.53209 0.855 Treatment 0.60231 0.82567 Df SumOfSqs R2 F Pr(&gt;F) type 2 0.0031465 0.0045388 0.0569937 0.88 Residual 25 0.6900904 0.9954612 NA NA Total 27 0.6932368 1.0000000 NA NA pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Control vs Treatment 1 0.010979753 0.6382789 0.038362075 0.424 1 2 Control vs Hot_control 1 0.003756213 0.1351199 0.007885556 0.702 1 3 Treatment vs Hot_control 1 0.019226092 0.5508465 0.031385752 0.497 1 beta_richness_nmds_post2 &lt;- beta_div_richness_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) beta_neutral_nmds_post2 &lt;- beta_div_neutral_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) beta_phylogenetic_nmds_post2 &lt;- beta_div_phylo_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) beta_functional_nmds_post2 &lt;- beta_div_func_post2$S %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(post2_nmds, by = join_by(sample == Tube_code)) p0&lt;-beta_richness_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;top&quot;) p1&lt;-beta_neutral_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p2&lt;-beta_phylogenetic_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) p3&lt;-beta_functional_nmds_post2 %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type, shape=time_point)) + scale_color_manual(values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Functional beta diversity&quot;) + theme_classic()+ theme(legend.position=&quot;none&quot;) ggarrange(p0, p1, p2, p3, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) "],["functional-differences.html", "Chapter 6 Functional differences 6.1 Data preparation 6.2 Genomes GIFT profiles 6.3 Function level 6.4 Element level 6.5 Comparison of samples from the 0 Time_point (0_Wild) 6.6 Comparison of samples from the 6th Time_point (6_Post-FMT2) 6.7 Domain level", " Chapter 6 Functional differences load(&quot;data/data.Rdata&quot;) 6.1 Data preparation # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) 6.2 Genomes GIFT profiles GIFTs_elements %&gt;% as_tibble(., rownames = &quot;MAG&quot;) %&gt;% reshape2::melt() %&gt;% rename(Code_element = variable, GIFT = value) %&gt;% inner_join(GIFT_db,by=&quot;Code_element&quot;) %&gt;% ggplot(., aes(x=Code_element, y=MAG, fill=GIFT, group=Code_function))+ geom_tile()+ scale_y_discrete(guide = guide_axis(check.overlap = TRUE))+ scale_x_discrete(guide = guide_axis(check.overlap = TRUE))+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(. ~ Code_function, scales = &quot;free&quot;, space = &quot;free&quot;)+ theme_grey(base_size=8)+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),strip.text.x = element_text(angle = 90)) 6.3 Function level GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sample&quot;) %&gt;% pivot_longer(!sample,names_to=&quot;trait&quot;,values_to=&quot;gift&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% ggplot(aes(x=trait,y=time_point,fill=gift)) + geom_tile(colour=&quot;white&quot;, size=0.2)+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(type ~ ., scales=&quot;free&quot;,space=&quot;free&quot;) 6.4 Element level GIFTs_elements_community_merged&lt;-GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(var=&quot;sample&quot;) %&gt;% pivot_longer(!sample,names_to=&quot;trait&quot;,values_to=&quot;gift&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code))%&gt;% mutate(functionid = substr(trait, 1, 3)) %&gt;% mutate(trait = case_when( trait %in% GIFT_db$Code_element ~ GIFT_db$Element[match(trait, GIFT_db$Code_element)], TRUE ~ trait )) %&gt;% mutate(functionid = case_when( functionid %in% GIFT_db$Code_function ~ GIFT_db$Function[match(functionid, GIFT_db$Code_function)], TRUE ~ functionid )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db$Element))) %&gt;% mutate(functionid=factor(functionid,levels=unique(GIFT_db$Function))) # Create an interaction variable for time_point and sample GIFTs_elements_community_merged$interaction_var &lt;- interaction(GIFTs_elements_community_merged$sample, GIFTs_elements_community_merged$time_point) ggplot(GIFTs_elements_community_merged,aes(x=interaction_var,y=trait,fill=gift)) + geom_tile(colour=&quot;white&quot;, linewidth=0.2)+ scale_fill_gradientn(colours=rev(c(&quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#ddf1da&quot;)))+ facet_grid(functionid ~ type, scales=&quot;free&quot;,space=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Time_point&quot;,fill=&quot;GIFT&quot;)+ scale_x_discrete(labels = function(x) gsub(&quot;.*\\\\.&quot;, &quot;&quot;, x)) 6.5 Comparison of samples from the 0 Time_point (0_Wild) 6.5.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.328 0.0232 2 Podarcis_muralis 0.346 0.0194 6.5.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% select(c(1:21, 23)) %&gt;% pivot_longer(-c(sample,species),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db$Code_function ~ GIFT_db$Function[match(trait, GIFT_db$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db$Function))) %&gt;% ggplot(aes(x=value, y=species, group=species, fill=species, color=species)) + geom_boxplot() + scale_color_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b&quot;,&quot;#6b7398&quot;)) + scale_fill_manual(name=&quot;species&quot;, breaks=c(&quot;Podarcis_liolepis&quot;,&quot;Podarcis_muralis&quot;), labels=c(&quot;Podarcis liolepis&quot;,&quot;Podarcis muralis&quot;), values=c(&quot;#e5bd5b50&quot;,&quot;#6b739850&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 6.5.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.372 0.0316 2 Podarcis_muralis 0.390 0.0208 6.5.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;0_Wild&quot;) %&gt;% group_by(species) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 species MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Podarcis_liolepis 0.312 0.0311 2 Podarcis_muralis 0.345 0.0233 sample_metadata_wild &lt;- sample_metadata%&gt;% filter(time_point == &quot;0_Wild&quot;) element_gift_wild &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_wild[c(1,3)], by=&quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_wild, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_wild[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_wild[, !numeric_cols | colnames(element_gift_wild) %in% nonzero_numeric_cols] significant_elements_wild &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,species), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ species, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_wild %&gt;% dplyr::select(-c(species)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_wild$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_wild[c(1,3)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(species) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-species)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_wild[c(1,3)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:36] #always check names(element_gift_names) first to know were your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=species, y=.data[[i]], color = species)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 6.6 Comparison of samples from the 6th Time_point (6_Post-FMT2) 6.6.1 GIFTs Functional community GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.352 0.0223 2 Hot_control 0.351 0.0276 3 Treatment 0.346 0.0255 6.6.1.1 GIFT test visualisation GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(&quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% select(c(1:21, 27)) %&gt;% pivot_longer(-c(sample,type),names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% mutate(trait = case_when( trait %in% GIFT_db$Code_function ~ GIFT_db$Function[match(trait, GIFT_db$Code_function)], TRUE ~ trait )) %&gt;% mutate(trait=factor(trait,levels=unique(GIFT_db$Function))) %&gt;% ggplot(aes(x=value, y=type, group=type, fill=type, color=type)) + geom_boxplot() + scale_color_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b183&quot;,&quot;#d57d2c&quot;, &quot;#4477AA&quot;)) + scale_fill_manual(name=&quot;type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Control&quot;,&quot;Hot control&quot;, &quot;Treatment&quot;), values=c(&quot;#76b18350&quot;,&quot;#d57d2c50&quot;, &quot;#4477AA50&quot;)) + facet_grid(trait ~ ., space=&quot;free&quot;, scales=&quot;free&quot;) + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), strip.text.y = element_text(angle = 0)) + labs(y=&quot;Traits&quot;,x=&quot;Metabolic capacity index&quot;) 6.6.2 GIFTs Domain community GIFTs_domains_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.399 0.0171 2 Hot_control 0.386 0.0308 3 Treatment 0.392 0.0240 6.6.3 GIFTs Elements community GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;6_Post-FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.357 0.0215 2 Hot_control 0.346 0.0288 3 Treatment 0.350 0.0293 sample_metadata_TM6 &lt;- sample_metadata%&gt;% filter(time_point == &quot;6_Post-FMT2&quot;)%&gt;% filter(type != &quot;Hot_control&quot;) element_gift_TM6 &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(sample_metadata_TM6 %&gt;% select(1, 7), by = &quot;Tube_code&quot;) # Find numeric columns numeric_cols &lt;- sapply(element_gift_TM6, is.numeric) # Calculate column sums for numeric columns only col_sums_numeric &lt;- colSums(element_gift_TM6[, numeric_cols]) # Identify numeric columns with sums not equal to zero nonzero_numeric_cols &lt;- names(col_sums_numeric)[col_sums_numeric != 0] # Remove numeric columns with sums not equal to zero filtered_data &lt;- element_gift_TM6[, !numeric_cols | colnames(element_gift_TM6) %in% nonzero_numeric_cols] significant_elements_TM6 &lt;- filtered_data %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type, exact=FALSE)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_value &lt; 0.05) %&gt;% #take into account that p_value is used and not p_adjust left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift_TM6 %&gt;% dplyr::select(-c(type)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements_TM6$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM6[c(1,7)], by = join_by(Tube_code == Tube_code)) element_gift_filt %&gt;% dplyr::select(-Tube_code)%&gt;% group_by(type) %&gt;% summarise(across(everything(), mean))%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element)) element_gift_names &lt;- element_gift_filt%&gt;% dplyr::select(-type)%&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(Elements == Code_element))%&gt;% dplyr::select(-Elements)%&gt;% dplyr::select(Function, everything())%&gt;% t()%&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Tube_code&quot;)%&gt;% left_join(., sample_metadata_TM6[c(1,7)], by = join_by(Tube_code == Tube_code)) colNames &lt;- names(element_gift_names)[2:20] #always check names(element_gift_names) first to now were your traits finish for(i in colNames){ plt &lt;- ggplot(element_gift_names, aes(x=type, y=.data[[i]], color = type)) + geom_boxplot(alpha = 0.2, outlier.shape = NA, width = 0.3, show.legend = FALSE) + geom_jitter(width = 0.1, show.legend = TRUE) + theme_minimal() + theme( axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.border = element_blank()) print(plt) } 6.7 Domain level 6.7.1 Comparison of samples from the 0 Time_point (0_Wild) #Merge the functional domains with the metadata merge_gift_wild&lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_wild, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Biosynthesis,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Degradation p2 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Degradation,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.45, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Structure p3 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Structure,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) #Overall p4 &lt;-merge_gift_wild %&gt;% ggplot(aes(x=species,y=Overall,color=species,fill=species))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Species&quot;) 6.7.2 Comparison of samples from the 6th Time_point (6_Post-FMT2) #Merge the functional domains with the metadata merge_gift_TM6 &lt;- GIFTs_domains_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% inner_join(., sample_metadata_TM6, by=&quot;Tube_code&quot;) #Biosynthesis p1 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Biosynthesis,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;Type&quot;) #Degradation p2 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Degradation,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Structure p3 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Structure,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 3, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) #Overall p4 &lt;-merge_gift_TM6 %&gt;% ggplot(aes(x=type,y=Overall,color=type,fill=type))+ geom_jitter(width = 0.2, size = 1.5, show.legend = FALSE)+ geom_boxplot(alpha=0.2,outlier.shape = NA, width = 0.5, show.legend = FALSE, coef=0)+ stat_compare_means() + theme(axis.text.x = element_text(vjust = 0.5, size=10), axis.text.y = element_text(size=10), axis.title=element_text(size=12,face=&quot;bold&quot;), axis.text = element_text(face=&quot;bold&quot;, size=18), panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size=10), legend.title = element_text(size=12), legend.position=&quot;none&quot;, legend.key.size = unit(1, &#39;cm&#39;), strip.text.x = element_text(size = 12, color = &quot;black&quot;, face = &quot;bold&quot;))+ labs( x = &quot;type&quot;) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
