[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1,Carlos Cabido2, Kevin Kohl3, Antton Alberdi4 and Ostaizka Aizpurua5 Last update: 2025-02-28 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) #library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(lme4) library(emmeans) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Pittsburgh, kkohl78@gmail.com↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% filter(!time_point %in% c(&quot;Antibiotics&quot;,&quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) %&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw)%&gt;% select(c(&quot;genome&quot;,sample_metadata$Tube_code)) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Two samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD91&quot;, &quot;AC85&quot;) # Columns to exclude (&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, ) read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Coverage_table genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code %in% colnames(read_counts)) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db2,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats &lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, genome_gifts, phylum_colors, data_stats, file = &quot;data/data_27022025.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data_27022025.Rdata&quot;) 3.1 Sequencing reads statistics data_stats$raw_reads %&gt;% sum() [1] 3335496930 data_stats$raw_reads %&gt;% mean() [1] 31466952 data_stats$raw_reads %&gt;% sd() [1] 14473977 3.2 DNA fractions #Overall data_stats %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) # A tibble: 1 × 2 mean sd &lt;dbl&gt; &lt;dbl&gt; 1 0.471 0.140 data_stats %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~time_point, scales = &quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;))) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~time_point, scales = &quot;free&quot;, space=&quot;free&quot;, labeller = labeller(time_point=c(&quot;0_Wild&quot;=&quot;Wild&quot;, &quot;1_Acclimation&quot;=&quot;Acclimation&quot;, &quot;2_Antibiotics&quot;=&quot;Antibiotics&quot;, &quot;3_Transplant1&quot;=&quot;Transplant1&quot;, &quot;4_Transplant2&quot;=&quot;Transplant2&quot;, &quot;5_Post-FMT1&quot;=&quot;Post1&quot;, &quot;6_Post-FMT2&quot;=&quot;Post2&quot;)))+ labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% left_join(sample_metadata[c(1,7, 10)], by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, type) %&gt;% #group_by(type) %&gt;% #summarise(mean=mean(damr),sd=sd(damr)) %&gt;% tt() .table td.tinytable_css_ervwkwqgyta4uml582oj, .table th.tinytable_css_ervwkwqgyta4uml582oj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_b44grkzwn8iszhquihuq, .table th.tinytable_css_b44grkzwn8iszhquihuq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point type AC79 1.0000000 Acclimation Control AC80 1.0000000 Acclimation Treatment AC81 0.9813013 Acclimation Treatment AC82 0.7490771 Acclimation Treatment AC83 1.0000000 Acclimation Control AC84 1.0000000 Acclimation Control AC86 0.8800275 Acclimation Control AC87 0.9672854 Acclimation Treatment AC88 0.3142108 Acclimation Control AC89 0.9338962 Acclimation Treatment AC90 1.0000000 Acclimation Control AC91 1.0000000 Acclimation Control AC92 1.0000000 Acclimation Control AC93 1.0000000 Acclimation Treatment AC94 0.9159348 Acclimation Treatment AC95 0.9239904 Acclimation Treatment AC96 0.9425962 Acclimation Treatment AC97 0.9394886 Acclimation Hot_control AC98 1.0000000 Acclimation Hot_control AC99 1.0000000 Acclimation Hot_control AD01 1.0000000 Acclimation Hot_control AD02 1.0000000 Acclimation Hot_control AD03 1.0000000 Acclimation Hot_control AD04 0.8896057 Acclimation Hot_control AD05 1.0000000 Acclimation Hot_control AD07 0.9515379 Acclimation Hot_control AD74 0.9017271 FMT1 Control AD75 1.0000000 FMT1 Treatment AD76 0.9862581 FMT1 Treatment AD77 0.8963376 FMT1 Treatment AD78 1.0000000 FMT1 Treatment AD79 1.0000000 FMT1 Control AD80 0.8808155 FMT1 Treatment AD81 1.0000000 FMT1 Control AD82 1.0000000 FMT1 Control AD83 1.0000000 FMT1 Treatment AD84 1.0000000 FMT1 Treatment AD85 1.0000000 FMT1 Control AD86 0.9889084 FMT1 Control AD87 1.0000000 FMT1 Control AD88 1.0000000 FMT1 Treatment AD89 0.9562489 FMT1 Control AD90 1.0000000 FMT1 Control AD93 1.0000000 FMT1 Hot_control AD94 0.7947750 FMT1 Hot_control AD95 0.9506977 FMT1 Hot_control AD96 0.9171413 FMT1 Hot_control AD97 0.9257685 FMT1 Hot_control AD98 0.9048349 FMT1 Hot_control AD99 0.9966152 FMT1 Hot_control AE01 1.0000000 FMT1 Hot_control AE02 1.0000000 FMT1 Hot_control AE04 1.0000000 FMT2 Treatment AE05 1.0000000 FMT2 Treatment AE06 1.0000000 FMT2 Control AE07 0.7797794 FMT2 Control AE08 1.0000000 FMT2 Control AE09 1.0000000 FMT2 Control AE91 0.9259146 FMT2 Treatment AE92 1.0000000 FMT2 Control AE93 1.0000000 FMT2 Control AE94 0.9152960 FMT2 Treatment AE95 1.0000000 FMT2 Treatment AE96 0.7786112 FMT2 Treatment AE97 0.9365037 FMT2 Control AE98 1.0000000 FMT2 Control AE99 0.8513354 FMT2 Treatment AF01 0.9046369 FMT2 Treatment AF02 1.0000000 FMT2 Control AF03 0.9030087 FMT2 Treatment AF04 1.0000000 FMT2 Hot_control AF05 1.0000000 FMT2 Hot_control AF06 1.0000000 FMT2 Hot_control AF07 0.9526443 FMT2 Hot_control AF08 1.0000000 FMT2 Hot_control AF09 1.0000000 FMT2 Hot_control AF10 0.9716162 FMT2 Hot_control AF11 0.9654152 FMT2 Hot_control AF13 0.8818742 FMT2 Hot_control AFU87 0.8810513 Wild Control AFU88 0.8317800 Wild Treatment AFU91 0.8923699 Wild Treatment AFU92 0.8094776 Wild Treatment AFU93 0.8517368 Wild Control AFU94 0.8325385 Wild Treatment AFU95 0.8419270 Wild Treatment AFU96 0.8326820 Wild Control AFU97 0.8107271 Wild Treatment AFU98 0.7506522 Wild Control AFU99 0.8582371 Wild Treatment AFV01 0.9331539 Wild Treatment AFV02 0.8316460 Wild Treatment AFV03 0.8752591 Wild Control AFV04 0.9180285 Wild Control AFV05 1.0000000 Wild Control AFV06 1.0000000 Wild Control AFV07 0.8460805 Wild Control AFV08 0.7497043 Wild Hot_control AFV09 0.5412999 Wild Hot_control AFV10 0.8002499 Wild Hot_control AFV11 0.8225298 Wild Hot_control AFV12 0.7925988 Wild Hot_control AFV14 0.8106269 Wild Hot_control AFV15 0.9691106 Wild Hot_control AFV16 0.8218990 Wild Hot_control AFV17 0.8091152 Wild Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.55, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.55, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add genome-size ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_manual(values = &quot;#cccccc&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=length, y=genome), offset = 0.05, orientation=&quot;y&quot;, stat=&quot;identity&quot;) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=3.4, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.2, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=4.7, y=0, label=&#39; Genome size&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata$completeness %&gt;% mean() [1] 92.98658 genome_metadata$completeness %&gt;% sd() [1] 7.170467 genome_metadata$contamination %&gt;% mean() [1] 2.154888 genome_metadata$contamination %&gt;% sd() [1] 2.194372 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db2) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination # Generate the tSNE ordination tSNE_function &lt;- Rtsne(X=function_table, dims = 2, check_duplicates = FALSE) # Plot the ordination function_ordination &lt;- tSNE_function$Y %&gt;% as.data.frame() %&gt;% mutate(genome=rownames(function_table)) %&gt;% inner_join(genome_metadata, by=&quot;genome&quot;) %&gt;% rename(tSNE1=&quot;V1&quot;, tSNE2=&quot;V2&quot;) %&gt;% select(genome,phylum,tSNE1,tSNE2, length) %&gt;% ggplot(aes(x = tSNE1, y = tSNE2, color = phylum, size=length))+ geom_point(shape=16, alpha=0.7) + scale_color_manual(values=phylum_colors) + theme_minimal() + labs(color=&quot;Phylum&quot;, size=&quot;Genome size&quot;) + guides(color = guide_legend(override.aes = list(size = 5))) # enlarge Phylum dots in legend function_ordination "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data_27022025.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample # transplants_metadata &lt;- sample_metadata %&gt;% # mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) # transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, # &quot;_&quot;, # transplants_metadata$individual) merged_data &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome), ~ . / sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes( x = sample, y = count, fill = phylum, group = phylum )) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat = &quot;identity&quot;, colour = &quot;white&quot;, linewidth = 0.1) + #plot stacked bars with white borders scale_fill_manual(values = phylum_colors) + facet_nested(. ~ time_point + type , scales = &quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill = &quot;Phylum&quot;, y = &quot;Relative abundance&quot;, x = &quot;Sample&quot;) + theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), strip.background = element_rect(fill =&quot;lightgrey&quot;), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.1.1 Wild samples merged_data %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% ggplot(aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Population, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), strip.background = element_rect(fill =&quot;lightgrey&quot;), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) 5.1.2.1 Cold and wet population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_glqdpdkytofes7fxutot, .table th.tinytable_css_glqdpdkytofes7fxutot { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_31zu77j5s6zf84hosdzp, .table th.tinytable_css_31zu77j5s6zf84hosdzp { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum total p__Bacteroidota 41.93±15.4 p__Bacillota_A 33.96±16.7 p__Bacillota 5.73±4.73 p__Campylobacterota 5.39±4.64 p__Verrucomicrobiota 4.36±3.06 p__Pseudomonadota 3.75±3.76 p__Desulfobacterota 2.31±1.6 p__Bacillota_C 0.85±0.82 p__Cyanobacteriota 0.64±0.83 p__Bacillota_B 0.5±0.77 p__Fusobacteriota 0.37±1.28 p__Spirochaetota 0.12±0.35 p__Actinomycetota 0.09±0.22 5.1.2.2 Hot and dry population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_b89hbgv1app4iqb6yty4, .table th.tinytable_css_b89hbgv1app4iqb6yty4 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_990xb9owbgkl6h3tvza6, .table th.tinytable_css_990xb9owbgkl6h3tvza6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum total p__Bacillota_A 33.9±16.17 p__Bacteroidota 27.63±17.64 p__Campylobacterota 13.53±20.98 p__Pseudomonadota 10.92±9.94 p__Bacillota 6.09±7.66 p__Spirochaetota 2.66±2.78 p__Desulfobacterota 1.69±1.85 p__Fusobacteriota 1.34±1.73 p__Bacillota_B 0.76±0.73 p__Bacillota_C 0.73±0.5 p__Cyanobacteriota 0.52±0.65 p__Chlamydiota 0.12±0.18 p__Verrucomicrobiota 0.06±0.1 p__Elusimicrobiota 0.05±0.14 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["calculations.html", "Chapter 6 Calculations 6.1 Alpha diversity 6.2 Beta diversity 6.3 Phyloseq object 6.4 Functional data", " Chapter 6 Calculations load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/beta_27022025.Rdata&quot;) 6.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) 6.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% hillpair(., q = 1, tree = genome_tree) 6.3 Phyloseq object #Phyloseq object count_phy &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% otu_table(., taxa_are_rows=T) sample_info_tab_phy &lt;- sample_metadata%&gt;% column_to_rownames(var=&quot;Tube_code&quot;)%&gt;% sample_data() TAX &lt;- genome_metadata%&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% select(1:7)%&gt;% as.matrix()%&gt;% tax_table() tree &lt;- phy_tree(genome_tree) physeq_all = phyloseq(count_phy, TAX, sample_info_tab_phy, tree) 6.4 Functional data # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db2) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db2) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db2) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db2) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db2) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db2) uniqueGIFT_db &lt;- unique(GIFT_db2[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% left_join(sample_metadata[c(1, 7, 10)], by = &quot;Tube_code&quot;) save(richness, neutral, phylogenetic, alpha_div, physeq_all, beta_q0n, beta_q1n, beta_q1p, GIFTs_elements_filtered, GIFTs_elements_community, GIFTs_functions_community, GIFTs_domains_community, element_gift, uniqueGIFT_db, file = &quot;data/calculations_28022025.Rdata&quot;) "],["is-the-gm-of-cold--vs-warm-adapted-populations-similar-in-the-wild.html", "Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? 7.1 Shared and unique MAGs 7.2 Alpha diversity 7.3 Beta diversity 7.4 Differential abundance 7.5 Functional capacity", " Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 7.1 Shared and unique MAGs 7.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 7.3 Beta diversity Number of samples used samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) length(samples_to_keep) [1] 27 Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.974 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.972 Hot_dry 0.97302 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_x1id8px5c4kprpzaweyu, .table th.tinytable_css_x1id8px5c4kprpzaweyu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ubt92mn0bkyhdcju335z, .table th.tinytable_css_ubt92mn0bkyhdcju335z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.945 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.945 Hot_dry 0.94763 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_edpjoj3el2chcytyn2r9, .table th.tinytable_css_edpjoj3el2chcytyn2r9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8qc5nle60ond2htsn5hx, .table th.tinytable_css_8qc5nle60ond2htsn5hx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.129 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.132 Hot_dry 0.12705 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_iikub25ehkl40rnvgr7k, .table th.tinytable_css_iikub25ehkl40rnvgr7k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ew1jl6ddi5a3tw87cilo, .table th.tinytable_css_ew1jl6ddi5a3tw87cilo { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA NMDS beta_q0n_nmds_wild &lt;- richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1n_nmds_wild &lt;- neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1p_nmds_wild &lt;- phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_q0n_nmds_wild, beta_q1n_nmds_wild, beta_q1p_nmds_wild, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 7.4 Differential abundance physeq_wild &lt;- subset_samples(physeq_all, time_point == &quot;Wild&quot;) physeq_wild &lt;- prune_taxa(taxa_sums(physeq_wild)&gt;0, physeq_wild) 7.4.1 Phylum ancom_rand_output_wild_phylum$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) taxon lfc_PopulationHot_dry p_PopulationHot_dry 1 p__Verrucomicrobiota -2.5128949 6.172660e-07 2 p__Pseudomonadota 1.3793700 5.156499e-03 3 p__Fusobacteriota 1.4285919 1.055620e-02 4 p__Bacillota_B 0.9904266 1.350476e-02 7.4.2 MAG level Structural zeros # Extract structural zeros structural_zeros &lt;- ancom_rand_output$zero_ind # Convert to a data frame for better readability structural_zeros_df &lt;- as.data.frame(structural_zeros) %&gt;% column_to_rownames(., &quot;taxon&quot;) # Find taxa that are structural zeros in at least one group structural_zero_taxa &lt;- rownames(structural_zeros_df)[apply(structural_zeros_df, 1, any)] length(structural_zero_taxa) [1] 168 Differentially abundant MAGs taxon lfc_PopulationHot_dry p_PopulationHot_dry domain phylum class order 1 AH1_2nd_16:bin_000008 -2.3169976 1.095165e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 2 AH1_2nd_14:bin_000052 -1.9338966 2.652123e-06 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 3 AH1_2nd_11:bin_000008 -1.6078296 2.983262e-04 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Verrucomicrobiales 4 AH1_2nd_5:bin_000001 -1.2294521 1.954261e-03 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 5 AH1_2nd_10:bin_000007 -1.1638531 4.164494e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 6 AH1_2nd_19:bin_000055 -1.1535004 3.690569e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 7 AH1_2nd_1:bin_000015 -1.1156016 1.737148e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 8 AH1_2nd_6:bin_000046 -1.1074881 3.276440e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 9 AH1_2nd_15:bin_000043 -1.0795980 2.056989e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 10 AH1_2nd_20:bin_000004 -1.0699685 4.022735e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 11 AH1_2nd_9:bin_000002 -1.0564580 1.102335e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 12 AH1_2nd_1:bin_000039 -1.0301421 3.733585e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 13 LI1_2nd_4:bin_000026 -0.9769547 6.418113e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 14 AH1_2nd_12:bin_000012 -0.9171823 6.135156e-03 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales 15 AH1_2nd_1:bin_000003 -0.9008034 1.465243e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales 16 AH1_2nd_16:bin_000011 -0.8882510 1.505088e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 17 AH1_2nd_12:bin_000018 -0.8857429 7.274891e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 18 AH1_2nd_1:bin_000023 -0.7855826 2.370175e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 19 AH1_2nd_15:bin_000004 -0.7407240 1.449541e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 20 AH1_2nd_8:bin_000056 -0.7178242 2.561905e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 21 LI1_2nd_7:bin_000042 -0.6526278 4.797634e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 22 AH1_2nd_7:bin_000011 0.7116366 3.680000e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 23 AH1_2nd_7:bin_000055 0.8505725 4.653353e-02 d__Bacteria Bacillota c__Bacilli Mycoplasmatales 24 AH1_2nd_20:bin_000075 0.8989975 1.939073e-02 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales 25 LI1_2nd_8:bin_000033 1.0012730 1.969652e-03 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 26 AH1_2nd_1:bin_000028 1.0562209 3.854314e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rickettsiales 27 LI1_2nd_4:bin_000001 1.0743058 6.937520e-03 d__Bacteria Bacillota_A c__Clostridia Christensenellales 28 LI1_2nd_9:bin_000032 1.0943233 2.355081e-02 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 29 AH1_2nd_16:bin_000058 1.1405745 4.861518e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 30 LI1_2nd_7:bin_000051 1.1773688 7.115920e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 31 AH1_2nd_11:bin_000005 1.1863288 2.153657e-02 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales 32 LI1_2nd_7:bin_000008 1.2007603 1.107336e-02 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 33 LI1_2nd_4:bin_000045 1.2010771 3.593861e-03 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales 34 LI1_2nd_2:bin_000006 1.2527113 2.701899e-02 d__Bacteria Bacillota_A c__Clostridia Christensenellales 35 LI1_2nd_4:bin_000041 1.3587556 5.833770e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 36 LI1_2nd_8:bin_000019 1.4756993 7.215209e-04 d__Bacteria Bacillota_A c__Clostridia Christensenellales 37 AH1_2nd_19:bin_000005 1.8846731 6.542042e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 38 LI1_2nd_5:bin_000023 2.4997493 8.581644e-04 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 family genus species 1 2 Bacteroidaceae Bacteroides 3 Akkermansiaceae Akkermansia 4 5 6 Tannerellaceae Parabacteroides 7 Lachnospiraceae MGBC136627 8 Bacteroidaceae Bacteroides 9 Bacteroidaceae Bacteroides 10 Lachnospiraceae Roseburia 11 Bacteroidaceae Phocaeicola 12 Marinifilaceae Odoribacter 13 Marinifilaceae Odoribacter 14 Helicobacteraceae Helicobacter_J 15 Gastranaerophilaceae Scatousia 16 Anaerotignaceae 17 Rikenellaceae Alistipes 18 Lachnospiraceae 19 Lachnospiraceae UMGS1251 20 Bacteroidaceae Bacteroides 21 Tannerellaceae Parabacteroides_B 22 Lachnospiraceae Lacrimispora 23 Mycoplasmoidaceae Ureaplasma 24 Desulfovibrionaceae Mailhella 25 26 UBA1997 CALXRO01 27 28 CAG-239 CAZU01 29 Lachnospiraceae Enterocloster 30 Lachnospiraceae RGIG4733 31 Fusobacteriaceae Fusobacterium_A Fusobacterium_A ulcerans 32 Erysipelotrichaceae Breznakia 33 Anaerovoracaceae IOR16 34 MGBC116941 MGBC116941 35 Lachnospiraceae Clostridium_Q 36 UBA3700 37 Lachnospiraceae Roseburia 38 Phyla of the significant MAGs in warm ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 9 2 Pseudomonadota 3 3 Bacillota 2 4 Bacillota_C 1 5 Desulfobacterota 1 6 Fusobacteriota 1 Phyla of the significant MAGs in cold ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 10 2 Bacillota_A 7 3 Bacillota_C 1 4 Campylobacterota 1 5 Cyanobacteriota 1 6 Verrucomicrobiota 1 7.5 Functional capacity 7.5.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_wet 0.346 0.0194 2 Hot_dry 0.327 0.0244 MCI_element_wild &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) shapiro.test(MCI_element_wild$value) #normality test Shapiro-Wilk normality test data: MCI_element_wild$value W = 0.96385, p-value = 0.4503 var.test(value ~ Population, data = MCI_element_wild) F test to compare two variances data: value by Population F = 0.63604, num df = 17, denom df = 8, p-value = 0.4114 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.1569001 1.9468860 sample estimates: ratio of variances 0.636035 t.test(value ~ Population, data=MCI_element_wild, var.equal = TRUE) Two Sample t-test data: value by Population t = 2.2416, df = 25, p-value = 0.03411 alternative hypothesis: true difference in means between group Cold_wet and group Hot_dry is not equal to 0 95 percent confidence interval: 0.001570698 0.037107300 sample estimates: mean in group Cold_wet mean in group Hot_dry 0.3461279 0.3267889 7.5.2 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 4)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 4)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_wet-Hot_dry)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Hot&quot;,&quot;Cold&quot;)) difference_table_wild %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["what-is-the-effect-of-acclimation.html", "Chapter 8 What is the effect of acclimation?", " Chapter 8 What is the effect of acclimation? load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/calculations_28022025.Rdata&quot;) 8.0.1 Do each population retain the wild GM after acclimation? 8.0.1.1 Cold 8.0.1.1.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Treatment&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% mutate(time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% ggplot(aes( y = value, x = time_point, group = time_point, color = time_point, fill = time_point )) + geom_boxplot(outlier.shape = NA, alpha = 0.5) + geom_jitter(alpha = 0.5) + scale_color_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;) ) + scale_fill_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;) ) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size = 3, label.x = .58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size = 10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.0.1.1.2 Beta diversity samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02799 0.027989 2.2359 999 0.149 Residuals 33 0.41309 0.012518 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation Wild Acclimation 0.142 Wild 0.14434 adonis2(neutral_accli ~ time_point, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999, strata = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p2wipzz0cr7k9qf9i5z9, .table th.tinytable_css_p2wipzz0cr7k9qf9i5z9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_afp9syr9r2pbe368all7, .table th.tinytable_css_afp9syr9r2pbe368all7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.7466371 0.08498327 3.064914 0.001 Residual 33 8.0390580 0.91501673 NA NA Total 34 8.7856951 1.00000000 NA NA 8.0.1.1.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(Population == &quot;Cold_wet&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0319 2 Wild 0.346 0.0194 MCI_element_accli &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Treatment&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) shapiro.test(MCI_element_accli$value) Shapiro-Wilk normality test data: MCI_element_accli$value W = 0.93368, p-value = 0.2252 var.test(value ~ time_point, data = MCI_element_accli) F test to compare two variances data: value by time_point F = 3.7594, num df = 8, denom df = 8, p-value = 0.07895 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.8480072 16.6665586 sample estimates: ratio of variances 3.759436 t.test(value ~ time_point, data=MCI_element_accli, var.equal = TRUE) Two Sample t-test data: value by time_point t = -1.0608, df = 16, p-value = 0.3045 alternative hypothesis: true difference in means between group Acclimation and group Wild is not equal to 0 95 percent confidence interval: -0.05046008 0.01680192 sample estimates: mean in group Acclimation mean in group Wild 0.3256751 0.3425042 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1,10)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 10)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Wild-Acclimation)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Acclimation&quot;,&quot;Wild&quot;)) difference_table_wild Elements Acclimation Wild Function Element Difference group_color 1 B0302 0.009388318 9.027184e-05 Amino acid derivative biosynthesis_Betaine Betaine -0.009298046 Acclimation 2 D0212 0.434367300 5.601500e-01 Polysaccharide degradation_Arabinan Arabinan 0.125782700 Wild 8.0.1.2 Warm 8.0.1.2.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type==&quot;Hot_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% mutate(time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;, &quot;functional&quot;))) %&gt;% ggplot(aes( y = value, x = time_point, group = time_point, color = time_point, fill = time_point )) + geom_boxplot(outlier.shape = NA, alpha = 0.5) + geom_jitter(alpha = 0.5) + scale_color_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;) ) + scale_fill_manual( name = &quot;Population&quot;, breaks = c(&quot;Wild&quot;, &quot;Acclimation&quot;), labels = c(&quot;Wild&quot;, &quot;Acclimation&quot;), values = c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;) ) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size = 3, label.x = .58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size = 10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.0.1.2.2 Beta diversity samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.006545 0.0065454 0.6009 999 0.469 Residuals 16 0.174278 0.0108924 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation Wild Acclimation 0.467 Wild 0.44953 adonis2(neutral_accli ~ time_point, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999, strata = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xo7qftqowtd3q6h02pjj, .table th.tinytable_css_xo7qftqowtd3q6h02pjj { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_b4cv4nzm564vuo4j0l98, .table th.tinytable_css_b4cv4nzm564vuo4j0l98 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.6314393 0.1605468 3.060027 0.00390625 Residual 16 3.3016150 0.8394532 NA NA Total 17 3.9330543 1.0000000 NA NA 8.0.1.2.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.348 0.0158 2 Wild 0.327 0.0244 MCI_element_accli &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(type == &quot;Hot_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Wild&quot;)) shapiro.test(MCI_element_accli$value) Shapiro-Wilk normality test data: MCI_element_accli$value W = 0.95424, p-value = 0.4953 var.test(value ~ time_point, data = MCI_element_accli) F test to compare two variances data: value by time_point F = 0.42062, num df = 8, denom df = 8, p-value = 0.242 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.09487754 1.86470356 sample estimates: ratio of variances 0.4206168 t.test(value ~ time_point, data=MCI_element_accli, var.equal = TRUE) Two Sample t-test data: value by time_point t = 2.1708, df = 16, p-value = 0.04533 alternative hypothesis: true difference in means between group Acclimation and group Wild is not equal to 0 95 percent confidence interval: 0.0004930409 0.0415286535 sample estimates: mean in group Acclimation mean in group Wild 0.3477997 0.3267889 Differences in functional pathways element_gift_warm &lt;- element_gift %&gt;% filter(type==&quot;Hot_control&quot; &amp; time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1,10)], by = &quot;Tube_code&quot;) significant_elements_warm &lt;- element_gift_warm %&gt;% pivot_longer(-c(Tube_code,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_warm &lt;- element_gift_warm %&gt;% select(Tube_code, all_of(intersect( significant_elements_warm$trait, colnames(element_gift_warm) ))) %&gt;% left_join(., sample_metadata[c(1, 10)], by = join_by(Tube_code == Tube_code)) difference_table_warm &lt;- element_gift_sig_warm %&gt;% select(-Tube_code) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Wild)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Wild&quot;,&quot;Acclimation&quot;)) difference_table_warm %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#e5bd5b&quot;, &quot;#6b7398&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) 8.0.2 Do populations mantain a different GM after acclimation? 8.0.2.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.0.2.2 Beta diversity Number of samples used samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) length(samples_to_keep_accli) [1] 26 Richness richness_accli &lt;- as.matrix(beta_q0n$S) richness_accli &lt;- as.dist(richness_accli[rownames(richness_accli) %in% samples_to_keep_accli, colnames(richness_accli) %in% samples_to_keep_accli]) betadisper(richness_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.093187 0.093187 11.812 999 0.004 ** Residuals 24 0.189340 0.007889 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.002 Hot_dry 0.0021532 adonis2(richness_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(richness_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ykcdd1qyab77wtq7melu, .table th.tinytable_css_ykcdd1qyab77wtq7melu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_p2opfkptby93p930lxk6, .table th.tinytable_css_p2opfkptby93p930lxk6 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.639630 0.1929088 5.736415 0.001 Residual 24 6.859879 0.8070912 NA NA Total 25 8.499509 1.0000000 NA NA Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.05603 0.056026 4.1918 999 0.051 . Residuals 24 0.32077 0.013365 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.047 Hot_dry 0.051717 adonis2(neutral_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_s28osvz20si2pwj43ob5, .table th.tinytable_css_s28osvz20si2pwj43ob5 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_87fdthro9uebp2xw1w64, .table th.tinytable_css_87fdthro9uebp2xw1w64 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.961192 0.2493171 7.970889 0.001 Residual 24 5.905063 0.7506829 NA NA Total 25 7.866255 1.0000000 NA NA Phylogenetic phylo_accli &lt;- as.matrix(beta_q1p$S) phylo_accli &lt;- as.dist(phylo_accli[rownames(phylo_accli) %in% samples_to_keep_accli, colnames(phylo_accli) %in% samples_to_keep_accli]) betadisper(phylo_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03637 0.036365 2.3087 999 0.145 Residuals 24 0.37804 0.015752 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_wet Hot_dry Cold_wet 0.149 Hot_dry 0.14172 adonis2(phylo_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(phylo_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_no95zz1zr8d0f3z61u4n, .table th.tinytable_css_no95zz1zr8d0f3z61u4n { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4b363e18hgng38sgp8w7, .table th.tinytable_css_4b363e18hgng38sgp8w7 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.2113395 0.1379515 3.84066 0.012 Residual 24 1.3206449 0.8620485 NA NA Total 25 1.5319844 1.0000000 NA NA NMDS beta_q0n_nmds_accli &lt;- richness_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1n_nmds_accli &lt;- neutral_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_q1p_nmds_accli &lt;- phylo_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange( beta_q0n_nmds_accli, beta_q1n_nmds_accli, beta_q1p_nmds_accli, ncol = 2, nrow = 2, common.legend = TRUE, legend = &quot;right&quot; ) "],["fmt.html", "Chapter 9 FMT 9.1 FMT1 9.2 FMT2", " Chapter 9 FMT load(&quot;data/data_27022025.Rdata&quot;) load(&quot;data/beta_27022025.Rdata&quot;) 9.1 FMT1 9.1.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 9.1.1.1 Alpha bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) Richness Modelq0GLMMNB &lt;- glm.nb(richness ~ type, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) emmeans(Modelq0GLMMNB, pairwise ~ type) Neutral Modelq1n &lt;- lm(formula = neutral ~ type, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -20.699 -6.867 -1.015 7.111 15.828 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 17.359 3.413 5.086 3.77e-05 *** typeHot_control 8.380 4.827 1.736 0.0959 . typeTreatment 7.504 4.975 1.508 0.1451 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 10.24 on 23 degrees of freedom Multiple R-squared: 0.1352, Adjusted R-squared: 0.05998 F-statistic: 1.798 on 2 and 23 DF, p-value: 0.1882 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ type, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -1.70296 -0.47597 -0.04695 0.47894 1.40748 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 4.4192 0.2811 15.722 8.51e-14 *** typeHot_control -0.1446 0.3975 -0.364 0.719 typeTreatment -0.2291 0.4098 -0.559 0.581 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 0.8433 on 23 degrees of freedom Multiple R-squared: 0.01389, Adjusted R-squared: -0.07186 F-statistic: 0.162 on 2 and 23 DF, p-value: 0.8514 9.1.1.2 Beta diversity Number of samples used samples_to_keep_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) length(samples_to_keep_post1) [1] 26 Richness richness_post1 &lt;- as.matrix(beta_q0n$S) richness_post1 &lt;- as.dist(richness_post1[rownames(richness_post1) %in% samples_to_keep_post1, colnames(richness_post1) %in% samples_to_keep_post1]) betadisper(richness_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01060 0.0052999 1.1619 999 0.38 Residuals 23 0.10491 0.0045613 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.046000 0.675 Hot_control 0.055742 0.454 Treatment 0.625388 0.420078 adonis2(richness_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.195567 0.1448246 1.947534 0.002 Residual 23 7.059710 0.8551754 NA NA Total 25 8.255277 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(richness_post1),] pairwise &lt;- pairwise.adonis(richness_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_o6hfkymqdo9hxh65gzhu, .table th.tinytable_css_o6hfkymqdo9hxh65gzhu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9sbj2gho4zrm24unutke, .table th.tinytable_css_9sbj2gho4zrm24unutke { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.5615418 1.729004 0.1033537 0.013 0.039 . Control vs Hot_control 1 0.8438429 2.793772 0.1486541 0.002 0.006 * Treatment vs Hot_control 1 0.3734921 1.268929 0.0779971 0.108 0.324 Neutral neutral_post1 &lt;- as.matrix(beta_q1n$S) neutral_post1 &lt;- as.dist(neutral_post1[rownames(neutral_post1) %in% samples_to_keep_post1, colnames(neutral_post1) %in% samples_to_keep_post1]) betadisper(neutral_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002996 0.0014982 0.1374 999 0.883 Residuals 23 0.250747 0.0109020 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.55300 0.877 Hot_control 0.55320 0.784 Treatment 0.86589 0.76648 adonis2(neutral_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_khx4bnmx7jbjcsfx68bi, .table th.tinytable_css_khx4bnmx7jbjcsfx68bi { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8cttbobld5mvixvext93, .table th.tinytable_css_8cttbobld5mvixvext93 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.395968 0.1900228 2.697931 0.002 Residual 23 5.950350 0.8099772 NA NA Total 25 7.346318 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(neutral_post1),] pairwise &lt;- pairwise.adonis(neutral_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xmij3se8qn5wlzp8tmi1, .table th.tinytable_css_xmij3se8qn5wlzp8tmi1 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9xrgxg2vvuw38m1dsj9w, .table th.tinytable_css_9xrgxg2vvuw38m1dsj9w { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6051778 2.250849 0.13047758 0.013 0.039 . Control vs Hot_control 1 1.0528902 4.143637 0.20570451 0.001 0.003 * Treatment vs Hot_control 1 0.4150076 1.637268 0.09840968 0.047 0.141 Phylogenetic phylo_post1 &lt;- as.matrix(beta_q1p$S) phylo_post1 &lt;- as.dist(phylo_post1[rownames(phylo_post1) %in% samples_to_keep_post1, colnames(phylo_post1) %in% samples_to_keep_post1]) betadisper(phylo_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00399 0.0019943 0.1213 999 0.912 Residuals 23 0.37812 0.0164399 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.92600 0.710 Hot_control 0.91065 0.775 Treatment 0.65272 0.74852 adonis2(phylo_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_7a8inmgyn0mmupla9vna, .table th.tinytable_css_7a8inmgyn0mmupla9vna { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0ssnpq3yjg5qrvzsh2cb, .table th.tinytable_css_0ssnpq3yjg5qrvzsh2cb { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.07451036 0.07059466 0.8735033 0.558 Residual 23 0.98095695 0.92940534 NA NA Total 25 1.05546731 1.00000000 NA NA NMDS beta_richness_nmds_post1 &lt;- richness_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_post1 &lt;- neutral_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_post1 &lt;- phylo_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_post1, beta_neutral_nmds_post1, beta_phylogenetic_nmds_post1, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 9.1.1.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.373 0.0247 2 Hot_control 0.372 0.0367 3 Treatment 0.353 0.0186 MCI_tm5_ele &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT1&quot;) shapiro.test(MCI_tm5_ele$value)#normality test Shapiro-Wilk normality test data: MCI_tm5_ele$value W = 0.92343, p-value = 0.05415 res.aov &lt;- aov(value ~ type, data = MCI_tm5_ele)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00216 0.0010798 1.371 0.274 Residuals 23 0.01811 0.0007875 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 9.2 FMT2 9.2.1 Is the GM of the intervention group still more similar to warm population after one week from FMT? 9.2.1.1 Alpha bxp1&lt;-alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;,&quot;functional&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) # Add significance bars with p-values bxp1 + geom_signif(comparisons = list(c(&quot;Control&quot;, &quot;Hot_control&quot;), c(&quot;Control&quot;, &quot;Treatment&quot;), c(&quot;Hot_control&quot;, &quot;Treatment&quot;)), map_signif_level = TRUE) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) Richness Modelq0GLMMNB &lt;- glm.nb(richness ~ type, data = alpha_div_meta,trace=TRUE) summary(Modelq0GLMMNB) emmeans(Modelq0GLMMNB, pairwise ~ type) Neutral Modelq1n &lt;- lm(formula = neutral ~ type, data = alpha_div_meta) summary(Modelq1n) Call: lm(formula = neutral ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -20.377 -8.201 2.061 5.884 21.492 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 23.718 3.620 6.552 8.92e-07 *** typeHot_control 8.483 5.120 1.657 0.11056 typeTreatment 16.164 5.120 3.157 0.00426 ** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 10.86 on 24 degrees of freedom Multiple R-squared: 0.2936, Adjusted R-squared: 0.2348 F-statistic: 4.988 on 2 and 24 DF, p-value: 0.01543 Phylogenetic Model_phylo &lt;- lm(formula = phylogenetic ~ type, data = alpha_div_meta) summary(Model_phylo) Call: lm(formula = phylogenetic ~ type, data = alpha_div_meta) Residuals: Min 1Q Median 3Q Max -1.82788 -0.66163 -0.00458 0.40169 2.97349 Coefficients: Estimate Std. Error t value Pr(&gt;|t|) (Intercept) 4.7747 0.3816 12.511 5.25e-12 *** typeHot_control 0.6812 0.5397 1.262 0.219 typeTreatment 0.3398 0.5397 0.630 0.535 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Residual standard error: 1.145 on 24 degrees of freedom Multiple R-squared: 0.06225, Adjusted R-squared: -0.0159 F-statistic: 0.7965 on 2 and 24 DF, p-value: 0.4625 9.2.1.2 Beta diversity Number of samples used samples_to_keep_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) length(samples_to_keep_FMT2) [1] 27 Richness richness_FMT2 &lt;- as.matrix(beta_q0n$S) richness_FMT2 &lt;- as.dist(richness_FMT2[rownames(richness_FMT2) %in% samples_to_keep_FMT2, colnames(richness_FMT2) %in% samples_to_keep_FMT2]) betadisper(richness_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.003043 0.0015214 0.2578 999 0.805 Residuals 24 0.141630 0.0059013 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.93900 0.524 Hot_control 0.93628 0.568 Treatment 0.50455 0.54043 adonis2(richness_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(richness_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_u0nep4r6ph0iosuhj8tx, .table th.tinytable_css_u0nep4r6ph0iosuhj8tx { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aur00t2h69wogv08larg, .table th.tinytable_css_aur00t2h69wogv08larg { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.504341 0.1967776 2.939822 0.001 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(richness_FMT2),] pairwise &lt;- pairwise.adonis(richness_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_qd0q7v8wkjyfa5ifnozz, .table th.tinytable_css_qd0q7v8wkjyfa5ifnozz { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e27qhhrn9k91jtuqh1xc, .table th.tinytable_css_e27qhhrn9k91jtuqh1xc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.6463814 2.560441 0.1379515 0.001 0.003 * Control vs Hot_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * Treatment vs Hot_control 1 0.4796256 1.916520 0.1069694 0.001 0.003 * Neutral neutral_FMT2 &lt;- as.matrix(beta_q1n$S) neutral_FMT2 &lt;- as.dist(neutral_FMT2[rownames(neutral_FMT2) %in% samples_to_keep_FMT2, colnames(neutral_FMT2) %in% samples_to_keep_FMT2]) betadisper(neutral_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.005365 0.0026827 0.309 999 0.705 Residuals 24 0.208332 0.0086805 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.74100 0.635 Hot_control 0.75233 0.454 Treatment 0.64640 0.46107 adonis2(neutral_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(neutral_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_z8gcb48ntahf4u7tl5t9, .table th.tinytable_css_z8gcb48ntahf4u7tl5t9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dqd40unkfqiqiosznwwn, .table th.tinytable_css_dqd40unkfqiqiosznwwn { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.923807 0.2603795 4.224537 0.001 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(neutral_FMT2),] pairwise &lt;- pairwise.adonis(neutral_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_ohcfpytn467mwa3pabwo, .table th.tinytable_css_ohcfpytn467mwa3pabwo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2rklnabaxwut3cpb0l6q, .table th.tinytable_css_2rklnabaxwut3cpb0l6q { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 1.0227481 4.648335 0.2251191 0.001 0.003 * Control vs Hot_control 1 1.3619424 5.771031 0.2650785 0.002 0.006 * Treatment vs Hot_control 1 0.5010202 2.206532 0.1211945 0.002 0.006 * Phylogenetic phylo_FMT2 &lt;- as.matrix(beta_q1p$S) phylo_FMT2 &lt;- as.dist(phylo_FMT2[rownames(phylo_FMT2) %in% samples_to_keep_FMT2, colnames(phylo_FMT2) %in% samples_to_keep_FMT2]) betadisper(phylo_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002880 0.0014398 0.3483 999 0.699 Residuals 24 0.099207 0.0041336 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Control Hot_control Treatment Control 0.79800 0.589 Hot_control 0.79696 0.400 Treatment 0.60817 0.41749 adonis2(phylo_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(phylo_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xeif8qefmvbimigcj3y3, .table th.tinytable_css_xeif8qefmvbimigcj3y3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5rub4wlb7g8vbozhgbza, .table th.tinytable_css_5rub4wlb7g8vbozhgbza { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.1594363 0.2042241 3.079623 0.001 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(phylo_FMT2),] pairwise &lt;- pairwise.adonis(phylo_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_lz76lu17fcs1rzq806lo, .table th.tinytable_css_lz76lu17fcs1rzq806lo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ep72l6yt025lt975bu3f, .table th.tinytable_css_ep72l6yt025lt975bu3f { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Control vs Treatment 1 0.05927454 2.382025 0.1295845 0.024 0.072 Control vs Hot_control 1 0.11081709 4.043656 0.2017424 0.002 0.006 * Treatment vs Hot_control 1 0.06906280 2.722460 0.1454115 0.003 0.009 * NMDS beta_richness_nmds_FMT2 &lt;- richness_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_neutral_nmds_FMT2 &lt;- neutral_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) beta_phylogenetic_nmds_FMT2 &lt;- phylo_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) ggarrange(beta_richness_nmds_FMT2, beta_neutral_nmds_FMT2, beta_phylogenetic_nmds_FMT2, ncol=2, nrow=2, common.legend = TRUE, legend=&quot;right&quot;) 9.2.1.3 Differentially abundant MAGs 9.2.1.3.1 Warm vs Intervention physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output$res %&gt;% dplyr::select(taxon, lfc_PopulationHot_dry, p_PopulationHot_dry) %&gt;% filter(p_PopulationHot_dry &lt; 0.05) taxon lfc_PopulationHot_dry p_PopulationHot_dry 1 LI1_2nd_5:bin_000037 1.0973154 0.006604312 2 AH1_2nd_6:bin_000037 2.0385135 0.003090836 3 AH1_2nd_16:bin_000019 1.2068280 0.033600824 4 AH1_2nd_11:bin_000028 -1.2898008 0.001774360 5 AH1_2nd_5:bin_000051 1.2187097 0.043324430 6 LI1_2nd_4:bin_000036 1.2643286 0.012569823 7 AH1_2nd_10:bin_000097 -1.0029886 0.030302310 8 LI1_2nd_7:bin_000038 1.8699634 0.015107894 9 LI1_2nd_7:bin_000014 0.8972709 0.017473969 10 AH1_2nd_7:bin_000028 2.1074592 0.010599052 11 AH1_2nd_13:bin_000011 0.9150738 0.031321135 12 AH1_2nd_6:bin_000030 1.1119027 0.015814549 13 LI1_2nd_1:bin_000014 -0.8425242 0.008906495 14 AH1_2nd_16:bin_000064 -0.6991004 0.024836637 15 AH1_2nd_5:bin_000004 0.7310368 0.034016114 16 LI1_2nd_3:bin_000017 2.5450758 0.010896862 17 AH1_2nd_19:bin_000005 2.1363627 0.017976760 18 AH1_2nd_2:bin_000003 -1.0083616 0.023241000 19 AH1_2nd_20:bin_000009 1.6386224 0.014660151 20 AH1_2nd_8:bin_000006 1.0537583 0.014234121 21 LI1_2nd_7:bin_000005 1.3337013 0.001300557 22 AH1_2nd_14:bin_000003 -1.1139124 0.018629079 23 LI1_2nd_4:bin_000052 0.8909290 0.015296671 24 AH1_2nd_16:bin_000018 1.1059097 0.007623376 25 LI1_2nd_5:bin_000013 1.3404114 0.008779827 26 LI1_2nd_4:bin_000001 1.5850156 0.001369553 27 LI1_2nd_2:bin_000006 1.0044356 0.003515549 28 AH1_2nd_5:bin_000006 0.8172523 0.040055609 29 LI1_2nd_7:bin_000016 1.3165139 0.008388055 30 LI1_2nd_4:bin_000003 1.0441282 0.015444020 taxon lfc_PopulationHot_dry p_PopulationHot_dry domain phylum class order 1 AH1_2nd_11:bin_000028 -1.2898008 0.001774360 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 2 AH1_2nd_14:bin_000003 -1.1139124 0.018629079 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 3 AH1_2nd_2:bin_000003 -1.0083616 0.023241000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 4 AH1_2nd_10:bin_000097 -1.0029886 0.030302310 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 5 LI1_2nd_1:bin_000014 -0.8425242 0.008906495 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales 6 AH1_2nd_16:bin_000064 -0.6991004 0.024836637 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 7 AH1_2nd_5:bin_000004 0.7310368 0.034016114 d__Bacteria Bacillota_A c__Clostridia Oscillospirales 8 AH1_2nd_5:bin_000006 0.8172523 0.040055609 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales 9 LI1_2nd_4:bin_000052 0.8909290 0.015296671 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 10 LI1_2nd_7:bin_000014 0.8972709 0.017473969 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales 11 AH1_2nd_13:bin_000011 0.9150738 0.031321135 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 12 LI1_2nd_2:bin_000006 1.0044356 0.003515549 d__Bacteria Bacillota_A c__Clostridia Christensenellales 13 LI1_2nd_4:bin_000003 1.0441282 0.015444020 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 14 AH1_2nd_8:bin_000006 1.0537583 0.014234121 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 15 LI1_2nd_5:bin_000037 1.0973154 0.006604312 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 16 AH1_2nd_16:bin_000018 1.1059097 0.007623376 d__Bacteria Bacillota_A c__Clostridia Christensenellales 17 AH1_2nd_6:bin_000030 1.1119027 0.015814549 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 18 AH1_2nd_16:bin_000019 1.2068280 0.033600824 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 19 AH1_2nd_5:bin_000051 1.2187097 0.043324430 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 20 LI1_2nd_4:bin_000036 1.2643286 0.012569823 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 21 LI1_2nd_7:bin_000016 1.3165139 0.008388055 d__Bacteria Bacillota c__Bacilli Erysipelotrichales 22 LI1_2nd_7:bin_000005 1.3337013 0.001300557 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 23 LI1_2nd_5:bin_000013 1.3404114 0.008779827 d__Bacteria Bacillota_A c__Clostridia Christensenellales 24 LI1_2nd_4:bin_000001 1.5850156 0.001369553 d__Bacteria Bacillota_A c__Clostridia Christensenellales 25 AH1_2nd_20:bin_000009 1.6386224 0.014660151 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 26 LI1_2nd_7:bin_000038 1.8699634 0.015107894 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 27 AH1_2nd_6:bin_000037 2.0385135 0.003090836 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 28 AH1_2nd_7:bin_000028 2.1074592 0.010599052 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales 29 AH1_2nd_19:bin_000005 2.1363627 0.017976760 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 30 LI1_2nd_3:bin_000017 2.5450758 0.010896862 d__Bacteria Bacillota_A c__Clostridia TANB77 family genus species 1 Bacteroidaceae Bacteroides 2 Lachnospiraceae Hungatella_A 3 Lachnospiraceae JAAYNV01 4 Tannerellaceae Parabacteroides 5 Desulfovibrionaceae 6 Oscillospiraceae Scatomorpha 7 Acutalibacteraceae 8 Acidaminococcaceae Phascolarctobacterium Phascolarctobacterium sp900544795 9 Lachnospiraceae Enterocloster 10 UBA1820 Merdimorpha 11 CAG-239 MGBC133411 12 MGBC116941 MGBC116941 13 Erysipelotrichaceae Dielma 14 Lachnospiraceae CAG-95 15 Marinifilaceae Odoribacter 16 UBA3700 17 UBA3830 18 Rikenellaceae Alistipes 19 Bacteroidaceae Bacteroides 20 Bacteroidaceae 21 Erysipelotrichaceae Clostridium_AQ 22 Lachnospiraceae Ventrimonas 23 DTU072 24 25 Lachnospiraceae Kineothrix 26 Tannerellaceae Parabacteroides_B 27 UBA932 Egerieousia 28 Helicobacteraceae NHYM01 29 Lachnospiraceae Roseburia 30 CAG-508 CAG-269 Phyla of the significant MAGs in warm control ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 11 2 Bacteroidota 7 3 Bacillota 2 4 Pseudomonadota 2 5 Bacillota_C 1 6 Campylobacterota 1 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_PopulationHot_dry&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 3 2 Bacteroidota 2 3 Desulfobacterota 1 9.2.1.3.2 Intervention vs cold control physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) taxon lfc_typeTreatment p_typeTreatment 1 AH1_2nd_2:bin_000034 2.0051519 1.120785e-02 2 AH1_2nd_19:bin_000052 2.3284281 2.325728e-02 3 LI1_2nd_7:bin_000012 -1.7569061 1.539293e-02 4 AH1_2nd_12:bin_000009 -1.4187676 4.206041e-02 5 AH1_2nd_8:bin_000051 1.3480932 1.857384e-03 6 AH1_2nd_9:bin_000047 -0.6584569 4.745443e-02 7 AH1_2nd_13:bin_000055 1.5576447 1.324349e-03 8 LI1_2nd_7:bin_000053 1.4351800 6.192408e-03 9 AH1_2nd_14:bin_000052 -0.9800862 3.654950e-02 10 LI1_2nd_10:bin_000018 2.7879501 2.435440e-04 11 AH1_2nd_17:bin_000030 1.0180722 4.427500e-02 12 AH1_2nd_9:bin_000002 -0.7704023 4.999964e-02 13 AH1_2nd_15:bin_000021 -1.0649675 1.315015e-02 14 AH1_2nd_19:bin_000001 -2.7491777 6.505668e-05 15 AH1_2nd_5:bin_000073 0.9679065 2.926932e-02 16 AH1_2nd_18:bin_000047 -1.3438014 2.550430e-02 17 AH1_2nd_12:bin_000012 -1.8611557 1.170334e-02 18 AH1_2nd_7:bin_000028 -3.1284556 4.504019e-02 19 AH1_2nd_13:bin_000011 -1.1609230 1.371637e-02 20 AH1_2nd_7:bin_000003 2.9527332 4.729658e-02 21 AH1_2nd_20:bin_000075 0.9352681 1.186314e-02 22 AH1_2nd_10:bin_000009 1.3408559 2.925651e-03 23 AH1_2nd_5:bin_000004 -1.1305900 3.908130e-03 24 AH1_2nd_19:bin_000005 -2.4924748 2.144614e-02 25 AH1_2nd_1:bin_000005 -1.1013291 3.220710e-02 26 AH1_2nd_2:bin_000003 1.4594281 1.546077e-02 27 AH1_2nd_15:bin_000013 -1.0908051 2.076256e-02 28 LI1_2nd_7:bin_000078 1.2159564 1.534396e-02 29 AH1_2nd_20:bin_000042 1.1567255 1.919604e-02 30 LI1_2nd_8:bin_000048 1.1231216 2.481876e-02 31 AH1_2nd_1:bin_000015 1.2067622 3.068130e-02 32 AH1_2nd_13:bin_000025 1.0298803 4.044629e-02 33 LI1_2nd_8:bin_000019 1.4624813 1.106173e-02 34 AH1_2nd_5:bin_000001 1.5979498 2.260707e-02 35 LI1_2nd_1:bin_000006 0.9939076 2.714515e-02 36 AH1_2nd_12:bin_000041 -0.9891962 3.374591e-02 37 AH1_2nd_17:bin_000029 1.1811988 4.595752e-02 38 AH1_2nd_10:bin_000010 1.4322566 2.191207e-02 39 AH1_2nd_1:bin_000003 -1.2831333 2.116461e-02 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 7 2 Bacteroidota 6 3 Desulfobacterota 2 4 Verrucomicrobiota 2 5 Bacillota 1 6 Bacillota_B 1 7 Bacillota_C 1 8 Cyanobacteriota 1 9 Pseudomonadota 1 Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 8 2 Bacillota_A 4 3 Campylobacterota 2 4 Bacillota 1 5 Cyanobacteriota 1 6 Pseudomonadota 1 9.2.1.4 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Control 0.352 0.0223 2 Hot_control 0.350 0.0293 3 Treatment 0.346 0.0255 MCI_FMT2 &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT2&quot;) shapiro.test(MCI_FMT2$value) Shapiro-Wilk normality test data: MCI_FMT2$value W = 0.96248, p-value = 0.4203 res.aov &lt;- aov(value ~ type, data = MCI_FMT2) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00017 0.0000852 0.127 0.881 Residuals 24 0.01604 0.0006682 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 2 × 6 trait p_value p_adjust Domain Function Element &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 B0208 0.000494 0.0365 Biosynthesis Amino acid biosynthesis_Valine Valine 2 D0902 0.000494 0.0365 Degradation Antibiotic degradation_Carbapenem Carbapenem CI and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Treatment&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Hot_control&quot;, &quot;Control&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 7)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
